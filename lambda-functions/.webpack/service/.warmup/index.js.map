{"version":3,"file":".warmup/index.js","mappings":";;;;;;;AAAA,mC;;;;;;;;;;ACAO;AACP;AACA;;;;;;;;;;;ACFO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA,wC;;;;;;;;;;ACAO;;;;;;;;;;;;;;;ACAqC;AAC5C,QAAQ,WAAW,EAAE,wCAAU;AACxB;AACA;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACZqD;;;ACAK;AACb;AACtC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4CAAgB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kCAAW;AACnB;AACA;AACA;AACA;;;ACxBA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACjB+C;AAC/C,6BAA6B,0BAAc;AAC3C;AACO;AACP,YAAY,aAAa;AACzB;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACO;;;ACxC0D;AACe;AAClC;AACE;AACzC;AACP,+BAA+B,yBAAyB;AACxD,cAAc,QAAQ;AACtB,eAAe,SAAS;AACxB;AACA,sDAAuB;;;ACTuB;AACvC;AACP;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI,sBAAsB;AACvC;AACA;AACA;AACA;AACO;;;ACpBkD;;;ACAF;;;ACA7C;;;ACAA;;;ACAA;;;ACAA;;;ACAA;;;ACAsB;AACK;AACH;AACF;AACC;AACR;;;ACLH;AACc;AACF;AACyB;AACzB;AACV;;;;;;;;;;;;;ACL4B;AACpD;AACO;AACP;AACA;AACA,YAAY,uEAAW;AACvB,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,KAAK;AACL,CAAC;;;;;;;;;;;ACtCM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzBA,+B;;;;;;;;;;;;;;;;;;;;;;ACA2D;AACN;AACW;AACzD;AACP;AACA,eAAe,4BAAQ;AACvB;AACA,WAAW,wBAAM;AACjB;AACO;AACP;AACA,eAAe,qBAAqB,QAAQ,gCAAU;AACtD;AACA,WAAW,qBAAqB,QAAQ,4BAAQ;AAChD;;;ACdsE;AAC/D;AACP;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA,+DAA+D,eAAe;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;;;ACjB4D;AACrD;AACP;AACA,eAAe,qBAAqB;AACpC;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA,WAAW,qBAAqB;AAChC;;;;;;;;;;;;;;ACVoD;AAC7C;AACP;AACA;AACO;AACP,SAAS,uEAAW;AACpB;AACA,YAAY,UAAU;AACtB,YAAY,uBAAuB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,KAAK;AACL,CAAC;;;;;;;;;;;;;AChCM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3FsD;AACtD,uCAAuC,IAAI;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6EAAU;AAC7B;AACA;;;;;;;;;;;ACXA,6HAA6H,EAAE;AACxH;;;;;;;;;;;;;ACDwC;AACmB;AAClE;AACA;AACO;AACP;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kEAAc;AAChD,yDAAyD,oFAAuB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,YAAY;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,oFAAuB;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnD4D;AACS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD,4BAA4B,8BAA8B;AAC1D,qCAAqC,iBAAiB;AACtD,+BAA+B,WAAW;AAC1C;AACA,QAAQ,mFAAoB;AAC5B;AACA;AACA,cAAc,wFAAwB,uDAAuD,sBAAsB;AACnH;;;;;;;;;;;;;;;;;;;;;AC7BO;AACA;AACA;AACA;AACA;AACA;;;ACLP;AACA;AACO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;;ACVqE;AACX;AACN;AACiG;AAC5E;AAClE,qCAAqC,SAAS,kCAAU,CAAC,yCAA0B,kBAAkB,kCAAU,CAAC,iCAAiC,KAAK,IAAI,KAAK,0BAAO;AAC7K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,qBAAqB,YAAY,QAAQ,KAAK;AAC1H;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB,kBAAkB,cAAc,iBAAiB,sBAAsB;AAC5G,2BAA2B,cAAc,iBAAiB,sBAAsB;AAChF;AACA,qBAAqB,iBAAiB;AACtC;AACA,oBAAoB,2CAA2C,QAAQ,mGAA0C;AACjH;AACA,wCAAwC,mBAAmB,gBAAgB,EAAE;AAC7E;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oBAAoB,EAAE,4CAA4C,kBAAkB,QAAQ;AAC1G;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,UAAU;AACtD,SAAS;AACT;AACA,sDAAsD,UAAU;AAChE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D,2BAA2B,yDAAyD;AACpF,sCAAsC,gBAAgB,EAAE,mBAAmB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,sCAAsC;AACtC,oBAAoB,oCAAoC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,6CAA6C;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,kEAAkE;AAClH,mCAAmC,qBAAqB,cAAc,iBAAiB;AACvF,qDAAqD,6CAA6C;AAClG,mCAAmC,gBAAgB,cAAc,YAAY;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB,oCAAoC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,6CAA6C;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,kEAAkE;AAClH,mCAAmC,qBAAqB,GAAG,wBAAwB;AACnF,uCAAuC,6CAA6C,eAAe,gBAAgB;AACnH,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wBAAwB,gCAAgC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxRqD;AAC9C;AACP,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oGAAoG,MAAM;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gCAAY;AAChC,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;ACtDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,sBAAsB;AACzE;AACA;AACA;AACA,KAAK;AACL;;;ACbkE;AACJ;AACvD;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,6BAA6B,sBAAsB;AACnD,6BAA6B,oBAAoB;AACjD,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;ACrBuE;AACtB;AACjB;AACgB;AACzC;AACP;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wEAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kDAAU;AACxB,cAAc,kDAAU;AACxB;AACA;AACA;AACA,QAAQ,0CAAM;AACd;AACA;AACA;AACA,eAAe,6EAAU;AACzB;AACA;AACA,eAAe,kFAAe;AAC9B;AACA,WAAW,kFAAe;AAC1B;;;;;;;;;ACjCa;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D,SAAmB;AACnB,sBAAsB,mBAAO,CAAC,GAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,YAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAmB;;;;;;;;;;;;;;ACzF2B;AACvC,+CAA+C,mEAAiB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrDA,wC;;;;;;;;;;;;;ACA6E;AACtE;AACA;AACA;AACA;AACP,0CAA0C,sFAAe,kCAAkC,+EAAY;AACvG,qCAAqC,sFAAe,yCAAyC,+EAAY;AACzG;AACA;;;;;;;;ACRA,mC;;;;;;;;;;;;ACA0C;AACnC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6CAAS;AACxB;AACA;AACA,eAAe,6CAAS;AACxB;AACA,0DAA0D,KAAK;AAC/D;;;;;;;;;;;ACxBA;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACLO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;AACA;;;ACnB2D;AACD;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA,0BAA0B,4CAAgB;AAC1C;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA,gBAAgB,uBAAuB,2BAA2B;AAClE,iFAAiF;AACjF,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzCsE;AAC/D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO,0DAA0D,mEAAmE;AACpI;AACA,kCAAkC,wBAAwB;AAC1D;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;;;;;;;;;AChB2B;AACc;AACnC;AACA,gEAAgE,0CAAI,CAAC,gEAAU;;;;;;;;;;;ACH/E;AACP,6BAA6B,2CAA2C;;;;;;;;;;;;;;;ACDjE;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtB8D;AACvD;AACP;AACA;AACA;AACA,YAAY,6CAA6C;AACzD;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;ACd4D;AACa;AAClB;AAChD;AACP;AACA,YAAY,kDAAkD;AAC9D,kEAAkE,6EAAY,OAAO,mFAAiB;AACtG;AACA;AACA;AACA;AACA;AACA,8BAA8B,mFAAiB;AAC/C,yBAAyB,mFAAiB;AAC1C,KAAK;AACL;AACA;AACA;AACA,wCAAwC,+FAAqB;AAC7D;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvBO;;;;;;;;;;;;;;;;;;;;ACA6C;AAC7C;AACP;AACA;AACA;AACA,cAAc,+BAAS;AACvB;AACA,iDAAiD,UAAU;AAC3D,8BAA8B,IAAI,GAAG,+BAAS,WAAW;AACzD;AACA;AACA;AACA;AACA;AACA,+BAA+B,+BAAS,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;;;;;ACpBA,MAAM,8BAA4B,oB;;ACA3B;;;ACAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiC;;;ACR1B;AACP;AACA;AACA;;;ACHkC;AAClC;AACO;AACP;AACA;AACA;AACA;AACA,0BAA0B,MAAM;AAChC;AACA,wGAAwG,aAAa;AACrH;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,iBAAiB;AACjB;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;;;ACnCkC;AAClC,MAAM,+CAAyB;AACxB,uCAAuC,2BAA2B,gBAAgB,+CAAyB;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;;;ACrB8D;AAC5B;AAClC,MAAM,4CAAyB;AACxB,yDAAyD,uBAAuB;AACvF;AACA;AACA;AACA;AACA,yEAAyE,aAAa,QAAQ,sBAAsB;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM,+DAA+D,4CAAyB,GAAG,4CAAyB;AACrI;;;;;ACvBkC;AACA;AAClC;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM;AACzC,aAAa;AACb;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA,iBAAiB;AACjB;AACA,oBAAoB,MAAM;AAC1B;AACA,iBAAiB;AACjB;AACA,oBAAoB,MAAM;AAC1B;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvDqD;AACU;AACH;AACG;AACN;AACS;AACF;AACH;AACL;AACtB;AACsB;AACjD;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gCAAgC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,cAAc,MAAM,kBAAkB;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB,2GAA2G;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,oBAAM;AAC/C;AACA;AACA,2BAA2B,oBAAM,GAAG,qCAAqC;AACzE,aAAa;AACb;AACA,0CAA0C,oCAAO;AACjD;AACA;AACA,2BAA2B,oCAAO,GAAG,sCAAsC;AAC3E,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,8BAA8B,IAAI;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,MAAM;AACvC;AACA;AACA;AACA;AACA,iCAAiC,MAAM;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM;AAChC;AACA,aAAa;AACb;AACA,gCAAgC,gBAAgB,oBAAoB;AACpE;AACA;AACA;AACA;AACA,0BAA0B,SAAS,GAAG,SAAS;AAC/C;AACA;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,sCAAS,GAAG,sBAAQ;AAC5D;AACA,yCAAyC,wCAAY;AACrD;AACA;AACA,6BAA6B,qBAAqB;AAClD;AACA,iBAAiB;AACjB,0BAA0B,wBAAwB;AAClD,aAAa;AACb;AACA,oBAAoB,0BAA0B;AAC9C,gDAAgD,sBAAsB;AACtE;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,YAAY;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C,0BAA0B,gBAAgB;AAC1C;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA,iBAAiB;AACjB;AACA,sCAAsC,gBAAgB;AACtD,iCAAiC,MAAM;AACvC;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjNO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;ACpBwD;AACjD,6BAA6B,8CAA8C;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,UAAU,8EAAwB;AAClC;AACO;AACP,cAAc,+BAA+B;AAC7C,4BAA4B,6DAA6D;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACrB+C;AACzC,uCAAuC,kEAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACPO;AACP;AACA;AACA;AACA,CAAC,oCAAoC;;;;;;;;;;;ACJ9B;AACP;;;;;;;;;;;ACDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC5CO;AACP;AACA,4EAA4E,GAAG;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXqE;AACjB;AAC7C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wDAAwB,mCAAmC,eAAe,4BAA4B,KAAK,yBAAyB;AACtJ;AACA;;;;;;;ACbqE;AACkB;AACnC;AAC7C,iDAAiD,oCAAoC,IAAI;AAChG,oBAAoB,yCAAc;AAClC,YAAY,8BAA8B,QAAQ,sDAAqB;AACvE;AACA;AACA;AACA,YAAY;AACZ,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wDAAwB,uDAAuD,QAAQ,KAAK,eAAe,4BAA4B,KAAK,qBAAqB;AACnL;AACA;;;ACtBO;;;ACAqE;AAC5E;AACO,MAAM,qBAAU,mFAAmF,UAAiB;;;ACFhE;AACvB;AAC4B;AACtB;AACnC,sBAAsB,wEAAwE,oBAAoB;AACzH,YAAY,sBAAsB;AAClC,yBAAyB;AACzB,WAAW,0BAAO,CAAC,sBAAK,CAAC,OAAO,2CAA2C,qBAAqB,qCAAqC,qBAAU;AAC/I;;;;;;;;;;;ACRO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACbO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;ACdO;;;ACAuC;AACvC,kCAAkC,YAAY;AACrD;AACA;AACA;AACA;;;ACLgD;AACF;AACvC;AACP,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA,mBAAmB,aAAa;AAChC,SAAS;AACT;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;;;;;;;;;;ACvBO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,2DAA2D;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7CsC;AAC/B;AACP;AACA,eAAe,4DAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACTO;;;ACAA,kEAAkE,iDAAiD;;;ACA/B;AACtB;AACrE;AACA;AACO;AACP;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C,KAAK;AACL;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;ACrBO,MAAM,gCAAsB,GAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACA;AACA;AACA;;;AC3BoL;AACpL;AACA;AACA;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,IAAI,sBAAsB;AAC1B;AACO;AACP;AACA,IAAI,qBAAqB;AACzB,IAAI,0BAA0B;AAC9B,IAAI,0BAA0B;AAC9B,IAAI,4BAA4B;AAChC;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtCA,iC;;;;;;;;;;;;;ACA6E;AACtE;AACA;AACA;AACA;AACP,0CAA0C,sFAAe,6BAA6B,+EAAY;AAClG,qCAAqC,sFAAe,oCAAoC,+EAAY;AACpG;AACA;;;;;;;;;;;;;ACRO;AACA;AACA;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX4B;AACrB,mBAAmB,oCAAiB,MAAM,2BAAM;;;ACDb;AAC1C,kCAAkC,aAAa;AACxC;AACP,QAAQ,UAAU;AAClB,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC9BkC;AAC3B,iEAAiE,yBAAQ;AAChF;;;ACFO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,MAAM;AACxD;;;ACRkE;AACwC;AACvD;AACuB;AACxC;AAC2C;AACzC;AAC7B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B,0BAA0B,8BAAW;AACrC;AACA,4BAA4B,sCAAoB,IAAI,EAAE;AACtD;AACA;AACA;AACA;AACA,oCAAoC,gCAAc,eAAe,eAAe,MAAM,YAAY;AAClG;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,4BAA4B,UAAU;AACtC,iCAAiC,kBAAkB;AACnD,+CAA+C,4BAAU;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qCAAiB;AACzB;AACA,QAAQ,oCAAgB;AACxB;AACA,QAAQ,iCAAa;AACrB;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,KAAK;AACL,CAAC;AACM;AACP,SAAS,gCAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC/GoD;AACO;AAC3D;AACA;AACA;AACA;AACO;AACP,SAAS,8BAAW;AACpB;AACA;AACA,0BAA0B,4CAAgB;AAC1C;AACA;AACA;AACA;AACA,YAAY,kBAAkB,wBAAwB,sBAAsB;AAC5E;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;ACtBgE;AACzD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,kCAAkC,qBAAqB;AACvD,KAAK;AACL,CAAC;;;;;;;;;;;;;;;;;ACdiC;AAC3B,wBAAwB,yBAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVwC;AACjC;AACP;AACA;AACA;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxCA,0C;;;;;;;;;;;;;;;;;;;ACA+C;AACmB;AAC3D;AACP;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA,yBAAyB,6BAAc;AACvC,CAAC;AACD;AACA,yCAAyC,uBAAuB;AAChE,8DAA8D,6BAAc;AAC5E;AACA;AACA,CAAC;AACD,0BAA0B,uBAAuB;AACjD,CAAC;;;;;;;ACjB2B;AACc;AACnC;AACA,0EAA0E,uBAAI,CAAC,gCAAU;;;;;;;ACHpE;AACoB;AACQ;AACU;AACxB;AACJ;AACE;AACxC,8BAA8B;AACvB;AACA,8CAA8C;AACrD,YAAY,WAAW,sBAAsB,qBAAqB,8CAAiB,KAAK;AACxF,oBAAoB,gCAAU;AAC9B;AACA;AACA;AACA,2BAA2B,uBAAI;AAC/B;AACA;AACA;AACA,iCAAiC,uBAAI;AACrC;AACA;AACA,QAAQ,+BAAS;AACjB;AACA,SAAS;AACT,kBAAkB,wBAAQ;AAC1B,kBAAkB,aAAa;AAC/B;AACA,QAAQ,+BAAS;AACjB;AACA,SAAS;AACT,kBAAkB,wBAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtCO;AACP;AACA;AACA;AACA;AACA,CAAC,wCAAwC;;;;;;;;;;;ACLlC;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM,GAAG,IAAI,qCAAqC,SAAS;AAC9F;;;;;;;;;;;;;;;;;;;;;;;;;ACRyE;AAClE;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACnG4E;AACrE;AACP,oBAAoB,0CAAwB;AAC5C;AACA,mCAAmC,qCAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbkD;AAC3C,mCAAmC,oCAAoC;AAC9E;AACA,yCAAyC,qCAAmB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;ACV6D;AACkG;AAChF;AACjB;AACvD;AACP;AACA;AACA,oBAAoB,0BAAW;AAC/B,wBAAwB,sCAAoB;AAC5C,oCAAoC,8BAA8B;AAClE;AACA;AACA;AACA,eAAe,uBAAuB;AACtC,wBAAwB,0CAAwB;AAChD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gFAAgF,6CAA2B,GAAG,0CAAwB;AACtI;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iCAAiC,sCAAoB,2CAA2C,oCAAkB;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,mCAAoB,CAAC;AAC3G,mBAAmB,mCAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oCAAkB,GAAG,4BAAU;AAC1E;AACA;AACA;AACA;AACA;;;AChEuC;AACmB;AACM;AACzD;AACP;AACA;AACA,oBAAoB,0BAAW;AAC/B,gBAAgB,cAAc;AAC9B,8CAA8C,kBAAkB;AAChE,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;;;ACvB4D;AAC8E;AACnI;AACA;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,kBAAkB,yBAAyB,MAAM;AACrG;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,qBAAqB,yBAAyB,MAAM;AAC5G;AACA;AACA,KAAK;AACL,aAAa,mCAAoB;AACjC;AACO;AACP,YAAY,kEAAkE;AAC9E,wBAAwB,8CAAiB,iBAAiB,mCAAoB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,8CAAiB;AACrD,8BAA8B,0BAAW;AACzC,2BAA2B,qBAAqB;AAChD;AACA,uBAAuB,qBAAqB;AAC5C,SAAS;AACT,KAAK;AACL;AACO;AACA;AACA;AACP;AACA;AACA,aAAa,iCAAkB;AAC/B;;;;;;;;;;;AClDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,4BAA4B,EAAE,QAAQ;AAC3F;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrBmD;AAC5C,8CAA8C,sEAAkB,cAAc,sEAAkB,MAAM;;;;;;;;;;;;;;;;;;;ACDtG;;;;;ACA8C;AAC9C,oCAAoC,gCAAY;;;ACDO;AACvD,iEAAiE,oBAAoB;;;ACD5C;AACzC;AACP;AACA,QAAQ,aAAa;AACrB;AACA;AACA;AACA;;;ACPoD;AACwC;AAC5F;AACA;AACA,sCAAsC,KAAK;AAC3C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,aAAa,sCAAW;AACxB;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC,cAAc,6BAA6B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oBAAoB;AAC7C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mDAAmD,aAAa;AAChE;AACA;AACA;AACA,2CAA2C,2BAA2B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA,uCAAuC,2BAA2B;AAClE;AACA;AACA;AACO,0BAA0B,iEAAiB;;;;;;;;;;;;;ACvE3C;AACA;AACA;;;;;;;;;;;;;;;;;;;ACFA;AACP;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,MAAM;AACpE;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,mEAAmE,aAAa,IAAI,MAAM;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,aAAa,IAAI,MAAM;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,aAAa,IAAI,MAAM;AACxE;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,MAAM;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,aAAa,IAAI,MAAM;AACvE;AACA;AACO;AACP;AACA;AACA;AACA,8DAA8D,MAAM;AACpE;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,aAAa,IAAI,MAAM;AACxE;AACO,kBAAkB,0DAAU;AAC5B;AACA;AACA;AACP;AACA;AACA;AACA,wCAAwC,KAAK,oBAAoB,MAAM;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iEAAiE,SAAS;AAC1E;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,aAAa,IAAI,MAAM;AACvE;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,aAAa,IAAI,MAAM;AACrF;AACA;AACA,gDAAgD,aAAa,IAAI,MAAM;AACvE;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,SAAS;AAC3F;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO,yBAAyB,iEAAiB;AAC1C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO,oBAAoB,kEAAkB;AACtC,0BAA0B,kEAAkB;AAC5C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,MAAM;AAClE;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO,uBAAuB,+DAAe;AACtC;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;ACrOO;AACP;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACVO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,KAAK;AACnD,oCAAoC,EAAE;AACtC;AACO;AACA;AACA;AACA;AACP;AACA;AACA;AACA;AACA,wCAAwC,YAAY;AACpD;AACA;AACA;;;ACpCO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iCAAiC;AAC7D,8BAA8B,SAAS,IAAI,SAAS,EAAE,uBAAuB,EAAE,KAAK;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzC+D;AACS;AACR;AAClB;AACvC;AACP;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,sDAAqB;AAC5D;AACA;AACA,0DAA0D,oCAAY;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yBAAyB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kBAAkB;AAChC;AACA;AACA;;;ACtD0C;AACiB;AAC0B;AAC9E,8BAA8B,uBAAuB;AAC5D;AACA;AACA,YAAY,UAAU;AACtB;AACA,+BAA+B,2BAA2B;AAC1D;AACA;AACA,aAAa;AACb,SAAS,IAAI,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAAgB;AAClD;AACA;AACA,uGAAuG;AACvG;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;ACnCsE;AACZ;AACnD;AACP;AACA;AACA;AACA;AACA;AACA,kBAAkB,8CAA0B;AAC5C;AACO;AACP;AACA,kCAAkC,kBAAkB;AACpD;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;;;;;;;;;;;;;;ACjBuD;AACxB;AACzB;AACP,SAAS,+EAAa;AACtB,uFAAuF,cAAc,GAAG,MAAM;AAC9G;AACA,WAAW,0CAAM;AACjB;AACO;AACP;AACA,0FAA0F,cAAc,GAAG,MAAM;AACjH;AACA,sBAAsB,0CAAM,yBAAyB,0CAAM;AAC3D;;;;;;;;ACbA,mC;;;;;;;ACAA,gC;;;;;;;;;;;;;;ACA6B;AACF;AAC3B;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACO;AACP,YAAY,8CAA8C,qCAAG,CAAC,IAAI;AAClE;AACA;AACA;AACA;AACA;AACA,kBAAkB,UAAU,EAAE,SAAS;AACvC;AACA;AACA,wCAAwC,2CAAO;AAC/C;AACA;;;;;;;;;;;;;;;;;;;ACrBO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACRA;;;ACAA;AACP;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA,kBAAkB,SAAS,GAAG,iDAAiD;AAC/E;AACA;AACA;;;ACXO;AACP;AACA;AACA;AACA;AACA;;;;;ACLO;;;ACAkC;AAClC;AACP;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,aAAa,WAAW,KAAK;AACvD;AACA;AACA;AACA,0BAA0B,aAAa,0BAA0B,WAAW,cAAc,KAAK;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxByC;AACW;AAC7C,iCAAiC,eAAe;AACvD;AACA,kBAAkB,aAAa,WAAW,MAAM,QAAQ,KAAK,kBAAkB,sBAAsB;AACrG;AACA;AACA;AACA;AACA;AACA,CAAC;;;ACVM;;;;;ACAA;;;ACAA;AACP;AACA;AACA;AACA,CAAC,8CAA8C;;;;;ACJG;AACN;AAC5C;AACA,KAAK,iBAAiB;AACtB,KAAK,iBAAiB;AACtB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uDAAuD;AAC/E,uCAAuC,SAAS,IAAI,SAAS,EAAE,WAAW,KAAK,OAAO,EAAE,KAAK;AAC7F;AACA,wCAAwC,EAAE,GAAG,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA,YAAY,6CAA6C;AACzD;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA,iBAAiB,kCAAW;AAC5B,2DAA2D,KAAK,GAAG,sBAAsB;AACzF,wDAAwD,KAAK,GAAG,sBAAsB;AACtF,yBAAyB,KAAK,EAAE,+BAA+B,sBAAsB,OAAO;AAC5F;AACA;AACA;AACA;AACA,+DAA+D,SAAS;AACxE;AACA;AACA;;;AClDO;;;ACAA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRO,sFAAsF,2CAA2C;;;ACAX;AACtH;AACP,iBAAiB;AACjB,WAAW;AACX,SAAS;AACT,oBAAoB;AACpB,OAAO;AACP,YAAY;AACZ,gBAAgB;AAChB,aAAa;AACb,aAAa;AACb;;;ACXiC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA,kDAAkD,2CAA2C;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnCO,6BAA6B,KAAK;AACzC;AACA;AACA;AACA;AACA;AACA;;;ACNyC;AACK;AACQ;AACE;AACjD;AACP;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA,eAAe,iBAAiB;AAChC;AACA,cAAc,aAAa,KAAK,QAAQ,KAAK,aAAa;AAC1D;;;ACfoE;AACZ;AACE;AACnD,wBAAwB,UAAU;AACzC,+FAA+F,kBAAkB;AACjH;AACA,yBAAyB,sDAAuB;AAChD,eAAe,sDAAuB;AACtC;AACA,WAAW,iBAAiB;AAC5B;;;ACVkD;AACT;AACK;AACvC,6BAA6B,mBAAmB;AACvD;AACA,kBAAkB,aAAa,KAAK,OAAO;AAC3C;AACA,kBAAkB,YAAY;AAC9B,+BAA+B,OAAO,EAAE,qBAAqB,aAAa,UAAU,IAAI,aAAa,QAAQ;AAC7G;AACA;AACA,gCAAgC,YAAY,uBAAuB;AACnE;AACA;;;ACbkD;AACM;AACjD;AACP;AACA;AACA,gBAAgB,mBAAmB,EAAE,iBAAiB;AACtD;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,qBAAqB;AACrB;AACA;AACA;AACA,uCAAuC,OAAO,EAAE,UAAU,eAAe,KAAK,aAAa,iBAAiB;AAC5G;AACA;AACA,aAAa;AACb;;;ACrByC;AACiB;AACnD;AACP;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA,sBAAsB,aAAa,YAAY,UAAU,WAAW,cAAc;AAClF;AACA;AACA,KAAK;AACL,CAAC,KAAK;;;ACXmC;AACa;AACU;AACzD;AACP;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA,0BAA0B,aAAa,kCAAkC,SAAS;AAClF;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA,sBAAsB,aAAa,uCAAuC,gBAAgB;AAC1F;AACA;;;ACpB4D;AACrD;AACP;AACA,mBAAmB,mBAAmB;AACtC,CAAC,KAAK;;;ACJmC;AACiB;AACnD;AACP,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA,cAAc,aAAa,uCAAuC,kBAAkB;AACpF;;;ACdkD;AACQ;AACA;AACM;AACd;AAC3C;AACP,YAAY,uBAAuB;AACnC,YAAY,0BAA0B,EAAE,kBAAkB;AAC1D;AACA;AACA;AACA;AACA;AACA,2BAA2B,gDAAgD;AAC3E;AACA,YAAY,2BAA2B;AACvC,+BAA+B,OAAO,EAAE,oCAAoC,aAAa,WAAW;AACpG;AACA;AACA,qBAAqB,kBAAkB;AACvC,SAAS;AACT;AACA,wBAAwB,qBAAqB;AAC7C,SAAS;AACT,aAAa,cAAc;AAC3B;AACA;;;AC1ByC;AACiB;AACA;AACnD;AACP,YAAY,oBAAoB;AAChC,YAAY,0BAA0B,EAAE,kBAAkB;AAC1D;AACA;AACA;AACA,cAAc,aAAa,CAAC,kBAAkB;AAC9C;AACA,2BAA2B,gDAAgD;AAC3E,KAAK;AACL;;;ACb0D;AACV;AACzC;AACP,YAAY,oBAAoB;AAChC,YAAY,0BAA0B,EAAE,kBAAkB;AAC1D;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA,2BAA2B,gDAAgD;AAC3E,KAAK;AACL;;;ACZyC;AACqB;AACN;AACF;AAC/C;AACP;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA,wCAAwC,gBAAgB;AACxD;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa,2BAA2B,KAAK;AACnE;AACA;AACA,cAAc,aAAa;AAC3B;;;AC1BiD;AACT;AACA;AACjC;AACP,YAAY,yBAAyB;AACrC,YAAY,oBAAoB;AAChC,+BAA+B,OAAO,EAAE,0BAA0B,aAAa,iBAAiB;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa,iCAAiC,cAAc;AAClF;AACA;AACA,qBAAqB,aAAa,UAAU,6CAA6C;AACzF,+BAA+B,OAAO,EAAE,qBAAqB,aAAa,WAAW;AACrF;AACA;;;;;;;;;;;AC1BO;;;;;;;;;;;;;ACA0C;AAC1C;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP,oCAAoC,wEAAiB;AACrD,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;;;;;;;;;;AC3BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA,yEAAyE,aAAa;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;;;;;;;;;;;;;ACpDO;AACP;AACA;AACA;AACA,CAAC,kCAAkC;AAC5B;AACA;;;;;;;;;;;;ACN+C;AAC/C;AACP,gBAAgB,6EAAU;AAC1B;AACA;;;;;;;;;;;ACJO;AACP,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;;;;;;;;;;;;AChD2D;AACpD;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kFAAe;AAC1B;;;;;;;;;;;;ACTO;AACP;AACA;AACA,gBAAgB,sEAAsE;AACtF,gBAAgB,oEAAoE;AACpF;AACA;AACA,gBAAgB,sCAAsC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB,sEAAsE;AACtF,gBAAgB,kCAAkC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,KAAK;AACL,CAAC;;;;;;;;;;;;ACzCyD;AACnD;AACP;AACA;AACA,+BAA+B,iFAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzCO;AACP;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;ACJO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNuD;AACH;AACpD;AACA;AACA;AACO;AACP,YAAY,UAAU;AACtB,SAAS,8BAAW;AACpB;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,+BAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AC3BsE;AACQ;AACvE;AACP;AACA,wBAAwB,4BAA4B,IAAI,mCAAmC;AAC3F,KAAK;AACL,CAAC;;;;;;;;;;;;;;;;;;;;;ACNM;AACA;AACA;AACA;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpDO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACA;AACA,4BAA4B,sEAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1C2C;AACD;AACiB;AAClE;AACA;AACO,uDAAuD,UAAU,GAAG,OAAO,GAAG,QAAQ,GAAG,mBAAmB,CAAC;AAC7G;AACP;AACA,wBAAwB,UAAU,GAAG,OAAO,GAAG,QAAQ,GAAG,wBAAK,YAAY,GAAG,yBAAyB;AACvG;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA,qBAAqB,4BAA4B;AACjD,wDAAwD,mBAAmB;AAC3E;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB,oCAAY;AAC5B;AACA;;;AChCkG;AAC3F,+BAA+B,SAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,yBAAyB;AAC5D;AACA,YAAY,oBAAoB;AAChC,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACnBwD;AACN;AACD;AACa;AACvD,gCAAgC,eAAe;AACtD;AACA,yCAAyC,aAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,gDAAa;AAClF;AACA,wBAAwB,oCAAY;AACpC,eAAe,wBAAK;AACpB;AACA,WAAW,gBAAgB;AAC3B;;;;;ACnB2D;AACd;AACtC;AACP;AACA;AACA;AACA,0BAA0B,4BAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4BAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,aAAa;AAC3E;AACA;AACA;AACA,8BAA8B,0BAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C,gCAAgC,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,GAAG;AAC5E;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA,kEAAkE,yBAAyB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;;;AC5HO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACzBoD;AAC7C,iDAAiD;AACxD,YAAY,sBAAsB,EAAE,8BAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBoD;AACJ;AACzC;AACP,cAAc,8BAAW;AACzB;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;;;;;;;ACVoD;AACL;AACxC,6BAA6B,YAAY;AAChD;AACA;AACA;AACA,kCAAkC,gBAAgB;AAClD;AACA;AACA,2BAA2B,+BAAS;AACpC;AACA;AACA;AACA,wCAAwC,WAAW,GAAG,+BAAS,QAAQ;AACvE;AACA;AACA;AACA;AACA,+DAA+D,WAAW,GAAG,+BAAS,QAAQ;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BO;AACP;AACA,mBAAmB,EAAE;AACd;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdkD;AACU;AACR;AACH;AACO;AACnB;AAC9B;AACP,kBAAkB,4EAA4E;AAC9F;AACA;AACA;AACA;AACA,8BAA8B,sDAAiB;AAC/C,kCAAkC,sDAAiB;AACnD;AACA;AACA;AACA,kBAAkB;AAClB,EAAE;AACF,EAAE,iBAAiB;AACnB,EAAE,+BAA+B,KAAK,GAAG,uBAAuB;;AAEhE,EAAE,qBAAqB;AACvB,EAAE,YAAY;AACd;AACA;AACA;AACA,oBAAoB,oCAAY;AAChC;AACA,kBAAkB;AAClB,EAAE;AACF,EAAE;AACF,EAAE,wBAAK,gBAAgB;AACvB;AACA,uBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iCAAiC,EAAE,iCAAiC,EAAE,oEAAoE;AAChL,kCAAkC,+BAAS;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;;;ACxEkD;AACD;AAC6Q;AAC1P;AACR;AACV;AACE;AACX;AACiB;AACR;AACE;AAC7C,0BAA0B,eAAe;AAChD,kBAAkB,4EAA4E;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mCAAmC,eAAe;AAClD;AACA,+CAA+C;AAC/C,gBAAgB,uJAAuJ;AACvK;AACA;AACA;AACA,gBAAgB,sBAAsB;AACtC,wBAAwB,iBAAiB;AACzC;AACA;AACA,sBAAsB,WAAW;AACjC,wBAAwB,kBAAkB,CAAC,cAAc,qBAAqB,sCAAsC;AACpH;AACA,0BAA0B,iBAAiB;AAC3C;AACA,sBAAsB,qBAAqB,IAAI,oBAAoB;AACnE,sBAAsB,sBAAsB,OAAO,wBAAwB,GAAG,MAAM;AACpF,sBAAsB,oBAAoB;AAC1C,sBAAsB,mBAAmB;AACzC,iCAAiC,mBAAmB;AACpD,sBAAsB,0BAA0B;AAChD,sBAAsB,qBAAqB,8KAA8K,cAAc;AACvO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kBAAkB,IAAI,yEAAyE;AACrH;AACA,gBAAgB,sBAAsB;AACtC,sBAAsB,WAAW;AACjC,oCAAoC,cAAc,GAAG,WAAW,iBAAiB;AACjF;AACA;AACA,8BAA8B,wBAAK;AACnC;AACA,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,oDAAoD;AACnG;AACA,yCAAyC,yDAAyD;AAClG;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qBAAqB;AACrB,SAAS;AACT;AACA,qCAAqC,0DAA0D,IAAI;AACnG;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA,oBAAoB,oCAAY;AAChC,eAAe,wBAAK;AACpB;AACA,uCAAuC,+FAA+F,IAAI;AAC1I;AACA;AACA;AACA,wBAAwB,cAAc;AACtC,gBAAgB,sBAAsB;AACtC,sBAAsB,WAAW;AACjC,wBAAwB,eAAe;AACvC;AACA,4BAA4B,YAAY;AACxC;AACA,kCAAkC,cAAc;AAChD,aAAa,SAAS,CAAC,aAAa;AACpC,4BAA4B,aAAa;AACzC;AACA,iCAAiC,mBAAmB;AACpD;AACA,wBAAwB,WAAW;AACnC,eAAe,oBAAoB,EAAE;AACrC,8BAA8B,wBAAwB,GAAG,MAAM;AAC/D,iCAAiC,8CAA8C;AAC/E,6BAA6B,UAAU;AACvC;AACA;AACA;AACA,wGAAwG,oBAAoB;AAC5H;AACA,oBAAoB,oCAAY;AAChC,eAAe,wBAAK;AACpB;AACA;AACA,eAAe,aAAa;AAC5B;AACA;;;ACtI4D;AAC8D;AACvE;AAC5C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,gGAAgG,oDAAoB;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,YAAY,uFAAuF;AACnG;AACA;AACA,iBAAiB,8CAAiB;AAClC;AACA;AACA,uBAAuB,8CAAiB;AACxC;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA,oBAAoB,gCAAgC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,WAAW;AACtE;AACA,SAAS;AACT;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,qCAAqC,8CAAiB;AACtD,8BAA8B;AAC9B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,WAAW;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACO,iCAAiC,wEAAwB;AAChE,+CAA+C,yCAAyC;AACxF;AACA;AACA;AACA,kCAAkC,uBAAuB,cAAc,iBAAiB,EAAE,0BAA0B;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,8CAAiB,2CAA2C;AAC9F;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,wCAAwC;AAChG;AACA;AACA;AACA;;;;;;;;;;;;AClIA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA,0BAA0B,YAAY;AACtC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA,mEAAmE,aAAa;AAChF;AACA;AACA;AACA;AACO;AACP;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AChCO;AACP;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;ACV2C;AAC3C,sCAAsC,GAAG;AAClC;AACP;AACA;AACA,QAAQ,UAAU;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA,2EAA2E;AAC3E,YAAY,UAAU;AACtB;AACA;AACA;;;AChDO;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNP;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjB6D;AACT;AACH;AACkG;AAChG;AAC5C;AACP,YAAY,UAAU;AACtB,SAAS,8BAAW;AACpB;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA,UAAU,aAAa;AACvB;AACA,+BAA+B,cAAc,iBAAiB,+EAA+E;AAC7I;AACA;AACA;AACA,sDAAsD,MAAM;AAC5D;AACA,mBAAmB,sCAAkB;AACrC;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA,oBAAoB,gBAAgB,YAAY,gBAAgB;AAChE,qBAAqB,QAAQ,UAAU,GAAG,EAAE,cAAc;AAC1D;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,iBAAiB;AAChC,oCAAoC,oBAAoB,EAAE,cAAc;AACxE,cAAc,iBAAiB;AAC/B,8CAA8C,qBAAqB,EAAE,cAAc;AACnF,8CAA8C,iBAAiB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,IAAI,GAAG,KAAK;AACtC;AACA,0BAA0B,IAAI,GAAG,KAAK;AACtC;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,KAAK;AACL,CAAC;;;;;;;;;;;;ACjF+C;AACzC;AACP;AACA,kBAAkB,kEAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBoD;AACT;AACpC,mDAAmD,2EAAW,8DAA8D,8DAAM;;;;;;;;;;;;;;;;;;;ACFzI,MAAM,gCAA4B,sB;;ACA3B;AACP;AACA;;;ACFqD;AAC9C;AACP,QAAQ,eAAe;AACvB;AACA;AACA;AACA;;;ACNuC;AACC;AACY;AACC;AAC9C,0CAA0C,0BAA0B;AAC3E;AACA;AACA;AACA;AACA,mBAAmB,yBAAQ,GAAG,GAAG,wBAAO;AACxC;AACA,6BAA6B,yCAAQ,MAAM;AAC3C;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA,YAAY,oCAAG;AACf,uCAAuC,oCAAG,mBAAmB;AAC7D;AACA;AACA,gEAAgE,MAAM;AACtE;AACA;AACA;AACO,yBAAyB,8EAA8B;;;;;;;;;;;;AC5BhB;AACvC;AACP;AACA;AACA,mBAAmB,qEAAQ;AAC3B;AACA;AACA;AACA,WAAW,qEAAQ;AACnB;;;;;;;;;;;;;;;;;;;ACTO;AACP;AACA;AACA;AACA;AACA;;;ACLO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,GAAG;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChD+C;AACxC,MAAM,aAAM;AACnB;AACA;AACA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClBkC;AAC3B,yBAAyB,aAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,CAAC;;;ACbiC;AAC3B,wBAAwB,aAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC;;;ACdM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfkC;AAC3B,2BAA2B,aAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,CAAC;;;ACbiC;AAC3B,8BAA8B,aAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC;;;ACdgC;AACS;AACF;AACN;AACG;AACS;AACM;AAC7C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,aAAM;AAC1C;AACA,kFAAkF,oBAAoB;AACtG;AACA;AACA;AACA,eAAe,aAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,6BAA6B;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iCAAiC;AACnE;AACA;AACA,mCAAmC,YAAY;AAC/C,mBAAmB,KAAK;AACxB;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,mBAAmB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,MAAM,0BAA0B,MAAM;AAClE;AACA,gCAAgC,UAAU;AAC1C;AACA;AACA;AACA;AACA,4BAA4B,MAAM;AAClC;AACA,gCAAgC,SAAS;AACzC;AACA;AACA;AACA,uGAAuG,eAAe;AACtH;AACA;AACA,oCAAoC,MAAM,8BAA8B,MAAM;AAC9E;AACA;AACA;AACA,uDAAuD,MAAM,gCAAgC,MAAM;AACnG;AACA;AACA,oCAAoC,MAAM;AAC1C;AACA;AACA,oCAAoC,MAAM;AAC1C;AACA;AACA,oCAAoC,MAAM;AAC1C;AACA;AACA,oCAAoC,MAAM;AAC1C;AACA;AACA,oCAAoC,MAAM;AAC1C;AACA;AACA,oCAAoC,MAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,MAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,MAAM;AAC1C;AACA;AACA,iFAAiF,mBAAmB;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,mBAAmB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,MAAM;AAC1C;AACA,iDAAiD,oBAAoB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,oBAAoB,gBAAgB,OAAO;AACpG;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,MAAM;AAC1C;AACA,iDAAiD,oBAAoB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+BAA+B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,MAAM;AAC9C;AACA,aAAa;AACb;AACA,qBAAqB,MAAM;AAC3B,8BAA8B,KAAK;AACnC,qBAAqB,MAAM;AAC3B,8BAA8B,KAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxUuD;AACvD;AACO;AACP;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjC0D;AACP;AACC;AAC7C;AACP;AACA,+BAA+B,yCAAc;AAC7C;AACA;AACA;AACA;AACA,wEAAwE,0IAA0I;AAClN;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oCAAkB;AAC/B;AACA;AACA,aAAa;AACb;AACA;AACA,gBAAgB,iBAAiB;AACjC,8FAA8F;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,eAAe;AACnE;AACA,oDAAoD,eAAe;AACnE;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;;;;;;;;AC3HA,iC;;;;;;;;;;;;;;;;;;ACAyE;AACzE;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+EAA+E,oDAAuB;AACtG;AACA;AACA,6GAA6G,oDAAuB;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;;AC9ByD;AACI;AACvD,mDAAmD,kCAAU,CAAC,oBAAoB;;;;;;;;;;;ACFzF,sEAAsE,KAAK;AACpE;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZO;AACP;AACA;AACA;AACA;AACA;;;;;;;;ACLA,iC;;;;;;;;;;;;;;;;;;;;ACA6E;AACtE;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mEAA0B;AAC5D;AACA,cAAc,mEAA0B;AACxC;AACA;AACA;AACA;AACA;AACA;;;AClBoD;AACN;AACvC;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAqD;AACrE;AACA;AACA;AACA;AACA,mBAAmB,8BAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iEAAiE;AAC5F,SAAS;AACT;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClE2D;AACd;AACtC;AACP;AACA;AACA,gBAAgB,oEAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kFAAe;AAC1B;;;;;;;;ACdA,+B;;;;;;;;;;;;ACAmE;AAC5D;AACA;AACP;AACO;AACP;AACA;AACA,aAAa,sFAAiB;AAC9B;;;;;;;;;;;;;;;;;;ACRO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AAC5B;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;;;ACrC4C;AACrB;AAChB,MAAM,iCAAwB;AACrC;AACA,qBAAqB,WAAW;AAChC,4BAA4B,WAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACO,MAAM,qCAA4B;AACzC;AACA;AACA;AACA,KAAK;AACL;AACA;;;AC7BO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACO;AACP;AACA;AACA;AACA;;;ACdoF;AACT;AACpE;AACP,yBAAyB,iCAAwB,iBAAiB,qBAAqB;AACvF;AACO,sCAAsC,gFAAgC;AACtE;AACP,yBAAyB,qCAA4B,UAAU,yBAAyB;AACxF;;;;;;;UCRA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF,E;;;;;WCRA;WACA;WACA;WACA;WACA,E;;;;;WCJA,wF;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D,E;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,gBAAgB,qBAAqB;WACrC;;WAEA;;WAEA;WACA;WACA;WACA;WACA,aAAa;WACb;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;;WAEA;;WAEA;;WAEA,kB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCO;AACP;AACA,CAAC;;;;;;;;;;;;;;;;;;;ACFyD;AACoB;AACvE;AACP;AACA,mBAAmB,4CAAgB;AACnC,uBAAuB,8CAAiB;AACxC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,qBAAqB,4DAAwB;AAC7C;AACA,8BAA8B,8CAAiB;AAC/C,KAAK;AACL;;;ACxCO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP,eAAe,gDAAgD;AAC/D,gBAAgB,yCAAyC;AACzD,cAAc,uCAAuC;AACrD,oBAAoB,qDAAqD;AACzE;;;;;;;;;;;;;;;;;;;ACZ4E;AACrE;AACA;AACP,YAAY,wFAAwF,QAAQ,mGAA0C;AACtJ;AACA;AACA,gBAAgB,WAAW,QAAQ,mGAA2C;AAC9E,eAAe,sBAAK;AACpB;AACA;AACA;AACA,sBAAsB,wDAAwB,oDAAoD,qBAAqB;AACvH;AACA;AACA;AACA;AACA;;;AChBgF;AACK;AACxB;AACX;AAClD;AACO,kCAAkC,KAAK,0BAAO,CAAC,sBAAK;AAC3D,gDAAgD,kCAAW;AAC3D;AACA,uDAAuD,uBAAO,iBAAiB,0BAAU;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wDAAwB;AAC1C;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW,2BAAO;AAClB,CAAC;AACD;AACA,YAAY,gEAAgE;AAC5E;AACA,kBAAkB,wDAAwB,iFAAiF,qBAAqB;AAChJ;AACA,YAAY,UAAU,QAAQ,mGAA0C;AACxE;AACA,CAAC;AACD;AACA,YAAY,UAAU,QAAQ,mGAA0C;AACxE;AACA,CAAC;AACD;AACA,YAAY,cAAc,QAAQ,mGAA8C;AAChF;AACA,CAAC;AACD;AACA,YAAY,gBAAgB,QAAQ,mGAAmD;AACvF;AACA,CAAC;AACD;AACA,kBAAkB,cAAc;AAChC,CAAC;AACD,cAAc,wDAAwB;AACtC;AACA;AACA,KAAK;AACL,CAAC;AACM;AACA;;;;;;;;;;;;;AC/DP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,gBAAgB,sCAAsC,kBAAkB;AACjF,wBAAwB;AACxB;AACA;;AAEO;AACP;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEO;AACP;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,2DAA2D,cAAc;AACzE;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;;AAEO;AACP,kCAAkC;AAClC;;AAEO;AACP,uBAAuB,uFAAuF;AAC9G;AACA;AACA,yGAAyG;AACzG;AACA,sCAAsC,QAAQ;AAC9C;AACA,gEAAgE;AAChE;AACA,8CAA8C,yFAAyF;AACvI,8DAA8D,2CAA2C;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA,4CAA4C,yEAAyE;AACrH;;AAEO;AACP;AACA;;AAEO;AACP,0BAA0B,+DAA+D,iBAAiB;AAC1G;AACA,kCAAkC,MAAM,+BAA+B,YAAY;AACnF,iCAAiC,MAAM,mCAAmC,YAAY;AACtF,8BAA8B;AAC9B;AACA,GAAG;AACH;;AAEO;AACP,YAAY,6BAA6B,0BAA0B,cAAc,qBAAqB;AACtG,2IAA2I,cAAc;AACzJ,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,iCAAiC,SAAS;AAC1C,iCAAiC,WAAW,UAAU;AACtD,wCAAwC,cAAc;AACtD;AACA,4GAA4G,OAAO;AACnH,+EAA+E,iBAAiB;AAChG,uDAAuD,gBAAgB,QAAQ;AAC/E,6CAA6C,gBAAgB,gBAAgB;AAC7E;AACA,gCAAgC;AAChC;AACA;AACA,QAAQ,YAAY,aAAa,SAAS,UAAU;AACpD,kCAAkC,SAAS;AAC3C;AACA;;AAEO;AACP;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;AAEM;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACO;AACP,2BAA2B,sBAAsB;AACjD;AACA;AACA;;AAEA;AACO;AACP,gDAAgD,QAAQ;AACxD,uCAAuC,QAAQ;AAC/C,uDAAuD,QAAQ;AAC/D;AACA;AACA;;AAEO;AACP,2EAA2E,OAAO;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,wMAAwM,cAAc;AACtN,4BAA4B,sBAAsB;AAClD,wBAAwB,YAAY,sBAAsB,qCAAqC,2CAA2C,MAAM;AAChJ,0BAA0B,MAAM,iBAAiB,YAAY;AAC7D,qBAAqB;AACrB,4BAA4B;AAC5B,2BAA2B;AAC3B,0BAA0B;AAC1B;;AAEO;AACP;AACA,eAAe,6CAA6C,UAAU,sDAAsD,cAAc;AAC1I,wBAAwB,6BAA6B,oBAAoB,uCAAuC,kBAAkB;AAClI;;AAEO;AACP;AACA;AACA,yGAAyG,uFAAuF,cAAc;AAC9M,qBAAqB,8BAA8B,gDAAgD,wDAAwD;AAC3J,2CAA2C,sCAAsC,UAAU,mBAAmB,IAAI;AAClH;;AAEO;AACP,+BAA+B,uCAAuC,YAAY,KAAK,OAAO;AAC9F;AACA;;AAEA;AACA,wCAAwC,4BAA4B;AACpE,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,qDAAqD,cAAc;AACnE;AACA;AACA;;AAEO;AACP,2CAA2C;AAC3C;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,MAAM,oBAAoB,YAAY;AAC5E,qBAAqB,8CAA8C;AACnE;AACA;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,SAAS,gBAAgB;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,gDAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;AChZsD;AACxB;AACzB,MAAM,uBAAe;AAC5B;AACA,uFAAuF,cAAc,GAAG,MAAM;AAC9G;AACA;AACA;AACO;AACP;AACA,0FAA0F,cAAc,GAAG,MAAM;AACjH;AACA,sBAAsB,uBAAM,yBAAyB,uBAAM;AAC3D;;;ACbsD;AAC/C,MAAM,iBAAQ;AACrB,gBAAgB,UAAU;AAC1B;AACA;;;ACJsC;AAC/B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACT2D;AACpD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACT2B;AACI;AACN;;;ACFzB;AACA;AACgE;AAChE;AACA,IAAI,wBAAQ;AACZ,yBAAyB;AACzB,MAAM,iBAAe;AACd;AACP;AACA;AACA;AACA;AACA,eAAe,wBAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,2C;;ACnBA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,uC;;ACRA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;ACVA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;ACfA;AACA;AACoD;AACR;AACF;AACU;AACpD,iC;;ACNA;AACA;AAC+C;AAC6B;AAC5C;AAChC;AACA;AACA,yBAAyB,KAAK;AAC9B;AACA;AACA,YAAY,WAAW;AACvB;AACA,0BAA0B,eAAe;AACzC;AACA;AACA,eAAe,SAAS;AACxB,mBAAmB,WAAW;AAC9B,sCAAsC,UAAU;AAChD,aAAa;AACb,SAAS;AACT;AACA;AACA,yBAAyB,KAAK;AAC9B;AACA;AACA,CAAC;AACmB;AACpB,qC;;AC3BiC;AACkB;AAC5C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,QAAQ,kCAAkC,gBAAgB;AACxF;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACgB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe;AACM;AACvC,iC;;;;ACtGkD;AAC3C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA,kEAAkE,yBAAyB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0CAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;;;AC1C2D;AAC3B;AACzB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,KAAK;AACjC;AACA;AACA;AACA,8DAA8D,aAAa;AAC3E;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,KAAK;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,KAAK;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0CAAK,2BAA2B,GAAG,0CAAK,2BAA2B,GAAG,0CAAK,2BAA2B,GAAG,0CAAK,4BAA4B,GAAG,0CAAK,yBAAyB;AAC7M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,GAAG;;;ACrLzC;AAC1C;AACA;AACA;AACA;AACO,wBAAwB,gCAAgC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,KAAK;AACjC;AACA,0EAA0E,wBAAwB,kDAAkD,qBAAqB;AACzK;AACA;AACA;AACA,iDAAiD,qBAAqB,wCAAwC,wBAAwB;AACtI;AACA;AACA;AACA;AACA;AACA;;;AC7B0C;AACY;AACR;AACvC;AACP;AACA,oCAAoC,gBAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA,6BAA6B,KAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB,EAAE,YAAY;AAC9C,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;;AC7DO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACO;AACP;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,qCAAqC;AAC3F;AACA;AACA;;;AC9CkK;AAC5G;AACW;AAC1D,MAAM,2CAAqB;AAClC,kBAAkB,0BAA0B;AAC5C,oCAAoC,gBAAgB;AACpD;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C,mBAAmB,0BAA0B;AAC7C,+BAA+B,oBAAoB,GAAG,6CAA6C;AACnG,0BAA0B,sBAAsB;AAChD,SAAS;AACT;AACA;AACA,mBAAmB,oBAAoB;AACvC,+BAA+B,0BAA0B,GAAG,yBAAyB;AACrF;AACA;AACA,SAAS;AACT;AACA;;;;;ACtBO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzB8G;AAC5E;AACW;AACtC;AACP,kBAAkB,0BAA0B;AAC5C,uCAAuC,2CAA8B;AACrE;AACA;AACA,SAAS;AACT;AACA;AACA,uFAAuF,kBAAkB;AACzG;AACA;AACA;AACA,eAAe,yBAAQ;AACvB;AACA;;;ACjBgE;AACzD,kDAAkD,qBAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACD9E;AACA,wHAAwH,8BAA8B,QAAQ,gDAAgD,QAAQ,iBAAiB,QAAQ,gBAAgB,gBAAgB,SAAS,QAAQ,gBAAgB,qBAAqB,SAAS,QAAQ,QAAQ,wBAAwB,QAAQ,mBAAmB,QAAQ,sBAAsB,wBAAwB,QAAQ,wBAAwB,GAAG,2BAA2B,eAAe;AACphB,gBAAgB,8BAA8B,qDAAqD,YAAY,eAAe,kBAAkB,aAAa,oGAAoG,IAAI,yGAAyG,IAAI,YAAY,mCAAmC,WAAW,YAAY,IAAI,eAAe,gBAAgB,aAAa,eAAe,yCAAyC,aAAa,8BAA8B,eAAe,qBAAqB,gBAAgB,YAAY,2BAA2B,OAAO,EAAE,mCAAmC,8BAA8B,WAAW,YAAY,IAAI,mGAAmG,YAAY,IAAI,yBAAyB,eAAe,qBAAqB,aAAa,YAAY,2BAA2B,OAAO,EAAE,0BAA0B,8BAA8B,WAAW,YAAY,IAAI,4EAA4E,YAAY,IAAI,yBAAyB,2BAA2B,YAAY,sBAAsB,OAAO,EAAE,mCAAmC,8BAA8B,WAAW,YAAY,IAAI,sFAAsF,YAAY,IAAI,YAAY,sBAAsB,OAAO,EAAE,0BAA0B,8BAA8B,WAAW,YAAY,YAAY,IAAI,yDAAyD;AACpoD;;;ACHwD;AACkC;AAC7D;AACpC,kBAAkB,kCAAa;AAC/B;AACA;AACA,CAAC;AACM,6DAA6D;AACpE,2CAA2C,0CAAe,CAAC,OAAO;AAClE;AACA;AACA,KAAK;AACL;AACA,sDAAuB,OAAO,mDAAoB;;;ACbA;AACC;AACL;AACa;AACN;AAC+B;AACd;AAC/D;AACP;AACA;AACA,gDAAgD,4BAAU;AAC1D,gDAAgD,wBAAQ;AACxD;AACA,sDAAsD,uBAAuB;AAC7E;AACA,kEAAkE,mCAAmC;AACrG;AACA;AACA;AACA;AACA,4BAA4B,2CAAiB;AAC7C,aAAa;AACb;AACA,sCAAsC,4BAAU;AAChD;AACA,wCAAwC,kCAAQ;AAChD,4CAA4C,gCAAQ;AACpD,4CAA4C,4BAAM;AAClD;AACA;;;;;;;;;AC7B0C;AAC8E;AACvB;AACU;AAC+E;AAChH;AACjC;AACkE;AAC/B;AACmB;AAC3B;AACZ;AAC4B;AAClB;AACU;AACJ;AACjE,MAAM,8BAAgB;AAC7B,IAAI,kFAA+B;AACnC,yBAAyB,8DAAyB;AAClD,4DAA4D,8CAAyB;AACrF,+BAA+B,gBAAsB;AACrD,IAAI,0EAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,kCAAc,CAAC,8EAAmC;AAChH,wDAAwD,8CAAmB;AAC3E,wEAAwE,eAAyB;AACjG;AACA,YAAY,2DAA8B,GAAG,wDAAwD,0BAAmB,EAAE;AAC1H,sEAAsE,wBAAwB;AAC9F,4CAA4C,kCAAc,CAAC,8DAA+B;AAC1F;AACA,YAAY,kCAAc,CAAC,sDAA0B,IAAI,GAAG,2DAA+B,mBAAmB;AAC9G,wBAAwB,wCAAc;AACtC;AACA,YAAY,kCAAc;AAC1B,mBAAmB,6DAA8B;AACjD,kFAAkF,yCAAkB;AACpG,aAAa;AACb,kCAAkC,6BAAI;AACtC,oDAAoD,uCAAe;AACnE,8DAA8D,kCAAc,CAAC,wFAA0C;AACvH,oDAAoD,kCAAc,CAAC,8EAAqC;AACxG,kDAAkD,kCAAc,CAAC,yDAA0B;AAC3F;AACA;;;;;;;;;ACpDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;ACrC8H;AAChB;AACR;AACkB;AACjH;AACP,iDAAiD,gEAAkC,iBAAiB,0EAAgC,iBAAiB,0EAAoC,iBAAiB,iCAAiC;AAC3O;AACA,wCAAwC,oEAAsC,0BAA0B,qEAA2B,0BAA0B,qEAA+B,0BAA0B,4BAA4B;AAClP;;;ACRgG;AACnC;AACyB;AACO;AAC/B;AAC8D;AACjC;AAChB;AACP;AACU;AAClB;AACgE;AAC3C;AACR;AACV;AAC3C;AACb,2BAA2B,oBAAQ;AAC1C;AACA;AACA,0BAA0B,8BAAkB,oBAAoB;AAChE;AACA;AACA,0BAA0B,+BAA+B;AACzD,0BAA0B,gDAAsB;AAChD,0BAA0B,qDAAkB;AAC5C,0BAA0B,kDAAmB;AAC7C,0BAA0B,2CAAuB;AACjD,0BAA0B,sDAAqB;AAC/C,0BAA0B,6BAA6B;AACvD,0BAA0B,2BAA2B;AACrD,0BAA0B,wBAAwB;AAClD;AACA,iCAAiC,oDAAkB;AACnD,iCAAiC,0CAAc;AAC/C,iCAAiC,oEAAsB;AACvD,iCAAiC,uCAAmB;AACpD,iCAAiC,4CAAe;AAChD,iCAAiC,kEAA2B;AAC5D,iCAAiC,wFAAsC;AACvE,8CAA8C,6CAA6C;AAC3F,kEAAkE,kEAA6B;AAC/F;AACA,aAAa;AACb,SAAS;AACT,iCAAiC,wDAAoB;AACrD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjDgF;AAClD;AACvB,qCAAqC,kCAAkB;AAC9D;AACA;AACA;AACA;AACA;;;ACPyD;AAC4B;AAC9E,6CAA6C,sBAAe;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACO,4CAA4C,sBAAe;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACO,0CAA0C,sBAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACO,wCAAwC,sBAAe;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACO,wCAAwC,sBAAe;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,+BAA+B,sBAAe;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO,uCAAuC,sBAAe;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO,qCAAqC,sBAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,iDAAiD,sBAAe;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,2CAA2C,sBAAe;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACO,8CAA8C,sBAAe;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,4CAA4C,sBAAe;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO,uCAAuC,sBAAe;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,oCAAoC,sBAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,qCAAqC,sBAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACO,6BAA6B,sBAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,4CAA4C,sBAAe;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,uCAAuC,sBAAe;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,uCAAuC,sBAAe;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,uCAAuC,sBAAe;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,6CAA6C,sBAAe;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACO,sCAAsC,sBAAe;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,8CAA8C,sBAAe;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,uCAAuC,sBAAe;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,sCAAsC,sBAAe;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO,uCAAuC,sBAAe;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,mCAAmC,sBAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,uCAAuC,sBAAe;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,mCAAmC,sBAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,2CAA2C,sBAAe;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,uCAAuC,sBAAe;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACO,wCAAwC,sBAAe;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACO,iCAAiC,sBAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,yCAAyC,sBAAe;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,wCAAwC,sBAAe;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,mDAAmD,sBAAe;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,4CAA4C,sBAAe;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sFAAsF;AAChF;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACO,4DAA4D,sBAAe;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACO;AACP;AACA,yBAAyB,2BAA2B;AACpD,CAAC;AACM;AACP;AACA,2BAA2B,6BAA6B;AACxD,CAAC;AACM;AACP;AACA,sBAAsB,gDAAgD;AACtE,6BAA6B,6DAA6D;AAC1F,CAAC;AACM;AACP;AACA,yBAAyB,2BAA2B;AACpD,CAAC;AACM;AACP;AACA,2BAA2B,6BAA6B;AACxD,uBAAuB,sDAAsD;AAC7E,CAAC;AACM;AACP;AACA,yBAAyB,2BAA2B;AACpD,CAAC;AACM;AACP;AACA,uBAAuB,sDAAsD;AAC7E,CAAC;AACM;AACP;AACA,yBAAyB,2BAA2B;AACpD,CAAC;AACM;AACP;AACA,uBAAuB,yDAAyD;AAChF,CAAC;AACM;AACP;AACA,6BAA6B,qEAAqE;AAClG;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;AACM;AACP;AACA,+BAA+B,2EAA2E;AAC1G,CAAC;AACM;AACP;AACA,yBAAyB,SAAS,iCAAgB,EAAE;AACpD,CAAC;AACM;AACP;AACA,yBAAyB,SAAS,iCAAgB,EAAE;AACpD,CAAC;AACM;AACP;AACA,CAAC;AACM;AACP;AACA,yBAAyB,2BAA2B;AACpD,CAAC;AACM;AACP;AACA,yBAAyB,2BAA2B;AACpD,CAAC;AACM;AACP;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACO;AACP;AACA,6BAA6B,kCAAkC;AAC/D,CAAC;AACM;AACP;AACA,2BAA2B,uFAAuF;AAClH,CAAC;AACM;AACP;AACA,yBAAyB,2BAA2B;AACpD,CAAC;AACM;AACP;AACA,6BAA6B,6DAA6D;AAC1F,CAAC;AACM;AACP;AACA,0BAA0B,qFAAqF;AAC/G,CAAC;AACM;AACP;AACA,yBAAyB,2BAA2B;AACpD,CAAC;AACM;AACP;AACA,yBAAyB,kEAAkE;AAC3F,CAAC;;;;;;;;;;;;;;;;;AC76BuH;AACpE;AACqd;AAC5a;AACq+B;AAC3jC;AACP;AACA;AACA;AACA;AACA,8BAA8B,UAAU,WAAW,cAAc;AACjE,8CAA8C,UAAU;AACxD,iEAAiE,cAAc;AAC/E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjiCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa,UAAU,KAAK;AAC7D,oDAAoD,aAAa;AACjE,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACO;AACP;AACA;AACA,4CAA4C,qBAAqB;AACjE,oEAAoE,qBAAqB;AACzF;AACA;AACA;AACA;AACO;AACP;AACA;AACA,6CAA6C,KAAK;AAClD,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,8BAA8B,UAAU,WAAW,cAAc;AACjE,8CAA8C,UAAU;AACxD,iEAAiE,cAAc;AAC/E;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa,UAAU,KAAK;AAC7D,oDAAoD,aAAa;AACjE,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACO;AACP;AACA;AACA,4CAA4C,qBAAqB;AACjE,oEAAoE,qBAAqB;AACzF;AACA;AACA;AACA;AACO;AACP;AACA;AACA,6CAA6C,KAAK;AAClD,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,8BAA8B,UAAU,WAAW,cAAc;AACjE,8CAA8C,UAAU;AACxD,iEAAiE,cAAc;AAC/E;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,8BAA8B,UAAU,WAAW,cAAc;AACjE,8CAA8C,UAAU;AACxD,iEAAiE,cAAc;AAC/E;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP,cAAc,wCAAE;AAChB,oBAAoB,8BAAG,GAAG,EAAE,6DAAyB;AACrD;AACA;AACA;AACA;AACA,KAAK;AACL,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE,kBAAkB,8BAAG;AACrB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,KAAK;AACL,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,4CAA4C,qBAAqB;AACjE,oEAAoE,qBAAqB;AACzF;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,8BAA8B,UAAU;AACxC,8CAA8C,UAAU;AACxD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,4BAA4B,SAAS;AACrC,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,8BAA8B,UAAU;AACxC,8CAA8C,UAAU;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA,8BAA8B,UAAU,WAAW,cAAc,SAAS,YAAY;AACtF,8CAA8C,UAAU;AACxD,iEAAiE,cAAc;AAC/E,kDAAkD,YAAY;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA,iCAAiC,aAAa,SAAS,YAAY;AACnE,oDAAoD,aAAa;AACjE,kDAAkD,YAAY;AAC9D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC,4CAA4C,SAAS;AACrD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA,4BAA4B,SAAS;AACrC,4CAA4C,SAAS;AACrD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iCAAiC,aAAa,UAAU,KAAK;AAC7D,oDAAoD,aAAa;AACjE,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,4CAA4C,qBAAqB;AACjE,oEAAoE,qBAAqB;AACzF;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,6CAA6C,KAAK;AAClD,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C,oDAAoD,aAAa;AACjqBAAqB,8BAAG;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL,uBAAuB,0CAAW;AAClC;AACA,IAAI,8BAAG;AACP;AACA,KAAK;AACL;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4CAAc;AAClC;AACA,sBAAsB,+CAAqaAAa;AACb;AACA;AACA,0BAA0B,kDAAiB,CAAC,sBAAe;AAC3D;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,kCAAkC;AAC5D;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,cAAc,gCAAc;AAC5B,iBAAiB,gCAAc;AAC/B,KAAK;AACL;AACA,0BAA0B,4BAA4B;AACtD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,+BAA+B;AACzD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,qBAAqB;AAC/C;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,sBAAsB,gCAAc;AACpC,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,sBAAsB;AAChD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,cAAc;AACxC;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,6BAA6B;AACvD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,6BAA6B;AACvD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,cAAc,gCAAc;AAC5B,iBAAiB,gCAAc;AAC/B,KAAK;AACL;AACA,0BAA0B,8BAA8B;AACxD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,cAAc,gCAAc;AAC5B,iBAAiB,gCAAc;AAC/B,KAAK;AACL;AACA,0BAA0B,8BAA8B;AACxD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,uBAAuB;AACjD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,+BAA+B;AACzD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,uBAAuB;AACjD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,oBAAoB;AAC9C;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,oBAAoB;AAC9C;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,cAAc,gCAAc;AAC5B,iBAAiB,gCAAc;AAC/B,KAAK;AACL;AACA,0BAA0B,6BAA6B;AACvD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,cAAc,gCAAc;AAC5B,iBAAiB,gCAAc;AAC/B,KAAK;AACL;AACA,0BAA0B,2BAA2B;AACrD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,cAAc,gCAAc;AAC5B,iBAAiB,gCAAc;AAC/B,KAAK;AACL;AACA,0BAA0B,6CAA6C;AACvE;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,4BAA4B;AACtD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,cAAc,gCAAc;AAC5B,iBAAiB,gCAAc;AAC/B,KAAK;AACL;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,cAAc,gCAAc;AAC5B,iBAAiB,gCAAc;AAC/B,KAAK;AACL;AACA,0BAA0B,yBAAyB;AACnD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,sBAAsB;AAChD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,yBAAyB;AACnD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,cAAc,gCAAc;AAC5B,iBAAiB,gCAAc;AAC/B,KAAK;AACL;AACA,0BAA0B,yBAAyB;AACnD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,gBAAgB;AAC1C;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,kBAAkB;AAC5C;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,0BAA0B;AACpD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,yBAAyB;AACnD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,iBAAiB,gCAAc;AAC/B,cAAc,gCAAc;AAC5B,KAAK;AACL;AACA,0BAA0B,oCAAoC;AAC9D;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG;AACxB;AACA,KAAK;AACL;AACA,gBAAgB,8BAAI;AACpB,gBAAgB,gCAAc;AAC9B,cAAc,gCAAc;AAC5B,iBAAiB,gCAAc;AAC/B,KAAK;AACL;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA,qBAAqB,8BAAG,GAAG;AAC3B;AACA,gBAAgB,8BAAI;AACpB,cAAc,gCAAc;AAC5B,iBAAiB,gCAAc;AAC/B,KAAK;AACL;AACA,0BAA0B,6BAA6B;AACvD;AACA;AACA,KAAK;AACL,WAAW,8CAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzmGgE;AACN;AACE;AACE;AACkD;AAChC;AAC5D;AACb,4BAA4B,sBAAQ;AAC3C;AACA,QAAQ,YAAY;AACpB;AACA;AACA,QAAQ,sCAAc;AACtB,QAAQ,8CAAiB;AACzB;AACA,CAAC;AACD,uCAAuC;AACvC;AACA,OAAO,mCAAmC,EAAE,oCAAoC;AAChF,SAAS,gBAAgB;AACzB,QAAQ,gBAAgB;AACxB;AACA;;;;ACrBA;;AAEqE;;AAErE,uCAAuC,YAAY;AACnD;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4DAA4D,2CAA2C;;AAEvG;AACA;AACA,uCAAuC,WAAW,oBAAoB,aAAa;AACnF;AACA;;AAEA;AACA;AACA,uCAAuC,WAAW,oBAAoB,aAAa;AACnF;AACA;;AAEA;AACA,qCAAqC,WAAW,oBAAoB,YAAY;AAChF;AACA;;AAEO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,8BAA8B,aAAa;AAC3C;AACA,wBAAwB,WAAW,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,4CAA4C,UAAU;AACtD;AACA,MAAM;AACN,6CAA6C,UAAU;AACvD;AACA;AACA,GAAG;;AAEH,sCAAsC,gCAAgC;AACtE,C","sources":["webpack://flood-info-backend/external node-commonjs \"buffer\"","webpack://flood-info-backend/./node_modules/@smithy/smithy-client/dist-es/is-serializable-header-value.js","webpack://flood-info-backend/./node_modules/@aws-sdk/core/dist-es/submodules/client/setCredentialFeature.js","webpack://flood-info-backend/external node-commonjs \"async_hooks\"","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/utils/customEndpointFunctions.js","webpack://flood-info-backend/./node_modules/@smithy/shared-ini-file-loader/dist-es/slurpFile.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/util-identity-and-auth/DefaultIdentityProviderConfig.js","webpack://flood-info-backend/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/isIpAddress.js","webpack://flood-info-backend/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/isVirtualHostableS3Bucket.js","webpack://flood-info-backend/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/parseArn.js","webpack://flood-info-backend/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partition.js","webpack://flood-info-backend/./node_modules/@aws-sdk/util-endpoints/dist-es/aws.js","webpack://flood-info-backend/./node_modules/@aws-sdk/util-endpoints/dist-es/resolveDefaultAwsRegionalEndpointsConfig.js","webpack://flood-info-backend/./node_modules/@aws-sdk/util-endpoints/dist-es/resolveEndpoint.js","webpack://flood-info-backend/./node_modules/@aws-sdk/util-endpoints/dist-es/types/EndpointError.js","webpack://flood-info-backend/./node_modules/@aws-sdk/util-endpoints/dist-es/types/EndpointRuleObject.js","webpack://flood-info-backend/./node_modules/@aws-sdk/util-endpoints/dist-es/types/ErrorRuleObject.js","webpack://flood-info-backend/./node_modules/@aws-sdk/util-endpoints/dist-es/types/RuleSetObject.js","webpack://flood-info-backend/./node_modules/@aws-sdk/util-endpoints/dist-es/types/TreeRuleObject.js","webpack://flood-info-backend/./node_modules/@aws-sdk/util-endpoints/dist-es/types/shared.js","webpack://flood-info-backend/./node_modules/@aws-sdk/util-endpoints/dist-es/types/index.js","webpack://flood-info-backend/./node_modules/@aws-sdk/util-endpoints/dist-es/index.js","webpack://flood-info-backend/./node_modules/@smithy/middleware-content-length/dist-es/index.js","webpack://flood-info-backend/./node_modules/@smithy/smithy-client/dist-es/defaults-mode.js","webpack://flood-info-backend/external node-commonjs \"os\"","webpack://flood-info-backend/./node_modules/@smithy/util-stream/dist-es/blob/transforms.js","webpack://flood-info-backend/./node_modules/@smithy/util-stream/dist-es/blob/Uint8ArrayBlobAdapter.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/submodules/protocols/collect-stream-body.js","webpack://flood-info-backend/./node_modules/@aws-sdk/middleware-host-header/dist-es/index.js","webpack://flood-info-backend/./node_modules/@smithy/smithy-client/dist-es/object-mapping.js","webpack://flood-info-backend/./node_modules/@smithy/util-base64/dist-es/fromBase64.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/lib/isIpAddress.js","webpack://flood-info-backend/./node_modules/@smithy/shared-ini-file-loader/dist-es/parseIni.js","webpack://flood-info-backend/./node_modules/@aws-sdk/credential-provider-env/dist-es/fromEnv.js","webpack://flood-info-backend/./node_modules/@smithy/util-defaults-mode-node/dist-es/constants.js","webpack://flood-info-backend/./node_modules/@smithy/util-defaults-mode-node/dist-es/defaultsModeConfig.js","webpack://flood-info-backend/./node_modules/@smithy/util-defaults-mode-node/dist-es/resolveDefaultsModeConfig.js","webpack://flood-info-backend/./node_modules/@smithy/middleware-stack/dist-es/MiddlewareStack.js","webpack://flood-info-backend/./node_modules/@smithy/middleware-serde/dist-es/deserializerMiddleware.js","webpack://flood-info-backend/./node_modules/@smithy/middleware-serde/dist-es/serializerMiddleware.js","webpack://flood-info-backend/./node_modules/@smithy/middleware-serde/dist-es/serdePlugin.js","webpack://flood-info-backend/./node_modules/@smithy/hash-node/dist-es/index.js","webpack://flood-info-backend/./node_modules/@aws/lambda-invoke-store/dist/invoke-store.js","webpack://flood-info-backend/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/parseJsonBody.js","webpack://flood-info-backend/external node-commonjs \"fs/promises\"","webpack://flood-info-backend/./node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js","webpack://flood-info-backend/external node-commonjs \"stream\"","webpack://flood-info-backend/./node_modules/@smithy/util-body-length-node/dist-es/calculateBodyLength.js","webpack://flood-info-backend/./node_modules/@smithy/smithy-client/dist-es/emitWarningIfUnsupportedVersion.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/resolveAuthOptions.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/httpAuthSchemeMiddleware.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/getHttpAuthSchemeEndpointRuleSetPlugin.js","webpack://flood-info-backend/./node_modules/@smithy/shared-ini-file-loader/dist-es/getConfigFilepath.js","webpack://flood-info-backend/./node_modules/@smithy/util-uri-escape/dist-es/escape-uri.js","webpack://flood-info-backend/./node_modules/@smithy/querystring-parser/dist-es/index.js","webpack://flood-info-backend/./node_modules/@smithy/url-parser/dist-es/index.js","webpack://flood-info-backend/./node_modules/@aws-sdk/core/dist-es/submodules/client/emitWarningIfUnsupportedVersion.js","webpack://flood-info-backend/./node_modules/@smithy/middleware-endpoint/dist-es/resolveEndpointConfig.js","webpack://flood-info-backend/./node_modules/@smithy/smithy-client/dist-es/constants.js","webpack://flood-info-backend/./node_modules/@smithy/querystring-builder/dist-es/index.js","webpack://flood-info-backend/external node-commonjs \"https\"","webpack://flood-info-backend/./node_modules/@smithy/node-http-handler/dist-es/constants.js","webpack://flood-info-backend/./node_modules/@smithy/node-http-handler/dist-es/get-transformed-headers.js","webpack://flood-info-backend/./node_modules/@smithy/node-http-handler/dist-es/timing.js","webpack://flood-info-backend/./node_modules/@smithy/node-http-handler/dist-es/set-connection-timeout.js","webpack://flood-info-backend/./node_modules/@smithy/node-http-handler/dist-es/set-socket-keep-alive.js","webpack://flood-info-backend/./node_modules/@smithy/node-http-handler/dist-es/set-socket-timeout.js","webpack://flood-info-backend/./node_modules/@smithy/node-http-handler/dist-es/write-request-body.js","webpack://flood-info-backend/./node_modules/@smithy/node-http-handler/dist-es/node-http-handler.js","webpack://flood-info-backend/./node_modules/@smithy/protocol-http/dist-es/extensions/httpExtensionConfiguration.js","webpack://flood-info-backend/./node_modules/@smithy/smithy-client/dist-es/default-error-handler.js","webpack://flood-info-backend/./node_modules/@smithy/property-provider/dist-es/CredentialsProviderError.js","webpack://flood-info-backend/./node_modules/@smithy/util-config-provider/dist-es/types.js","webpack://flood-info-backend/./node_modules/@smithy/is-array-buffer/dist-es/index.js","webpack://flood-info-backend/./node_modules/@smithy/property-provider/dist-es/memoize.js","webpack://flood-info-backend/./node_modules/@smithy/node-config-provider/dist-es/getSelectorName.js","webpack://flood-info-backend/./node_modules/@smithy/node-config-provider/dist-es/fromEnv.js","webpack://flood-info-backend/./node_modules/@smithy/node-config-provider/dist-es/fromSharedConfigFiles.js","webpack://flood-info-backend/./node_modules/@smithy/property-provider/dist-es/fromStatic.js","webpack://flood-info-backend/./node_modules/@smithy/node-config-provider/dist-es/fromStatic.js","webpack://flood-info-backend/./node_modules/@smithy/node-config-provider/dist-es/configLoader.js","webpack://flood-info-backend/./node_modules/@smithy/protocol-http/dist-es/httpResponse.js","webpack://flood-info-backend/./node_modules/@smithy/smithy-client/dist-es/NoOpLogger.js","webpack://flood-info-backend/./node_modules/@aws-sdk/region-config-resolver/dist-es/extensions/index.js","webpack://flood-info-backend/./node_modules/@smithy/config-resolver/dist-es/regionConfig/isFipsRegion.js","webpack://flood-info-backend/./node_modules/@smithy/config-resolver/dist-es/regionConfig/getRealRegion.js","webpack://flood-info-backend/./node_modules/@smithy/config-resolver/dist-es/regionConfig/resolveRegionConfig.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/normalizeProvider.js","webpack://flood-info-backend/./node_modules/@smithy/smithy-client/dist-es/exceptions.js","webpack://flood-info-backend/./node_modules/@smithy/util-utf8/dist-es/toUint8Array.js","webpack://flood-info-backend/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getArrayForCommaSeparatedString.js","webpack://flood-info-backend/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getBearerTokenEnvKey.js","webpack://flood-info-backend/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/NODE_AUTH_SCHEME_PREFERENCE_OPTIONS.js","webpack://flood-info-backend/./node_modules/@smithy/service-error-classification/dist-es/constants.js","webpack://flood-info-backend/./node_modules/@smithy/service-error-classification/dist-es/index.js","webpack://flood-info-backend/external node-commonjs \"path\"","webpack://flood-info-backend/./node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseFipsEndpointConfigOptions.js","webpack://flood-info-backend/./node_modules/@smithy/config-resolver/dist-es/regionConfig/config.js","webpack://flood-info-backend/./node_modules/@smithy/uuid/dist-es/randomUUID.js","webpack://flood-info-backend/./node_modules/@smithy/uuid/dist-es/v4.js","webpack://flood-info-backend/./node_modules/@smithy/middleware-retry/dist-es/isStreamingPayload/isStreamingPayload.js","webpack://flood-info-backend/./node_modules/@smithy/middleware-retry/dist-es/util.js","webpack://flood-info-backend/./node_modules/@smithy/middleware-retry/dist-es/retryMiddleware.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/middleware-http-signing/httpSigningMiddleware.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/middleware-http-signing/getHttpSigningMiddleware.js","webpack://flood-info-backend/./node_modules/@smithy/node-http-handler/dist-es/stream-collector/collector.js","webpack://flood-info-backend/./node_modules/@smithy/node-http-handler/dist-es/stream-collector/index.js","webpack://flood-info-backend/external node-commonjs \"child_process\"","webpack://flood-info-backend/./node_modules/@smithy/shared-ini-file-loader/dist-es/getConfigData.js","webpack://flood-info-backend/./node_modules/@smithy/shared-ini-file-loader/dist-es/getCredentialsFilepath.js","webpack://flood-info-backend/./node_modules/@smithy/shared-ini-file-loader/dist-es/loadSharedConfigFiles.js","webpack://flood-info-backend/./node_modules/@smithy/types/dist-es/profile.js","webpack://flood-info-backend/./node_modules/@smithy/util-config-provider/dist-es/booleanSelector.js","webpack://flood-info-backend/./node_modules/@smithy/util-retry/dist-es/DefaultRateLimiter.js","webpack://flood-info-backend/./node_modules/@smithy/util-retry/dist-es/defaultRetryBackoffStrategy.js","webpack://flood-info-backend/./node_modules/@smithy/util-retry/dist-es/defaultRetryToken.js","webpack://flood-info-backend/./node_modules/@smithy/util-retry/dist-es/StandardRetryStrategy.js","webpack://flood-info-backend/./node_modules/@smithy/util-retry/dist-es/AdaptiveRetryStrategy.js","webpack://flood-info-backend/./node_modules/@smithy/middleware-retry/dist-es/configurations.js","webpack://flood-info-backend/./node_modules/@smithy/property-provider/dist-es/ProviderError.js","webpack://flood-info-backend/./node_modules/@smithy/util-middleware/dist-es/getSmithyContext.js","webpack://flood-info-backend/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getSkewCorrectedDate.js","webpack://flood-info-backend/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getDateHeader.js","webpack://flood-info-backend/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/isClockSkewed.js","webpack://flood-info-backend/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getUpdatedSystemClockOffset.js","webpack://flood-info-backend/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js","webpack://flood-info-backend/./node_modules/@smithy/shared-ini-file-loader/dist-es/getProfileName.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/submodules/serde/parse-utils.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/setFeature.js","webpack://flood-info-backend/./node_modules/@smithy/middleware-endpoint/dist-es/service-customizations/s3.js","webpack://flood-info-backend/./node_modules/@smithy/middleware-endpoint/dist-es/adaptors/createConfigValueProvider.js","webpack://flood-info-backend/./node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromInstructions.js","webpack://flood-info-backend/./node_modules/@smithy/middleware-endpoint/dist-es/endpointMiddleware.js","webpack://flood-info-backend/./node_modules/@smithy/middleware-endpoint/dist-es/getEndpointPlugin.js","webpack://flood-info-backend/./node_modules/@smithy/util-buffer-from/dist-es/index.js","webpack://flood-info-backend/external node-commonjs \"crypto\"","webpack://flood-info-backend/external node-commonjs \"url\"","webpack://flood-info-backend/./node_modules/@smithy/shared-ini-file-loader/dist-es/getHomeDir.js","webpack://flood-info-backend/./node_modules/@smithy/util-retry/dist-es/constants.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/debug/debugId.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/debug/toDebugString.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/types/EndpointError.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/lib/booleanEquals.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/lib/getAttrPathList.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/lib/getAttr.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/lib/isSet.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/lib/not.js","webpack://flood-info-backend/./node_modules/@smithy/types/dist-es/endpoint.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/lib/parseURL.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/lib/stringEquals.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/lib/substring.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/lib/uriEncode.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/utils/endpointFunctions.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/utils/evaluateTemplate.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/utils/getReferenceValue.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/utils/evaluateExpression.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/utils/callFunction.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/utils/evaluateCondition.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/utils/evaluateConditions.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointHeaders.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointProperty.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointProperties.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointUrl.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/utils/evaluateEndpointRule.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/utils/evaluateErrorRule.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/utils/evaluateTreeRule.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/utils/evaluateRules.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/resolveEndpoint.js","webpack://flood-info-backend/./node_modules/@smithy/types/dist-es/middleware.js","webpack://flood-info-backend/./node_modules/@aws-sdk/middleware-user-agent/dist-es/configurations.js","webpack://flood-info-backend/./node_modules/@smithy/protocol-http/dist-es/httpRequest.js","webpack://flood-info-backend/./node_modules/@smithy/util-retry/dist-es/config.js","webpack://flood-info-backend/./node_modules/@smithy/util-utf8/dist-es/fromUtf8.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/cache/EndpointCache.js","webpack://flood-info-backend/./node_modules/@smithy/util-utf8/dist-es/toUtf8.js","webpack://flood-info-backend/./node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js","webpack://flood-info-backend/./node_modules/@smithy/smithy-client/dist-es/client.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/submodules/protocols/extended-encode-uri-component.js","webpack://flood-info-backend/./node_modules/@aws-sdk/middleware-recursion-detection/dist-es/configuration.js","webpack://flood-info-backend/./node_modules/@aws-sdk/middleware-recursion-detection/dist-es/recursionDetectionMiddleware.js","webpack://flood-info-backend/./node_modules/@aws-sdk/middleware-recursion-detection/dist-es/getRecursionDetectionPlugin.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/util-identity-and-auth/memoizeIdentityProvider.js","webpack://flood-info-backend/./node_modules/@smithy/signature-v4/dist-es/constants.js","webpack://flood-info-backend/./node_modules/@smithy/signature-v4/dist-es/credentialDerivation.js","webpack://flood-info-backend/./node_modules/@smithy/signature-v4/dist-es/getCanonicalHeaders.js","webpack://flood-info-backend/./node_modules/@smithy/signature-v4/dist-es/getPayloadHash.js","webpack://flood-info-backend/./node_modules/@smithy/signature-v4/dist-es/HeaderFormatter.js","webpack://flood-info-backend/./node_modules/@smithy/signature-v4/dist-es/headerUtil.js","webpack://flood-info-backend/./node_modules/@smithy/signature-v4/dist-es/moveHeadersToQuery.js","webpack://flood-info-backend/./node_modules/@smithy/signature-v4/dist-es/prepareRequest.js","webpack://flood-info-backend/./node_modules/@smithy/signature-v4/dist-es/getCanonicalQuery.js","webpack://flood-info-backend/./node_modules/@smithy/signature-v4/dist-es/utilDate.js","webpack://flood-info-backend/./node_modules/@smithy/signature-v4/dist-es/SignatureV4Base.js","webpack://flood-info-backend/./node_modules/@smithy/signature-v4/dist-es/SignatureV4.js","webpack://flood-info-backend/./node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js","webpack://flood-info-backend/./node_modules/@smithy/util-hex-encoding/dist-es/index.js","webpack://flood-info-backend/./node_modules/@aws-sdk/core/dist-es/submodules/client/setFeature.js","webpack://flood-info-backend/./node_modules/@aws-sdk/middleware-user-agent/dist-es/check-features.js","webpack://flood-info-backend/./node_modules/@aws-sdk/middleware-user-agent/dist-es/constants.js","webpack://flood-info-backend/./node_modules/@aws-sdk/middleware-user-agent/dist-es/encode-features.js","webpack://flood-info-backend/./node_modules/@aws-sdk/middleware-user-agent/dist-es/user-agent-middleware.js","webpack://flood-info-backend/./node_modules/@smithy/property-provider/dist-es/chain.js","webpack://flood-info-backend/./node_modules/@aws-sdk/core/dist-es/submodules/protocols/common.js","webpack://flood-info-backend/external node-commonjs \"process\"","webpack://flood-info-backend/./node_modules/@aws-sdk/util-user-agent-node/dist-es/crt-availability.js","webpack://flood-info-backend/./node_modules/@aws-sdk/util-user-agent-node/dist-es/is-crt-available.js","webpack://flood-info-backend/./node_modules/@aws-sdk/util-user-agent-node/dist-es/defaultUserAgent.js","webpack://flood-info-backend/./node_modules/@smithy/middleware-endpoint/dist-es/adaptors/toEndpointV1.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/submodules/schema/deref.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/submodules/schema/TypeRegistry.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/submodules/schema/schemas/Schema.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/submodules/schema/schemas/ListSchema.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/submodules/schema/schemas/MapSchema.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/submodules/schema/schemas/sentinels.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/submodules/schema/schemas/SimpleSchema.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/submodules/schema/schemas/StructureSchema.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/submodules/schema/schemas/NormalizedSchema.js","webpack://flood-info-backend/./node_modules/@smithy/smithy-client/dist-es/schemaLogFilter.js","webpack://flood-info-backend/./node_modules/@smithy/smithy-client/dist-es/command.js","webpack://flood-info-backend/external node-commonjs \"http\"","webpack://flood-info-backend/./node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointUrlConfig.js","webpack://flood-info-backend/./node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromConfig.js","webpack://flood-info-backend/./node_modules/@smithy/util-endpoints/dist-es/lib/isValidHostLabel.js","webpack://flood-info-backend/./node_modules/@smithy/util-middleware/dist-es/normalizeProvider.js","webpack://flood-info-backend/external node-commonjs \"util\"","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/submodules/protocols/resolve-path.js","webpack://flood-info-backend/./node_modules/@smithy/core/dist-es/submodules/protocols/requestBuilder.js","webpack://flood-info-backend/./node_modules/@smithy/util-base64/dist-es/toBase64.js","webpack://flood-info-backend/external node-commonjs \"fs\"","webpack://flood-info-backend/./node_modules/@aws-sdk/util-user-agent-node/dist-es/nodeAppIdConfigOptions.js","webpack://flood-info-backend/./node_modules/@smithy/types/dist-es/extensions/checksum.js","webpack://flood-info-backend/./node_modules/@smithy/smithy-client/dist-es/extensions/checksum.js","webpack://flood-info-backend/./node_modules/@smithy/smithy-client/dist-es/extensions/retry.js","webpack://flood-info-backend/./node_modules/@smithy/smithy-client/dist-es/extensions/defaultExtensionConfiguration.js","webpack://flood-info-backend/webpack/bootstrap","webpack://flood-info-backend/webpack/runtime/compat get default export","webpack://flood-info-backend/webpack/runtime/define property getters","webpack://flood-info-backend/webpack/runtime/ensure chunk","webpack://flood-info-backend/webpack/runtime/get javascript chunk filename","webpack://flood-info-backend/webpack/runtime/hasOwnProperty shorthand","webpack://flood-info-backend/webpack/runtime/make namespace object","webpack://flood-info-backend/webpack/runtime/require chunk loading","webpack://flood-info-backend/./node_modules/@smithy/eventstream-serde-config-resolver/dist-es/EventStreamSerdeConfig.js","webpack://flood-info-backend/./node_modules/@aws-sdk/client-lambda/dist-es/auth/httpAuthSchemeProvider.js","webpack://flood-info-backend/./node_modules/@aws-sdk/client-lambda/dist-es/endpoint/EndpointParameters.js","webpack://flood-info-backend/./node_modules/@aws-sdk/credential-provider-node/dist-es/remoteProvider.js","webpack://flood-info-backend/./node_modules/@aws-sdk/credential-provider-node/dist-es/defaultProvider.js","webpack://flood-info-backend/./node_modules/tslib/tslib.es6.mjs","webpack://flood-info-backend/./node_modules/@aws-crypto/util/node_modules/@smithy/util-buffer-from/dist-es/index.js","webpack://flood-info-backend/./node_modules/@aws-crypto/util/node_modules/@smithy/util-utf8/dist-es/fromUtf8.js","webpack://flood-info-backend/./node_modules/@aws-crypto/util/node_modules/@smithy/util-utf8/dist-es/toUint8Array.js","webpack://flood-info-backend/./node_modules/@aws-crypto/util/node_modules/@smithy/util-utf8/dist-es/toUtf8.js","webpack://flood-info-backend/./node_modules/@aws-crypto/util/node_modules/@smithy/util-utf8/dist-es/index.js","webpack://flood-info-backend/./node_modules/@aws-crypto/util/build/module/convertToBuffer.js","webpack://flood-info-backend/./node_modules/@aws-crypto/util/build/module/isEmptyData.js","webpack://flood-info-backend/./node_modules/@aws-crypto/util/build/module/numToUint8.js","webpack://flood-info-backend/./node_modules/@aws-crypto/util/build/module/uint32ArrayFrom.js","webpack://flood-info-backend/./node_modules/@aws-crypto/util/build/module/index.js","webpack://flood-info-backend/./node_modules/@aws-crypto/crc32/build/module/aws_crc32.js","webpack://flood-info-backend/./node_modules/@aws-crypto/crc32/build/module/index.js","webpack://flood-info-backend/./node_modules/@smithy/eventstream-codec/dist-es/Int64.js","webpack://flood-info-backend/./node_modules/@smithy/eventstream-codec/dist-es/HeaderMarshaller.js","webpack://flood-info-backend/./node_modules/@smithy/eventstream-codec/dist-es/splitMessage.js","webpack://flood-info-backend/./node_modules/@smithy/eventstream-codec/dist-es/EventStreamCodec.js","webpack://flood-info-backend/./node_modules/@smithy/eventstream-codec/dist-es/SmithyMessageDecoderStream.js","webpack://flood-info-backend/./node_modules/@smithy/eventstream-codec/dist-es/MessageDecoderStream.js","webpack://flood-info-backend/./node_modules/@smithy/eventstream-codec/dist-es/MessageEncoderStream.js","webpack://flood-info-backend/./node_modules/@smithy/eventstream-codec/dist-es/SmithyMessageEncoderStream.js","webpack://flood-info-backend/./node_modules/@smithy/eventstream-serde-universal/dist-es/getChunkedStream.js","webpack://flood-info-backend/./node_modules/@smithy/eventstream-serde-universal/dist-es/getUnmarshalledStream.js","webpack://flood-info-backend/./node_modules/@smithy/eventstream-serde-universal/dist-es/EventStreamMarshaller.js","webpack://flood-info-backend/./node_modules/@smithy/eventstream-serde-node/dist-es/utils.js","webpack://flood-info-backend/./node_modules/@smithy/eventstream-serde-node/dist-es/EventStreamMarshaller.js","webpack://flood-info-backend/./node_modules/@smithy/eventstream-serde-node/dist-es/provider.js","webpack://flood-info-backend/./node_modules/@aws-sdk/client-lambda/dist-es/endpoint/ruleset.js","webpack://flood-info-backend/./node_modules/@aws-sdk/client-lambda/dist-es/endpoint/endpointResolver.js","webpack://flood-info-backend/./node_modules/@aws-sdk/client-lambda/dist-es/runtimeConfig.shared.js","webpack://flood-info-backend/./node_modules/@aws-sdk/client-lambda/dist-es/runtimeConfig.js","webpack://flood-info-backend/./node_modules/@aws-sdk/client-lambda/dist-es/auth/httpAuthExtensionConfiguration.js","webpack://flood-info-backend/./node_modules/@aws-sdk/client-lambda/dist-es/runtimeExtensions.js","webpack://flood-info-backend/./node_modules/@aws-sdk/client-lambda/dist-es/LambdaClient.js","webpack://flood-info-backend/./node_modules/@aws-sdk/client-lambda/dist-es/models/LambdaServiceException.js","webpack://flood-info-backend/./node_modules/@aws-sdk/client-lambda/dist-es/models/models_0.js","webpack://flood-info-backend/./node_modules/@aws-sdk/client-lambda/dist-es/protocols/Aws_restJson1.js","webpack://flood-info-backend/./node_modules/@aws-sdk/client-lambda/dist-es/commands/InvokeCommand.js","webpack://flood-info-backend/./.warmup/index.mjs"],"sourcesContent":["module.exports = require(\"buffer\");","export const isSerializableHeaderValue = (value) => {\n    return value != null;\n};\n","export function setCredentialFeature(credentials, feature, value) {\n    if (!credentials.$source) {\n        credentials.$source = {};\n    }\n    credentials.$source[feature] = value;\n    return credentials;\n}\n","module.exports = require(\"async_hooks\");","export const customEndpointFunctions = {};\n","import { promises as fsPromises } from \"fs\";\nconst { readFile } = fsPromises;\nexport const filePromisesHash = {};\nexport const fileIntercept = {};\nexport const slurpFile = (path, options) => {\n    if (fileIntercept[path] !== undefined) {\n        return fileIntercept[path];\n    }\n    if (!filePromisesHash[path] || options?.ignoreCache) {\n        filePromisesHash[path] = readFile(path, \"utf8\");\n    }\n    return filePromisesHash[path];\n};\n","export class DefaultIdentityProviderConfig {\n    constructor(config) {\n        this.authSchemes = new Map();\n        for (const [key, value] of Object.entries(config)) {\n            if (value !== undefined) {\n                this.authSchemes.set(key, value);\n            }\n        }\n    }\n    getIdentityProvider(schemeId) {\n        return this.authSchemes.get(schemeId);\n    }\n}\n","export { isIpAddress } from \"@smithy/util-endpoints\";\n","import { isValidHostLabel } from \"@smithy/util-endpoints\";\nimport { isIpAddress } from \"../isIpAddress\";\nexport const isVirtualHostableS3Bucket = (value, allowSubDomains = false) => {\n    if (allowSubDomains) {\n        for (const label of value.split(\".\")) {\n            if (!isVirtualHostableS3Bucket(label)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (!isValidHostLabel(value)) {\n        return false;\n    }\n    if (value.length < 3 || value.length > 63) {\n        return false;\n    }\n    if (value !== value.toLowerCase()) {\n        return false;\n    }\n    if (isIpAddress(value)) {\n        return false;\n    }\n    return true;\n};\n","const ARN_DELIMITER = \":\";\nconst RESOURCE_DELIMITER = \"/\";\nexport const parseArn = (value) => {\n    const segments = value.split(ARN_DELIMITER);\n    if (segments.length < 6)\n        return null;\n    const [arn, partition, service, region, accountId, ...resourcePath] = segments;\n    if (arn !== \"arn\" || partition === \"\" || service === \"\" || resourcePath.join(ARN_DELIMITER) === \"\")\n        return null;\n    const resourceId = resourcePath.map((resource) => resource.split(RESOURCE_DELIMITER)).flat();\n    return {\n        partition,\n        service,\n        region,\n        accountId,\n        resourceId,\n    };\n};\n","import partitionsInfo from \"./partitions.json\";\nlet selectedPartitionsInfo = partitionsInfo;\nlet selectedUserAgentPrefix = \"\";\nexport const partition = (value) => {\n    const { partitions } = selectedPartitionsInfo;\n    for (const partition of partitions) {\n        const { regions, outputs } = partition;\n        for (const [region, regionData] of Object.entries(regions)) {\n            if (region === value) {\n                return {\n                    ...outputs,\n                    ...regionData,\n                };\n            }\n        }\n    }\n    for (const partition of partitions) {\n        const { regionRegex, outputs } = partition;\n        if (new RegExp(regionRegex).test(value)) {\n            return {\n                ...outputs,\n            };\n        }\n    }\n    const DEFAULT_PARTITION = partitions.find((partition) => partition.id === \"aws\");\n    if (!DEFAULT_PARTITION) {\n        throw new Error(\"Provided region was not found in the partition array or regex,\" +\n            \" and default partition with id 'aws' doesn't exist.\");\n    }\n    return {\n        ...DEFAULT_PARTITION.outputs,\n    };\n};\nexport const setPartitionInfo = (partitionsInfo, userAgentPrefix = \"\") => {\n    selectedPartitionsInfo = partitionsInfo;\n    selectedUserAgentPrefix = userAgentPrefix;\n};\nexport const useDefaultPartitionInfo = () => {\n    setPartitionInfo(partitionsInfo, \"\");\n};\nexport const getUserAgentPrefix = () => selectedUserAgentPrefix;\n","import { customEndpointFunctions } from \"@smithy/util-endpoints\";\nimport { isVirtualHostableS3Bucket } from \"./lib/aws/isVirtualHostableS3Bucket\";\nimport { parseArn } from \"./lib/aws/parseArn\";\nimport { partition } from \"./lib/aws/partition\";\nexport const awsEndpointFunctions = {\n    isVirtualHostableS3Bucket: isVirtualHostableS3Bucket,\n    parseArn: parseArn,\n    partition: partition,\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n","import { parseUrl } from \"@smithy/url-parser\";\nexport const resolveDefaultAwsRegionalEndpointsConfig = (input) => {\n    if (typeof input.endpointProvider !== \"function\") {\n        throw new Error(\"@aws-sdk/util-endpoint - endpointProvider and endpoint missing in config for this client.\");\n    }\n    const { endpoint } = input;\n    if (endpoint === undefined) {\n        input.endpoint = async () => {\n            return toEndpointV1(input.endpointProvider({\n                Region: typeof input.region === \"function\" ? await input.region() : input.region,\n                UseDualStack: typeof input.useDualstackEndpoint === \"function\"\n                    ? await input.useDualstackEndpoint()\n                    : input.useDualstackEndpoint,\n                UseFIPS: typeof input.useFipsEndpoint === \"function\" ? await input.useFipsEndpoint() : input.useFipsEndpoint,\n                Endpoint: undefined,\n            }, { logger: input.logger }));\n        };\n    }\n    return input;\n};\nexport const toEndpointV1 = (endpoint) => parseUrl(endpoint.url);\n","export { resolveEndpoint } from \"@smithy/util-endpoints\";\n","export { EndpointError } from \"@smithy/util-endpoints\";\n","export {};\n","export {};\n","export {};\n","export {};\n","export {};\n","export * from \"./EndpointError\";\nexport * from \"./EndpointRuleObject\";\nexport * from \"./ErrorRuleObject\";\nexport * from \"./RuleSetObject\";\nexport * from \"./TreeRuleObject\";\nexport * from \"./shared\";\n","export * from \"./aws\";\nexport * from \"./lib/aws/partition\";\nexport * from \"./lib/isIpAddress\";\nexport * from \"./resolveDefaultAwsRegionalEndpointsConfig\";\nexport * from \"./resolveEndpoint\";\nexport * from \"./types\";\n","import { HttpRequest } from \"@smithy/protocol-http\";\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nexport function contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                try {\n                    const length = bodyLengthChecker(body);\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n                catch (error) {\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexport const contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nexport const getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n    },\n});\n","export const loadConfigsForDefaultMode = (mode) => {\n    switch (mode) {\n        case \"standard\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"in-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 1100,\n            };\n        case \"cross-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"mobile\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 30000,\n            };\n        default:\n            return {};\n    }\n};\n","module.exports = require(\"os\");","import { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { Uint8ArrayBlobAdapter } from \"./Uint8ArrayBlobAdapter\";\nexport function transformToString(payload, encoding = \"utf-8\") {\n    if (encoding === \"base64\") {\n        return toBase64(payload);\n    }\n    return toUtf8(payload);\n}\nexport function transformFromString(str, encoding) {\n    if (encoding === \"base64\") {\n        return Uint8ArrayBlobAdapter.mutate(fromBase64(str));\n    }\n    return Uint8ArrayBlobAdapter.mutate(fromUtf8(str));\n}\n","import { transformFromString, transformToString } from \"./transforms\";\nexport class Uint8ArrayBlobAdapter extends Uint8Array {\n    static fromString(source, encoding = \"utf-8\") {\n        switch (typeof source) {\n            case \"string\":\n                return transformFromString(source, encoding);\n            default:\n                throw new Error(`Unsupported conversion from ${typeof source} to Uint8ArrayBlobAdapter.`);\n        }\n    }\n    static mutate(source) {\n        Object.setPrototypeOf(source, Uint8ArrayBlobAdapter.prototype);\n        return source;\n    }\n    transformToString(encoding = \"utf-8\") {\n        return transformToString(this, encoding);\n    }\n}\n","import { Uint8ArrayBlobAdapter } from \"@smithy/util-stream\";\nexport const collectBody = async (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Uint8ArrayBlobAdapter.mutate(streamBody);\n    }\n    if (!streamBody) {\n        return Uint8ArrayBlobAdapter.mutate(new Uint8Array());\n    }\n    const fromContext = context.streamCollector(streamBody);\n    return Uint8ArrayBlobAdapter.mutate(await fromContext);\n};\n","import { HttpRequest } from \"@smithy/protocol-http\";\nexport function resolveHostHeaderConfig(input) {\n    return input;\n}\nexport const hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = request.hostname + (request.port ? \":\" + request.port : \"\");\n    }\n    else if (!request.headers[\"host\"]) {\n        let host = request.hostname;\n        if (request.port != null)\n            host += `:${request.port}`;\n        request.headers[\"host\"] = host;\n    }\n    return next(args);\n};\nexport const hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nexport const getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n    },\n});\n","export function map(arg0, arg1, arg2) {\n    let target;\n    let filter;\n    let instructions;\n    if (typeof arg1 === \"undefined\" && typeof arg2 === \"undefined\") {\n        target = {};\n        instructions = arg0;\n    }\n    else {\n        target = arg0;\n        if (typeof arg1 === \"function\") {\n            filter = arg1;\n            instructions = arg2;\n            return mapWithFilter(target, filter, instructions);\n        }\n        else {\n            instructions = arg1;\n        }\n    }\n    for (const key of Object.keys(instructions)) {\n        if (!Array.isArray(instructions[key])) {\n            target[key] = instructions[key];\n            continue;\n        }\n        applyInstruction(target, null, instructions, key);\n    }\n    return target;\n}\nexport const convertMap = (target) => {\n    const output = {};\n    for (const [k, v] of Object.entries(target || {})) {\n        output[k] = [, v];\n    }\n    return output;\n};\nexport const take = (source, instructions) => {\n    const out = {};\n    for (const key in instructions) {\n        applyInstruction(out, source, instructions, key);\n    }\n    return out;\n};\nconst mapWithFilter = (target, filter, instructions) => {\n    return map(target, Object.entries(instructions).reduce((_instructions, [key, value]) => {\n        if (Array.isArray(value)) {\n            _instructions[key] = value;\n        }\n        else {\n            if (typeof value === \"function\") {\n                _instructions[key] = [filter, value()];\n            }\n            else {\n                _instructions[key] = [filter, value];\n            }\n        }\n        return _instructions;\n    }, {}));\n};\nconst applyInstruction = (target, source, instructions, targetKey) => {\n    if (source !== null) {\n        let instruction = instructions[targetKey];\n        if (typeof instruction === \"function\") {\n            instruction = [, instruction];\n        }\n        const [filter = nonNullish, valueFn = pass, sourceKey = targetKey] = instruction;\n        if ((typeof filter === \"function\" && filter(source[sourceKey])) || (typeof filter !== \"function\" && !!filter)) {\n            target[targetKey] = valueFn(source[sourceKey]);\n        }\n        return;\n    }\n    let [filter, value] = instructions[targetKey];\n    if (typeof value === \"function\") {\n        let _value;\n        const defaultFilterPassed = filter === undefined && (_value = value()) != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(void 0)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed) {\n            target[targetKey] = _value;\n        }\n        else if (customFilterPassed) {\n            target[targetKey] = value();\n        }\n    }\n    else {\n        const defaultFilterPassed = filter === undefined && value != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(value)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed || customFilterPassed) {\n            target[targetKey] = value;\n        }\n    }\n};\nconst nonNullish = (_) => _ != null;\nconst pass = (_) => _;\n","import { fromString } from \"@smithy/util-buffer-from\";\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nexport const fromBase64 = (input) => {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = fromString(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n};\n","const IP_V4_REGEX = new RegExp(`^(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}$`);\nexport const isIpAddress = (value) => IP_V4_REGEX.test(value) || (value.startsWith(\"[\") && value.endsWith(\"]\"));\n","import { IniSectionType } from \"@smithy/types\";\nimport { CONFIG_PREFIX_SEPARATOR } from \"./loadSharedConfigFiles\";\nconst prefixKeyRegex = /^([\\w-]+)\\s([\"'])?([\\w-@\\+\\.%:/]+)\\2$/;\nconst profileNameBlockList = [\"__proto__\", \"profile __proto__\"];\nexport const parseIni = (iniData) => {\n    const map = {};\n    let currentSection;\n    let currentSubSection;\n    for (const iniLine of iniData.split(/\\r?\\n/)) {\n        const trimmedLine = iniLine.split(/(^|\\s)[;#]/)[0].trim();\n        const isSection = trimmedLine[0] === \"[\" && trimmedLine[trimmedLine.length - 1] === \"]\";\n        if (isSection) {\n            currentSection = undefined;\n            currentSubSection = undefined;\n            const sectionName = trimmedLine.substring(1, trimmedLine.length - 1);\n            const matches = prefixKeyRegex.exec(sectionName);\n            if (matches) {\n                const [, prefix, , name] = matches;\n                if (Object.values(IniSectionType).includes(prefix)) {\n                    currentSection = [prefix, name].join(CONFIG_PREFIX_SEPARATOR);\n                }\n            }\n            else {\n                currentSection = sectionName;\n            }\n            if (profileNameBlockList.includes(sectionName)) {\n                throw new Error(`Found invalid profile name \"${sectionName}\"`);\n            }\n        }\n        else if (currentSection) {\n            const indexOfEqualsSign = trimmedLine.indexOf(\"=\");\n            if (![0, -1].includes(indexOfEqualsSign)) {\n                const [name, value] = [\n                    trimmedLine.substring(0, indexOfEqualsSign).trim(),\n                    trimmedLine.substring(indexOfEqualsSign + 1).trim(),\n                ];\n                if (value === \"\") {\n                    currentSubSection = name;\n                }\n                else {\n                    if (currentSubSection && iniLine.trimStart() === iniLine) {\n                        currentSubSection = undefined;\n                    }\n                    map[currentSection] = map[currentSection] || {};\n                    const key = currentSubSection ? [currentSubSection, name].join(CONFIG_PREFIX_SEPARATOR) : name;\n                    map[currentSection][key] = value;\n                }\n            }\n        }\n    }\n    return map;\n};\n","import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { CredentialsProviderError } from \"@smithy/property-provider\";\nexport const ENV_KEY = \"AWS_ACCESS_KEY_ID\";\nexport const ENV_SECRET = \"AWS_SECRET_ACCESS_KEY\";\nexport const ENV_SESSION = \"AWS_SESSION_TOKEN\";\nexport const ENV_EXPIRATION = \"AWS_CREDENTIAL_EXPIRATION\";\nexport const ENV_CREDENTIAL_SCOPE = \"AWS_CREDENTIAL_SCOPE\";\nexport const ENV_ACCOUNT_ID = \"AWS_ACCOUNT_ID\";\nexport const fromEnv = (init) => async () => {\n    init?.logger?.debug(\"@aws-sdk/credential-provider-env - fromEnv\");\n    const accessKeyId = process.env[ENV_KEY];\n    const secretAccessKey = process.env[ENV_SECRET];\n    const sessionToken = process.env[ENV_SESSION];\n    const expiry = process.env[ENV_EXPIRATION];\n    const credentialScope = process.env[ENV_CREDENTIAL_SCOPE];\n    const accountId = process.env[ENV_ACCOUNT_ID];\n    if (accessKeyId && secretAccessKey) {\n        const credentials = {\n            accessKeyId,\n            secretAccessKey,\n            ...(sessionToken && { sessionToken }),\n            ...(expiry && { expiration: new Date(expiry) }),\n            ...(credentialScope && { credentialScope }),\n            ...(accountId && { accountId }),\n        };\n        setCredentialFeature(credentials, \"CREDENTIALS_ENV_VARS\", \"g\");\n        return credentials;\n    }\n    throw new CredentialsProviderError(\"Unable to find environment variable credentials.\", { logger: init?.logger });\n};\n","export const AWS_EXECUTION_ENV = \"AWS_EXECUTION_ENV\";\nexport const AWS_REGION_ENV = \"AWS_REGION\";\nexport const AWS_DEFAULT_REGION_ENV = \"AWS_DEFAULT_REGION\";\nexport const ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nexport const DEFAULTS_MODE_OPTIONS = [\"in-region\", \"cross-region\", \"mobile\", \"standard\", \"legacy\"];\nexport const IMDS_REGION_PATH = \"/latest/meta-data/placement/region\";\n","const AWS_DEFAULTS_MODE_ENV = \"AWS_DEFAULTS_MODE\";\nconst AWS_DEFAULTS_MODE_CONFIG = \"defaults_mode\";\nexport const NODE_DEFAULTS_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        return env[AWS_DEFAULTS_MODE_ENV];\n    },\n    configFileSelector: (profile) => {\n        return profile[AWS_DEFAULTS_MODE_CONFIG];\n    },\n    default: \"legacy\",\n};\n","import { NODE_REGION_CONFIG_OPTIONS } from \"@smithy/config-resolver\";\nimport { loadConfig } from \"@smithy/node-config-provider\";\nimport { memoize } from \"@smithy/property-provider\";\nimport { AWS_DEFAULT_REGION_ENV, AWS_EXECUTION_ENV, AWS_REGION_ENV, DEFAULTS_MODE_OPTIONS, ENV_IMDS_DISABLED, IMDS_REGION_PATH, } from \"./constants\";\nimport { NODE_DEFAULTS_MODE_CONFIG_OPTIONS } from \"./defaultsModeConfig\";\nexport const resolveDefaultsModeConfig = ({ region = loadConfig(NODE_REGION_CONFIG_OPTIONS), defaultsMode = loadConfig(NODE_DEFAULTS_MODE_CONFIG_OPTIONS), } = {}) => memoize(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode?.toLowerCase()) {\n        case \"auto\":\n            return resolveNodeDefaultsModeAuto(region);\n        case \"in-region\":\n        case \"cross-region\":\n        case \"mobile\":\n        case \"standard\":\n        case \"legacy\":\n            return Promise.resolve(mode?.toLocaleLowerCase());\n        case undefined:\n            return Promise.resolve(\"legacy\");\n        default:\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n});\nconst resolveNodeDefaultsModeAuto = async (clientRegion) => {\n    if (clientRegion) {\n        const resolvedRegion = typeof clientRegion === \"function\" ? await clientRegion() : clientRegion;\n        const inferredRegion = await inferPhysicalRegion();\n        if (!inferredRegion) {\n            return \"standard\";\n        }\n        if (resolvedRegion === inferredRegion) {\n            return \"in-region\";\n        }\n        else {\n            return \"cross-region\";\n        }\n    }\n    return \"standard\";\n};\nconst inferPhysicalRegion = async () => {\n    if (process.env[AWS_EXECUTION_ENV] && (process.env[AWS_REGION_ENV] || process.env[AWS_DEFAULT_REGION_ENV])) {\n        return process.env[AWS_REGION_ENV] ?? process.env[AWS_DEFAULT_REGION_ENV];\n    }\n    if (!process.env[ENV_IMDS_DISABLED]) {\n        try {\n            const { getInstanceMetadataEndpoint, httpRequest } = await import(\"@smithy/credential-provider-imds\");\n            const endpoint = await getInstanceMetadataEndpoint();\n            return (await httpRequest({ ...endpoint, path: IMDS_REGION_PATH })).toString();\n        }\n        catch (e) {\n        }\n    }\n};\n","const getAllAliases = (name, aliases) => {\n    const _aliases = [];\n    if (name) {\n        _aliases.push(name);\n    }\n    if (aliases) {\n        for (const alias of aliases) {\n            _aliases.push(alias);\n        }\n    }\n    return _aliases;\n};\nconst getMiddlewareNameWithAliases = (name, aliases) => {\n    return `${name || \"anonymous\"}${aliases && aliases.length > 0 ? ` (a.k.a. ${aliases.join(\",\")})` : \"\"}`;\n};\nexport const constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    let identifyOnResolve = false;\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            const aliases = getAllAliases(entry.name, entry.aliases);\n            if (aliases.includes(toRemove)) {\n                isRemoved = true;\n                for (const alias of aliases) {\n                    entriesNameSet.delete(alias);\n                }\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                for (const alias of getAllAliases(entry.name, entry.aliases)) {\n                    entriesNameSet.delete(alias);\n                }\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        toStack.identifyOnResolve?.(stack.identifyOnResolve());\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    const getMiddlewareList = (debug = false) => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {\n                normalizedEntriesNameMap[alias] = normalizedEntry;\n            }\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {\n                normalizedEntriesNameMap[alias] = normalizedEntry;\n            }\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    if (debug) {\n                        return;\n                    }\n                    throw new Error(`${entry.toMiddleware} is not found when adding ` +\n                        `${getMiddlewareNameWithAliases(entry.name, entry.aliases)} ` +\n                        `middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expandedMiddlewareList) => {\n            wholeList.push(...expandedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain;\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override, aliases: _aliases } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            const aliases = getAllAliases(name, _aliases);\n            if (aliases.length > 0) {\n                if (aliases.some((alias) => entriesNameSet.has(alias))) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);\n                    for (const alias of aliases) {\n                        const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === alias || entry.aliases?.some((a) => a === alias));\n                        if (toOverrideIndex === -1) {\n                            continue;\n                        }\n                        const toOverride = absoluteEntries[toOverrideIndex];\n                        if (toOverride.step !== entry.step || entry.priority !== toOverride.priority) {\n                            throw new Error(`\"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}\" middleware with ` +\n                                `${toOverride.priority} priority in ${toOverride.step} step cannot ` +\n                                `be overridden by \"${getMiddlewareNameWithAliases(name, _aliases)}\" middleware with ` +\n                                `${entry.priority} priority in ${entry.step} step.`);\n                        }\n                        absoluteEntries.splice(toOverrideIndex, 1);\n                    }\n                }\n                for (const alias of aliases) {\n                    entriesNameSet.add(alias);\n                }\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override, aliases: _aliases } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            const aliases = getAllAliases(name, _aliases);\n            if (aliases.length > 0) {\n                if (aliases.some((alias) => entriesNameSet.has(alias))) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);\n                    for (const alias of aliases) {\n                        const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === alias || entry.aliases?.some((a) => a === alias));\n                        if (toOverrideIndex === -1) {\n                            continue;\n                        }\n                        const toOverride = relativeEntries[toOverrideIndex];\n                        if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                            throw new Error(`\"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}\" middleware ` +\n                                `${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                                `by \"${getMiddlewareNameWithAliases(name, _aliases)}\" middleware ${entry.relation} ` +\n                                `\"${entry.toMiddleware}\" middleware.`);\n                        }\n                        relativeEntries.splice(toOverrideIndex, 1);\n                    }\n                }\n                for (const alias of aliases) {\n                    entriesNameSet.add(alias);\n                }\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo(constructStack()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name, aliases: _aliases } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    const aliases = getAllAliases(name, _aliases);\n                    for (const alias of aliases) {\n                        entriesNameSet.delete(alias);\n                    }\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo(constructStack());\n            cloned.use(from);\n            cloned.identifyOnResolve(identifyOnResolve || cloned.identifyOnResolve() || (from.identifyOnResolve?.() ?? false));\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        identify: () => {\n            return getMiddlewareList(true).map((mw) => {\n                const step = mw.step ??\n                    mw.relation +\n                        \" \" +\n                        mw.toMiddleware;\n                return getMiddlewareNameWithAliases(mw.name, mw.aliases) + \" - \" + step;\n            });\n        },\n        identifyOnResolve(toggle) {\n            if (typeof toggle === \"boolean\")\n                identifyOnResolve = toggle;\n            return identifyOnResolve;\n        },\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList()\n                .map((entry) => entry.middleware)\n                .reverse()) {\n                handler = middleware(handler, context);\n            }\n            if (identifyOnResolve) {\n                console.log(stack.identify());\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n","import { HttpResponse } from \"@smithy/protocol-http\";\nexport const deserializerMiddleware = (options, deserializer) => (next, context) => async (args) => {\n    const { response } = await next(args);\n    try {\n        const parsed = await deserializer(response, options);\n        return {\n            response,\n            output: parsed,\n        };\n    }\n    catch (error) {\n        Object.defineProperty(error, \"$response\", {\n            value: response,\n        });\n        if (!(\"$metadata\" in error)) {\n            const hint = `Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.`;\n            try {\n                error.message += \"\\n  \" + hint;\n            }\n            catch (e) {\n                if (!context.logger || context.logger?.constructor?.name === \"NoOpLogger\") {\n                    console.warn(hint);\n                }\n                else {\n                    context.logger?.warn?.(hint);\n                }\n            }\n            if (typeof error.$responseBodyText !== \"undefined\") {\n                if (error.$response) {\n                    error.$response.body = error.$responseBodyText;\n                }\n            }\n            try {\n                if (HttpResponse.isInstance(response)) {\n                    const { headers = {} } = response;\n                    const headerEntries = Object.entries(headers);\n                    error.$metadata = {\n                        httpStatusCode: response.statusCode,\n                        requestId: findHeader(/^x-[\\w-]+-request-?id$/, headerEntries),\n                        extendedRequestId: findHeader(/^x-[\\w-]+-id-2$/, headerEntries),\n                        cfId: findHeader(/^x-[\\w-]+-cf-id$/, headerEntries),\n                    };\n                }\n            }\n            catch (e) {\n            }\n        }\n        throw error;\n    }\n};\nconst findHeader = (pattern, headers) => {\n    return (headers.find(([k]) => {\n        return k.match(pattern);\n    }) || [void 0, void 1])[1];\n};\n","export const serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\n    const endpointConfig = options;\n    const endpoint = context.endpointV2?.url && endpointConfig.urlParser\n        ? async () => endpointConfig.urlParser(context.endpointV2.url)\n        : endpointConfig.endpoint;\n    if (!endpoint) {\n        throw new Error(\"No valid endpoint provider available.\");\n    }\n    const request = await serializer(args.input, { ...options, endpoint });\n    return next({\n        ...args,\n        request,\n    });\n};\n","import { deserializerMiddleware } from \"./deserializerMiddleware\";\nimport { serializerMiddleware } from \"./serializerMiddleware\";\nexport const deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nexport const serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nexport function getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n            commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n        },\n    };\n}\n","import { fromArrayBuffer, fromString } from \"@smithy/util-buffer-from\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { Buffer } from \"buffer\";\nimport { createHash, createHmac } from \"crypto\";\nexport class Hash {\n    constructor(algorithmIdentifier, secret) {\n        this.algorithmIdentifier = algorithmIdentifier;\n        this.secret = secret;\n        this.reset();\n    }\n    update(toHash, encoding) {\n        this.hash.update(toUint8Array(castSourceData(toHash, encoding)));\n    }\n    digest() {\n        return Promise.resolve(this.hash.digest());\n    }\n    reset() {\n        this.hash = this.secret\n            ? createHmac(this.algorithmIdentifier, castSourceData(this.secret))\n            : createHash(this.algorithmIdentifier);\n    }\n}\nfunction castSourceData(toCast, encoding) {\n    if (Buffer.isBuffer(toCast)) {\n        return toCast;\n    }\n    if (typeof toCast === \"string\") {\n        return fromString(toCast, encoding);\n    }\n    if (ArrayBuffer.isView(toCast)) {\n        return fromArrayBuffer(toCast.buffer, toCast.byteOffset, toCast.byteLength);\n    }\n    return fromArrayBuffer(toCast);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvokeStore = void 0;\nconst async_hooks_1 = require(\"async_hooks\");\n// AWS_LAMBDA_NODEJS_NO_GLOBAL_AWSLAMBDA provides an escape hatch since we're modifying the global object which may not be expected to a customer's handler.\nconst noGlobalAwsLambda = process.env[\"AWS_LAMBDA_NODEJS_NO_GLOBAL_AWSLAMBDA\"] === \"1\" ||\n    process.env[\"AWS_LAMBDA_NODEJS_NO_GLOBAL_AWSLAMBDA\"] === \"true\";\nif (!noGlobalAwsLambda) {\n    globalThis.awslambda = globalThis.awslambda || {};\n}\nconst PROTECTED_KEYS = {\n    REQUEST_ID: Symbol(\"_AWS_LAMBDA_REQUEST_ID\"),\n    X_RAY_TRACE_ID: Symbol(\"_AWS_LAMBDA_X_RAY_TRACE_ID\"),\n};\n/**\n * InvokeStore implementation class\n */\nclass InvokeStoreImpl {\n    static storage = new async_hooks_1.AsyncLocalStorage();\n    // Protected keys for Lambda context fields\n    static PROTECTED_KEYS = PROTECTED_KEYS;\n    /**\n     * Initialize and run code within an invoke context\n     */\n    static run(context, fn) {\n        return this.storage.run({ ...context }, fn);\n    }\n    /**\n     * Get the complete current context\n     */\n    static getContext() {\n        return this.storage.getStore();\n    }\n    /**\n     * Get a specific value from the context by key\n     */\n    static get(key) {\n        const context = this.storage.getStore();\n        return context?.[key];\n    }\n    /**\n     * Set a custom value in the current context\n     * Protected Lambda context fields cannot be overwritten\n     */\n    static set(key, value) {\n        if (this.isProtectedKey(key)) {\n            throw new Error(`Cannot modify protected Lambda context field`);\n        }\n        const context = this.storage.getStore();\n        if (context) {\n            context[key] = value;\n        }\n    }\n    /**\n     * Get the current request ID\n     */\n    static getRequestId() {\n        return this.get(this.PROTECTED_KEYS.REQUEST_ID) ?? \"-\";\n    }\n    /**\n     * Get the current X-ray trace ID\n     */\n    static getXRayTraceId() {\n        return this.get(this.PROTECTED_KEYS.X_RAY_TRACE_ID);\n    }\n    /**\n     * Check if we're currently within an invoke context\n     */\n    static hasContext() {\n        return this.storage.getStore() !== undefined;\n    }\n    /**\n     * Check if a key is protected (readonly Lambda context field)\n     */\n    static isProtectedKey(key) {\n        return (key === this.PROTECTED_KEYS.REQUEST_ID ||\n            key === this.PROTECTED_KEYS.X_RAY_TRACE_ID);\n    }\n}\nlet instance;\nif (!noGlobalAwsLambda && globalThis.awslambda?.InvokeStore) {\n    instance = globalThis.awslambda.InvokeStore;\n}\nelse {\n    instance = InvokeStoreImpl;\n    if (!noGlobalAwsLambda && globalThis.awslambda) {\n        globalThis.awslambda.InvokeStore = instance;\n    }\n}\nexports.InvokeStore = instance;\n","import { collectBodyString } from \"../common\";\nexport const parseJsonBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        try {\n            return JSON.parse(encoded);\n        }\n        catch (e) {\n            if (e?.name === \"SyntaxError\") {\n                Object.defineProperty(e, \"$responseBodyText\", {\n                    value: encoded,\n                });\n            }\n            throw e;\n        }\n    }\n    return {};\n});\nexport const parseJsonErrorBody = async (errorBody, context) => {\n    const value = await parseJsonBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nexport const loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data && typeof data === \"object\") {\n        const codeKey = findKey(data, \"code\");\n        if (codeKey && data[codeKey] !== undefined) {\n            return sanitizeErrorCode(data[codeKey]);\n        }\n        if (data[\"__type\"] !== undefined) {\n            return sanitizeErrorCode(data[\"__type\"]);\n        }\n    }\n};\n","module.exports = require(\"fs/promises\");","import { booleanSelector, SelectorType } from \"@smithy/util-config-provider\";\nexport const ENV_USE_DUALSTACK_ENDPOINT = \"AWS_USE_DUALSTACK_ENDPOINT\";\nexport const CONFIG_USE_DUALSTACK_ENDPOINT = \"use_dualstack_endpoint\";\nexport const DEFAULT_USE_DUALSTACK_ENDPOINT = false;\nexport const NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_DUALSTACK_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_DUALSTACK_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n","module.exports = require(\"stream\");","import { fstatSync, lstatSync } from \"fs\";\nexport const calculateBodyLength = (body) => {\n    if (!body) {\n        return 0;\n    }\n    if (typeof body === \"string\") {\n        return Buffer.byteLength(body);\n    }\n    else if (typeof body.byteLength === \"number\") {\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    else if (typeof body.start === \"number\" && typeof body.end === \"number\") {\n        return body.end + 1 - body.start;\n    }\n    else if (typeof body.path === \"string\" || Buffer.isBuffer(body.path)) {\n        return lstatSync(body.path).size;\n    }\n    else if (typeof body.fd === \"number\") {\n        return fstatSync(body.fd).size;\n    }\n    throw new Error(`Body Length computation failed for ${body}`);\n};\n","let warningEmitted = false;\nexport const emitWarningIfUnsupportedVersion = (version) => {\n    if (version && !warningEmitted && parseInt(version.substring(1, version.indexOf(\".\"))) < 16) {\n        warningEmitted = true;\n    }\n};\n","export const resolveAuthOptions = (candidateAuthOptions, authSchemePreference) => {\n    if (!authSchemePreference || authSchemePreference.length === 0) {\n        return candidateAuthOptions;\n    }\n    const preferredAuthOptions = [];\n    for (const preferredSchemeName of authSchemePreference) {\n        for (const candidateAuthOption of candidateAuthOptions) {\n            const candidateAuthSchemeName = candidateAuthOption.schemeId.split(\"#\")[1];\n            if (candidateAuthSchemeName === preferredSchemeName) {\n                preferredAuthOptions.push(candidateAuthOption);\n            }\n        }\n    }\n    for (const candidateAuthOption of candidateAuthOptions) {\n        if (!preferredAuthOptions.find(({ schemeId }) => schemeId === candidateAuthOption.schemeId)) {\n            preferredAuthOptions.push(candidateAuthOption);\n        }\n    }\n    return preferredAuthOptions;\n};\n","import { getSmithyContext } from \"@smithy/util-middleware\";\nimport { resolveAuthOptions } from \"./resolveAuthOptions\";\nfunction convertHttpAuthSchemesToMap(httpAuthSchemes) {\n    const map = new Map();\n    for (const scheme of httpAuthSchemes) {\n        map.set(scheme.schemeId, scheme);\n    }\n    return map;\n}\nexport const httpAuthSchemeMiddleware = (config, mwOptions) => (next, context) => async (args) => {\n    const options = config.httpAuthSchemeProvider(await mwOptions.httpAuthSchemeParametersProvider(config, context, args.input));\n    const authSchemePreference = config.authSchemePreference ? await config.authSchemePreference() : [];\n    const resolvedOptions = resolveAuthOptions(options, authSchemePreference);\n    const authSchemes = convertHttpAuthSchemesToMap(config.httpAuthSchemes);\n    const smithyContext = getSmithyContext(context);\n    const failureReasons = [];\n    for (const option of resolvedOptions) {\n        const scheme = authSchemes.get(option.schemeId);\n        if (!scheme) {\n            failureReasons.push(`HttpAuthScheme \\`${option.schemeId}\\` was not enabled for this service.`);\n            continue;\n        }\n        const identityProvider = scheme.identityProvider(await mwOptions.identityProviderConfigProvider(config));\n        if (!identityProvider) {\n            failureReasons.push(`HttpAuthScheme \\`${option.schemeId}\\` did not have an IdentityProvider configured.`);\n            continue;\n        }\n        const { identityProperties = {}, signingProperties = {} } = option.propertiesExtractor?.(config, context) || {};\n        option.identityProperties = Object.assign(option.identityProperties || {}, identityProperties);\n        option.signingProperties = Object.assign(option.signingProperties || {}, signingProperties);\n        smithyContext.selectedHttpAuthScheme = {\n            httpAuthOption: option,\n            identity: await identityProvider(option.identityProperties),\n            signer: scheme.signer,\n        };\n        break;\n    }\n    if (!smithyContext.selectedHttpAuthScheme) {\n        throw new Error(failureReasons.join(\"\\n\"));\n    }\n    return next(args);\n};\n","import { httpAuthSchemeMiddleware } from \"./httpAuthSchemeMiddleware\";\nexport const httpAuthSchemeEndpointRuleSetMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"HTTP_AUTH_SCHEME\"],\n    name: \"httpAuthSchemeMiddleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: \"endpointV2Middleware\",\n};\nexport const getHttpAuthSchemeEndpointRuleSetPlugin = (config, { httpAuthSchemeParametersProvider, identityProviderConfigProvider, }) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(httpAuthSchemeMiddleware(config, {\n            httpAuthSchemeParametersProvider,\n            identityProviderConfigProvider,\n        }), httpAuthSchemeEndpointRuleSetMiddlewareOptions);\n    },\n});\n","import { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const ENV_CONFIG_PATH = \"AWS_CONFIG_FILE\";\nexport const getConfigFilepath = () => process.env[ENV_CONFIG_PATH] || join(getHomeDir(), \".aws\", \"config\");\n","export const escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n","export function parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\n","import { parseQueryString } from \"@smithy/querystring-parser\";\nexport const parseUrl = (url) => {\n    if (typeof url === \"string\") {\n        return parseUrl(new URL(url));\n    }\n    const { hostname, pathname, port, protocol, search } = url;\n    let query;\n    if (search) {\n        query = parseQueryString(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\n","export const state = {\n    warningEmitted: false,\n};\nexport const emitWarningIfUnsupportedVersion = (version) => {\n    if (version && !state.warningEmitted && parseInt(version.substring(1, version.indexOf(\".\"))) < 18) {\n        state.warningEmitted = true;\n        process.emitWarning(`NodeDeprecationWarning: The AWS SDK for JavaScript (v3) will\nno longer support Node.js 16.x on January 6, 2025.\n\nTo continue receiving updates to AWS services, bug fixes, and security\nupdates please upgrade to a supported Node.js LTS version.\n\nMore information can be found at: https://a.co/74kJMmI`);\n    }\n};\n","import { normalizeProvider } from \"@smithy/util-middleware\";\nimport { getEndpointFromConfig } from \"./adaptors/getEndpointFromConfig\";\nimport { toEndpointV1 } from \"./adaptors/toEndpointV1\";\nexport const resolveEndpointConfig = (input) => {\n    const tls = input.tls ?? true;\n    const { endpoint, useDualstackEndpoint, useFipsEndpoint } = input;\n    const customEndpointProvider = endpoint != null ? async () => toEndpointV1(await normalizeProvider(endpoint)()) : undefined;\n    const isCustomEndpoint = !!endpoint;\n    const resolvedConfig = Object.assign(input, {\n        endpoint: customEndpointProvider,\n        tls,\n        isCustomEndpoint,\n        useDualstackEndpoint: normalizeProvider(useDualstackEndpoint ?? false),\n        useFipsEndpoint: normalizeProvider(useFipsEndpoint ?? false),\n    });\n    let configuredEndpointPromise = undefined;\n    resolvedConfig.serviceConfiguredEndpoint = async () => {\n        if (input.serviceId && !configuredEndpointPromise) {\n            configuredEndpointPromise = getEndpointFromConfig(input.serviceId);\n        }\n        return configuredEndpointPromise;\n    };\n    return resolvedConfig;\n};\n","export const SENSITIVE_STRING = \"***SensitiveInformation***\";\n","import { escapeUri } from \"@smithy/util-uri-escape\";\nexport function buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = escapeUri(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${escapeUri(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${escapeUri(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"https\");","export const NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"EPIPE\", \"ETIMEDOUT\"];\n","const getTransformedHeaders = (headers) => {\n    const transformedHeaders = {};\n    for (const name of Object.keys(headers)) {\n        const headerValues = headers[name];\n        transformedHeaders[name] = Array.isArray(headerValues) ? headerValues.join(\",\") : headerValues;\n    }\n    return transformedHeaders;\n};\nexport { getTransformedHeaders };\n","export const timing = {\n    setTimeout: (cb, ms) => setTimeout(cb, ms),\n    clearTimeout: (timeoutId) => clearTimeout(timeoutId),\n};\n","import { timing } from \"./timing\";\nconst DEFER_EVENT_LISTENER_TIME = 1000;\nexport const setConnectionTimeout = (request, reject, timeoutInMs = 0) => {\n    if (!timeoutInMs) {\n        return -1;\n    }\n    const registerTimeout = (offset) => {\n        const timeoutId = timing.setTimeout(() => {\n            request.destroy();\n            reject(Object.assign(new Error(`Socket timed out without establishing a connection within ${timeoutInMs} ms`), {\n                name: \"TimeoutError\",\n            }));\n        }, timeoutInMs - offset);\n        const doWithSocket = (socket) => {\n            if (socket?.connecting) {\n                socket.on(\"connect\", () => {\n                    timing.clearTimeout(timeoutId);\n                });\n            }\n            else {\n                timing.clearTimeout(timeoutId);\n            }\n        };\n        if (request.socket) {\n            doWithSocket(request.socket);\n        }\n        else {\n            request.on(\"socket\", doWithSocket);\n        }\n    };\n    if (timeoutInMs < 2000) {\n        registerTimeout(0);\n        return 0;\n    }\n    return timing.setTimeout(registerTimeout.bind(null, DEFER_EVENT_LISTENER_TIME), DEFER_EVENT_LISTENER_TIME);\n};\n","import { timing } from \"./timing\";\nconst DEFER_EVENT_LISTENER_TIME = 3000;\nexport const setSocketKeepAlive = (request, { keepAlive, keepAliveMsecs }, deferTimeMs = DEFER_EVENT_LISTENER_TIME) => {\n    if (keepAlive !== true) {\n        return -1;\n    }\n    const registerListener = () => {\n        if (request.socket) {\n            request.socket.setKeepAlive(keepAlive, keepAliveMsecs || 0);\n        }\n        else {\n            request.on(\"socket\", (socket) => {\n                socket.setKeepAlive(keepAlive, keepAliveMsecs || 0);\n            });\n        }\n    };\n    if (deferTimeMs === 0) {\n        registerListener();\n        return 0;\n    }\n    return timing.setTimeout(registerListener, deferTimeMs);\n};\n","import { DEFAULT_REQUEST_TIMEOUT } from \"./node-http-handler\";\nimport { timing } from \"./timing\";\nconst DEFER_EVENT_LISTENER_TIME = 3000;\nexport const setSocketTimeout = (request, reject, timeoutInMs = DEFAULT_REQUEST_TIMEOUT) => {\n    const registerTimeout = (offset) => {\n        const timeout = timeoutInMs - offset;\n        const onTimeout = () => {\n            request.destroy();\n            reject(Object.assign(new Error(`Connection timed out after ${timeoutInMs} ms`), { name: \"TimeoutError\" }));\n        };\n        if (request.socket) {\n            request.socket.setTimeout(timeout, onTimeout);\n            request.on(\"close\", () => request.socket?.removeListener(\"timeout\", onTimeout));\n        }\n        else {\n            request.setTimeout(timeout, onTimeout);\n        }\n    };\n    if (0 < timeoutInMs && timeoutInMs < 6000) {\n        registerTimeout(0);\n        return 0;\n    }\n    return timing.setTimeout(registerTimeout.bind(null, timeoutInMs === 0 ? 0 : DEFER_EVENT_LISTENER_TIME), DEFER_EVENT_LISTENER_TIME);\n};\n","import { Readable } from \"stream\";\nimport { timing } from \"./timing\";\nconst MIN_WAIT_TIME = 6000;\nexport async function writeRequestBody(httpRequest, request, maxContinueTimeoutMs = MIN_WAIT_TIME) {\n    const headers = request.headers ?? {};\n    const expect = headers[\"Expect\"] || headers[\"expect\"];\n    let timeoutId = -1;\n    let sendBody = true;\n    if (expect === \"100-continue\") {\n        sendBody = await Promise.race([\n            new Promise((resolve) => {\n                timeoutId = Number(timing.setTimeout(() => resolve(true), Math.max(MIN_WAIT_TIME, maxContinueTimeoutMs)));\n            }),\n            new Promise((resolve) => {\n                httpRequest.on(\"continue\", () => {\n                    timing.clearTimeout(timeoutId);\n                    resolve(true);\n                });\n                httpRequest.on(\"response\", () => {\n                    timing.clearTimeout(timeoutId);\n                    resolve(false);\n                });\n                httpRequest.on(\"error\", () => {\n                    timing.clearTimeout(timeoutId);\n                    resolve(false);\n                });\n            }),\n        ]);\n    }\n    if (sendBody) {\n        writeBody(httpRequest, request.body);\n    }\n}\nfunction writeBody(httpRequest, body) {\n    if (body instanceof Readable) {\n        body.pipe(httpRequest);\n        return;\n    }\n    if (body) {\n        if (Buffer.isBuffer(body) || typeof body === \"string\") {\n            httpRequest.end(body);\n            return;\n        }\n        const uint8 = body;\n        if (typeof uint8 === \"object\" &&\n            uint8.buffer &&\n            typeof uint8.byteOffset === \"number\" &&\n            typeof uint8.byteLength === \"number\") {\n            httpRequest.end(Buffer.from(uint8.buffer, uint8.byteOffset, uint8.byteLength));\n            return;\n        }\n        httpRequest.end(Buffer.from(body));\n        return;\n    }\n    httpRequest.end();\n}\n","import { HttpResponse } from \"@smithy/protocol-http\";\nimport { buildQueryString } from \"@smithy/querystring-builder\";\nimport { Agent as hAgent, request as hRequest } from \"http\";\nimport { Agent as hsAgent, request as hsRequest } from \"https\";\nimport { NODEJS_TIMEOUT_ERROR_CODES } from \"./constants\";\nimport { getTransformedHeaders } from \"./get-transformed-headers\";\nimport { setConnectionTimeout } from \"./set-connection-timeout\";\nimport { setSocketKeepAlive } from \"./set-socket-keep-alive\";\nimport { setSocketTimeout } from \"./set-socket-timeout\";\nimport { timing } from \"./timing\";\nimport { writeRequestBody } from \"./write-request-body\";\nexport const DEFAULT_REQUEST_TIMEOUT = 0;\nexport class NodeHttpHandler {\n    static create(instanceOrOptions) {\n        if (typeof instanceOrOptions?.handle === \"function\") {\n            return instanceOrOptions;\n        }\n        return new NodeHttpHandler(instanceOrOptions);\n    }\n    static checkSocketUsage(agent, socketWarningTimestamp, logger = console) {\n        const { sockets, requests, maxSockets } = agent;\n        if (typeof maxSockets !== \"number\" || maxSockets === Infinity) {\n            return socketWarningTimestamp;\n        }\n        const interval = 15000;\n        if (Date.now() - interval < socketWarningTimestamp) {\n            return socketWarningTimestamp;\n        }\n        if (sockets && requests) {\n            for (const origin in sockets) {\n                const socketsInUse = sockets[origin]?.length ?? 0;\n                const requestsEnqueued = requests[origin]?.length ?? 0;\n                if (socketsInUse >= maxSockets && requestsEnqueued >= 2 * maxSockets) {\n                    logger?.warn?.(`@smithy/node-http-handler:WARN - socket usage at capacity=${socketsInUse} and ${requestsEnqueued} additional requests are enqueued.\nSee https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/node-configuring-maxsockets.html\nor increase socketAcquisitionWarningTimeout=(millis) in the NodeHttpHandler config.`);\n                    return Date.now();\n                }\n            }\n        }\n        return socketWarningTimestamp;\n    }\n    constructor(options) {\n        this.socketWarningTimestamp = 0;\n        this.metadata = { handlerProtocol: \"http/1.1\" };\n        this.configProvider = new Promise((resolve, reject) => {\n            if (typeof options === \"function\") {\n                options()\n                    .then((_options) => {\n                    resolve(this.resolveDefaultConfig(_options));\n                })\n                    .catch(reject);\n            }\n            else {\n                resolve(this.resolveDefaultConfig(options));\n            }\n        });\n    }\n    resolveDefaultConfig(options) {\n        const { requestTimeout, connectionTimeout, socketTimeout, socketAcquisitionWarningTimeout, httpAgent, httpsAgent } = options || {};\n        const keepAlive = true;\n        const maxSockets = 50;\n        return {\n            connectionTimeout,\n            requestTimeout: requestTimeout ?? socketTimeout,\n            socketAcquisitionWarningTimeout,\n            httpAgent: (() => {\n                if (httpAgent instanceof hAgent || typeof httpAgent?.destroy === \"function\") {\n                    return httpAgent;\n                }\n                return new hAgent({ keepAlive, maxSockets, ...httpAgent });\n            })(),\n            httpsAgent: (() => {\n                if (httpsAgent instanceof hsAgent || typeof httpsAgent?.destroy === \"function\") {\n                    return httpsAgent;\n                }\n                return new hsAgent({ keepAlive, maxSockets, ...httpsAgent });\n            })(),\n            logger: console,\n        };\n    }\n    destroy() {\n        this.config?.httpAgent?.destroy();\n        this.config?.httpsAgent?.destroy();\n    }\n    async handle(request, { abortSignal, requestTimeout } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n        }\n        return new Promise((_resolve, _reject) => {\n            let writeRequestBodyPromise = undefined;\n            const timeouts = [];\n            const resolve = async (arg) => {\n                await writeRequestBodyPromise;\n                timeouts.forEach(timing.clearTimeout);\n                _resolve(arg);\n            };\n            const reject = async (arg) => {\n                await writeRequestBodyPromise;\n                timeouts.forEach(timing.clearTimeout);\n                _reject(arg);\n            };\n            if (!this.config) {\n                throw new Error(\"Node HTTP request handler config is not resolved\");\n            }\n            if (abortSignal?.aborted) {\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                reject(abortError);\n                return;\n            }\n            const isSSL = request.protocol === \"https:\";\n            const agent = isSSL ? this.config.httpsAgent : this.config.httpAgent;\n            timeouts.push(timing.setTimeout(() => {\n                this.socketWarningTimestamp = NodeHttpHandler.checkSocketUsage(agent, this.socketWarningTimestamp, this.config.logger);\n            }, this.config.socketAcquisitionWarningTimeout ??\n                (this.config.requestTimeout ?? 2000) + (this.config.connectionTimeout ?? 1000)));\n            const queryString = buildQueryString(request.query || {});\n            let auth = undefined;\n            if (request.username != null || request.password != null) {\n                const username = request.username ?? \"\";\n                const password = request.password ?? \"\";\n                auth = `${username}:${password}`;\n            }\n            let path = request.path;\n            if (queryString) {\n                path += `?${queryString}`;\n            }\n            if (request.fragment) {\n                path += `#${request.fragment}`;\n            }\n            let hostname = request.hostname ?? \"\";\n            if (hostname[0] === \"[\" && hostname.endsWith(\"]\")) {\n                hostname = request.hostname.slice(1, -1);\n            }\n            else {\n                hostname = request.hostname;\n            }\n            const nodeHttpsOptions = {\n                headers: request.headers,\n                host: hostname,\n                method: request.method,\n                path,\n                port: request.port,\n                agent,\n                auth,\n            };\n            const requestFunc = isSSL ? hsRequest : hRequest;\n            const req = requestFunc(nodeHttpsOptions, (res) => {\n                const httpResponse = new HttpResponse({\n                    statusCode: res.statusCode || -1,\n                    reason: res.statusMessage,\n                    headers: getTransformedHeaders(res.headers),\n                    body: res,\n                });\n                resolve({ response: httpResponse });\n            });\n            req.on(\"error\", (err) => {\n                if (NODEJS_TIMEOUT_ERROR_CODES.includes(err.code)) {\n                    reject(Object.assign(err, { name: \"TimeoutError\" }));\n                }\n                else {\n                    reject(err);\n                }\n            });\n            if (abortSignal) {\n                const onAbort = () => {\n                    req.destroy();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n                if (typeof abortSignal.addEventListener === \"function\") {\n                    const signal = abortSignal;\n                    signal.addEventListener(\"abort\", onAbort, { once: true });\n                    req.once(\"close\", () => signal.removeEventListener(\"abort\", onAbort));\n                }\n                else {\n                    abortSignal.onabort = onAbort;\n                }\n            }\n            const effectiveRequestTimeout = requestTimeout ?? this.config.requestTimeout;\n            timeouts.push(setConnectionTimeout(req, reject, this.config.connectionTimeout));\n            timeouts.push(setSocketTimeout(req, reject, effectiveRequestTimeout));\n            const httpAgent = nodeHttpsOptions.agent;\n            if (typeof httpAgent === \"object\" && \"keepAlive\" in httpAgent) {\n                timeouts.push(setSocketKeepAlive(req, {\n                    keepAlive: httpAgent.keepAlive,\n                    keepAliveMsecs: httpAgent.keepAliveMsecs,\n                }));\n            }\n            writeRequestBodyPromise = writeRequestBody(req, request, effectiveRequestTimeout).catch((e) => {\n                timeouts.forEach(timing.clearTimeout);\n                return _reject(e);\n            });\n        });\n    }\n    updateHttpClientConfig(key, value) {\n        this.config = undefined;\n        this.configProvider = this.configProvider.then((config) => {\n            return {\n                ...config,\n                [key]: value,\n            };\n        });\n    }\n    httpHandlerConfigs() {\n        return this.config ?? {};\n    }\n}\n","export const getHttpHandlerExtensionConfiguration = (runtimeConfig) => {\n    return {\n        setHttpHandler(handler) {\n            runtimeConfig.httpHandler = handler;\n        },\n        httpHandler() {\n            return runtimeConfig.httpHandler;\n        },\n        updateHttpClientConfig(key, value) {\n            runtimeConfig.httpHandler?.updateHttpClientConfig(key, value);\n        },\n        httpHandlerConfigs() {\n            return runtimeConfig.httpHandler.httpHandlerConfigs();\n        },\n    };\n};\nexport const resolveHttpHandlerRuntimeConfig = (httpHandlerExtensionConfiguration) => {\n    return {\n        httpHandler: httpHandlerExtensionConfiguration.httpHandler(),\n    };\n};\n","import { decorateServiceException } from \"./exceptions\";\nexport const throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\n    const $metadata = deserializeMetadata(output);\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n    const response = new exceptionCtor({\n        name: parsedBody?.code || parsedBody?.Code || errorCode || statusCode || \"UnknownError\",\n        $fault: \"client\",\n        $metadata,\n    });\n    throw decorateServiceException(response, parsedBody);\n};\nexport const withBaseException = (ExceptionCtor) => {\n    return ({ output, parsedBody, errorCode }) => {\n        throwDefaultError({ output, parsedBody, exceptionCtor: ExceptionCtor, errorCode });\n    };\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\n","import { ProviderError } from \"./ProviderError\";\nexport class CredentialsProviderError extends ProviderError {\n    constructor(message, options = true) {\n        super(message, options);\n        this.name = \"CredentialsProviderError\";\n        Object.setPrototypeOf(this, CredentialsProviderError.prototype);\n    }\n}\n","export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType || (SelectorType = {}));\n","export const isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\n","export const memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\n","export function getSelectorName(functionString) {\n    try {\n        const constants = new Set(Array.from(functionString.match(/([A-Z_]){3,}/g) ?? []));\n        constants.delete(\"CONFIG\");\n        constants.delete(\"CONFIG_PREFIX_SEPARATOR\");\n        constants.delete(\"ENV\");\n        return [...constants].join(\", \");\n    }\n    catch (e) {\n        return functionString;\n    }\n}\n","import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { getSelectorName } from \"./getSelectorName\";\nexport const fromEnv = (envVarSelector, options) => async () => {\n    try {\n        const config = envVarSelector(process.env, options);\n        if (config === undefined) {\n            throw new Error();\n        }\n        return config;\n    }\n    catch (e) {\n        throw new CredentialsProviderError(e.message || `Not found in ENV: ${getSelectorName(envVarSelector.toString())}`, { logger: options?.logger });\n    }\n};\n","import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { getProfileName, loadSharedConfigFiles } from \"@smithy/shared-ini-file-loader\";\nimport { getSelectorName } from \"./getSelectorName\";\nexport const fromSharedConfigFiles = (configSelector, { preferredFile = \"config\", ...init } = {}) => async () => {\n    const profile = getProfileName(init);\n    const { configFile, credentialsFile } = await loadSharedConfigFiles(init);\n    const profileFromCredentials = credentialsFile[profile] || {};\n    const profileFromConfig = configFile[profile] || {};\n    const mergedProfile = preferredFile === \"config\"\n        ? { ...profileFromCredentials, ...profileFromConfig }\n        : { ...profileFromConfig, ...profileFromCredentials };\n    try {\n        const cfgFile = preferredFile === \"config\" ? configFile : credentialsFile;\n        const configValue = configSelector(mergedProfile, cfgFile);\n        if (configValue === undefined) {\n            throw new Error();\n        }\n        return configValue;\n    }\n    catch (e) {\n        throw new CredentialsProviderError(e.message || `Not found in config files w/ profile [${profile}]: ${getSelectorName(configSelector.toString())}`, { logger: init.logger });\n    }\n};\n","export const fromStatic = (staticValue) => () => Promise.resolve(staticValue);\n","import { fromStatic as convertToProvider } from \"@smithy/property-provider\";\nconst isFunction = (func) => typeof func === \"function\";\nexport const fromStatic = (defaultValue) => isFunction(defaultValue) ? async () => await defaultValue() : convertToProvider(defaultValue);\n","import { chain, memoize } from \"@smithy/property-provider\";\nimport { fromEnv } from \"./fromEnv\";\nimport { fromSharedConfigFiles } from \"./fromSharedConfigFiles\";\nimport { fromStatic } from \"./fromStatic\";\nexport const loadConfig = ({ environmentVariableSelector, configFileSelector, default: defaultValue }, configuration = {}) => {\n    const { signingName, logger } = configuration;\n    const envOptions = { signingName, logger };\n    return memoize(chain(fromEnv(environmentVariableSelector, envOptions), fromSharedConfigFiles(configFileSelector, configuration), fromStatic(defaultValue)));\n};\n","export class HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.reason = options.reason;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\n","export class NoOpLogger {\n    trace() { }\n    debug() { }\n    info() { }\n    warn() { }\n    error() { }\n}\n","export const getAwsRegionExtensionConfiguration = (runtimeConfig) => {\n    return {\n        setRegion(region) {\n            runtimeConfig.region = region;\n        },\n        region() {\n            return runtimeConfig.region;\n        },\n    };\n};\nexport const resolveAwsRegionExtensionConfiguration = (awsRegionExtensionConfiguration) => {\n    return {\n        region: awsRegionExtensionConfiguration.region(),\n    };\n};\n","export const isFipsRegion = (region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\"));\n","import { isFipsRegion } from \"./isFipsRegion\";\nexport const getRealRegion = (region) => isFipsRegion(region)\n    ? [\"fips-aws-global\", \"aws-fips\"].includes(region)\n        ? \"us-east-1\"\n        : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\")\n    : region;\n","import { getRealRegion } from \"./getRealRegion\";\nimport { isFipsRegion } from \"./isFipsRegion\";\nexport const resolveRegionConfig = (input) => {\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return Object.assign(input, {\n        region: async () => {\n            if (typeof region === \"string\") {\n                return getRealRegion(region);\n            }\n            const providedRegion = await region();\n            return getRealRegion(providedRegion);\n        },\n        useFipsEndpoint: async () => {\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if (isFipsRegion(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n        },\n    });\n};\n","export const normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n","export class ServiceException extends Error {\n    constructor(options) {\n        super(options.message);\n        Object.setPrototypeOf(this, Object.getPrototypeOf(this).constructor.prototype);\n        this.name = options.name;\n        this.$fault = options.$fault;\n        this.$metadata = options.$metadata;\n    }\n    static isInstance(value) {\n        if (!value)\n            return false;\n        const candidate = value;\n        return (ServiceException.prototype.isPrototypeOf(candidate) ||\n            (Boolean(candidate.$fault) &&\n                Boolean(candidate.$metadata) &&\n                (candidate.$fault === \"client\" || candidate.$fault === \"server\")));\n    }\n    static [Symbol.hasInstance](instance) {\n        if (!instance)\n            return false;\n        const candidate = instance;\n        if (this === ServiceException) {\n            return ServiceException.isInstance(instance);\n        }\n        if (ServiceException.isInstance(instance)) {\n            if (candidate.name && this.name) {\n                return this.prototype.isPrototypeOf(instance) || candidate.name === this.name;\n            }\n            return this.prototype.isPrototypeOf(instance);\n        }\n        return false;\n    }\n}\nexport const decorateServiceException = (exception, additions = {}) => {\n    Object.entries(additions)\n        .filter(([, v]) => v !== undefined)\n        .forEach(([k, v]) => {\n        if (exception[k] == undefined || exception[k] === \"\") {\n            exception[k] = v;\n        }\n    });\n    const message = exception.message || exception.Message || \"UnknownError\";\n    exception.message = message;\n    delete exception.Message;\n    return exception;\n};\n","import { fromUtf8 } from \"./fromUtf8\";\nexport const toUint8Array = (data) => {\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n};\n","export const getArrayForCommaSeparatedString = (str) => typeof str === \"string\" && str.length > 0 ? str.split(\",\").map((item) => item.trim()) : [];\n","export const getBearerTokenEnvKey = (signingName) => `AWS_BEARER_TOKEN_${signingName.replace(/[\\s-]/g, \"_\").toUpperCase()}`;\n","import { getArrayForCommaSeparatedString } from \"../utils/getArrayForCommaSeparatedString\";\nimport { getBearerTokenEnvKey } from \"../utils/getBearerTokenEnvKey\";\nconst NODE_AUTH_SCHEME_PREFERENCE_ENV_KEY = \"AWS_AUTH_SCHEME_PREFERENCE\";\nconst NODE_AUTH_SCHEME_PREFERENCE_CONFIG_KEY = \"auth_scheme_preference\";\nexport const NODE_AUTH_SCHEME_PREFERENCE_OPTIONS = {\n    environmentVariableSelector: (env, options) => {\n        if (options?.signingName) {\n            const bearerTokenKey = getBearerTokenEnvKey(options.signingName);\n            if (bearerTokenKey in env)\n                return [\"httpBearerAuth\"];\n        }\n        if (!(NODE_AUTH_SCHEME_PREFERENCE_ENV_KEY in env))\n            return undefined;\n        return getArrayForCommaSeparatedString(env[NODE_AUTH_SCHEME_PREFERENCE_ENV_KEY]);\n    },\n    configFileSelector: (profile) => {\n        if (!(NODE_AUTH_SCHEME_PREFERENCE_CONFIG_KEY in profile))\n            return undefined;\n        return getArrayForCommaSeparatedString(profile[NODE_AUTH_SCHEME_PREFERENCE_CONFIG_KEY]);\n    },\n    default: [],\n};\n","export const CLOCK_SKEW_ERROR_CODES = [\n    \"AuthFailure\",\n    \"InvalidSignatureException\",\n    \"RequestExpired\",\n    \"RequestInTheFuture\",\n    \"RequestTimeTooSkewed\",\n    \"SignatureDoesNotMatch\",\n];\nexport const THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\",\n];\nexport const TRANSIENT_ERROR_CODES = [\"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\nexport const TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\nexport const NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"ECONNREFUSED\", \"EPIPE\", \"ETIMEDOUT\"];\nexport const NODEJS_NETWORK_ERROR_CODES = [\"EHOSTUNREACH\", \"ENETUNREACH\", \"ENOTFOUND\"];\n","import { CLOCK_SKEW_ERROR_CODES, NODEJS_NETWORK_ERROR_CODES, NODEJS_TIMEOUT_ERROR_CODES, THROTTLING_ERROR_CODES, TRANSIENT_ERROR_CODES, TRANSIENT_ERROR_STATUS_CODES, } from \"./constants\";\nexport const isRetryableByTrait = (error) => error?.$retryable !== undefined;\nexport const isClockSkewError = (error) => CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexport const isClockSkewCorrectedError = (error) => error.$metadata?.clockSkewCorrected;\nexport const isBrowserNetworkError = (error) => {\n    const errorMessages = new Set([\n        \"Failed to fetch\",\n        \"NetworkError when attempting to fetch resource\",\n        \"The Internet connection appears to be offline\",\n        \"Load failed\",\n        \"Network request failed\",\n    ]);\n    const isValid = error && error instanceof TypeError;\n    if (!isValid) {\n        return false;\n    }\n    return errorMessages.has(error.message);\n};\nexport const isThrottlingError = (error) => error.$metadata?.httpStatusCode === 429 ||\n    THROTTLING_ERROR_CODES.includes(error.name) ||\n    error.$retryable?.throttling == true;\nexport const isTransientError = (error, depth = 0) => isRetryableByTrait(error) ||\n    isClockSkewCorrectedError(error) ||\n    TRANSIENT_ERROR_CODES.includes(error.name) ||\n    NODEJS_TIMEOUT_ERROR_CODES.includes(error?.code || \"\") ||\n    NODEJS_NETWORK_ERROR_CODES.includes(error?.code || \"\") ||\n    TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0) ||\n    isBrowserNetworkError(error) ||\n    (error.cause !== undefined && depth <= 10 && isTransientError(error.cause, depth + 1));\nexport const isServerError = (error) => {\n    if (error.$metadata?.httpStatusCode !== undefined) {\n        const statusCode = error.$metadata.httpStatusCode;\n        if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n};\n","module.exports = require(\"path\");","import { booleanSelector, SelectorType } from \"@smithy/util-config-provider\";\nexport const ENV_USE_FIPS_ENDPOINT = \"AWS_USE_FIPS_ENDPOINT\";\nexport const CONFIG_USE_FIPS_ENDPOINT = \"use_fips_endpoint\";\nexport const DEFAULT_USE_FIPS_ENDPOINT = false;\nexport const NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_FIPS_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_FIPS_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n","export const REGION_ENV_NAME = \"AWS_REGION\";\nexport const REGION_INI_NAME = \"region\";\nexport const NODE_REGION_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[REGION_ENV_NAME],\n    configFileSelector: (profile) => profile[REGION_INI_NAME],\n    default: () => {\n        throw new Error(\"Region is missing\");\n    },\n};\nexport const NODE_REGION_CONFIG_FILE_OPTIONS = {\n    preferredFile: \"credentials\",\n};\n","import crypto from \"crypto\";\nexport const randomUUID = crypto.randomUUID.bind(crypto);\n","import { randomUUID } from \"./randomUUID\";\nconst decimalToHex = Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, \"0\"));\nexport const v4 = () => {\n    if (randomUUID) {\n        return randomUUID();\n    }\n    const rnds = new Uint8Array(16);\n    crypto.getRandomValues(rnds);\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    return (decimalToHex[rnds[0]] +\n        decimalToHex[rnds[1]] +\n        decimalToHex[rnds[2]] +\n        decimalToHex[rnds[3]] +\n        \"-\" +\n        decimalToHex[rnds[4]] +\n        decimalToHex[rnds[5]] +\n        \"-\" +\n        decimalToHex[rnds[6]] +\n        decimalToHex[rnds[7]] +\n        \"-\" +\n        decimalToHex[rnds[8]] +\n        decimalToHex[rnds[9]] +\n        \"-\" +\n        decimalToHex[rnds[10]] +\n        decimalToHex[rnds[11]] +\n        decimalToHex[rnds[12]] +\n        decimalToHex[rnds[13]] +\n        decimalToHex[rnds[14]] +\n        decimalToHex[rnds[15]]);\n};\n","import { Readable } from \"stream\";\nexport const isStreamingPayload = (request) => request?.body instanceof Readable ||\n    (typeof ReadableStream !== \"undefined\" && request?.body instanceof ReadableStream);\n","export const asSdkError = (error) => {\n    if (error instanceof Error)\n        return error;\n    if (error instanceof Object)\n        return Object.assign(new Error(), error);\n    if (typeof error === \"string\")\n        return new Error(error);\n    return new Error(`AWS SDK error wrapper for ${error}`);\n};\n","import { HttpRequest, HttpResponse } from \"@smithy/protocol-http\";\nimport { isServerError, isThrottlingError, isTransientError } from \"@smithy/service-error-classification\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"@smithy/util-retry\";\nimport { v4 } from \"@smithy/uuid\";\nimport { isStreamingPayload } from \"./isStreamingPayload/isStreamingPayload\";\nimport { asSdkError } from \"./util\";\nexport const retryMiddleware = (options) => (next, context) => async (args) => {\n    let retryStrategy = await options.retryStrategy();\n    const maxAttempts = await options.maxAttempts();\n    if (isRetryStrategyV2(retryStrategy)) {\n        retryStrategy = retryStrategy;\n        let retryToken = await retryStrategy.acquireInitialRetryToken(context[\"partition_id\"]);\n        let lastError = new Error();\n        let attempts = 0;\n        let totalRetryDelay = 0;\n        const { request } = args;\n        const isRequest = HttpRequest.isInstance(request);\n        if (isRequest) {\n            request.headers[INVOCATION_ID_HEADER] = v4();\n        }\n        while (true) {\n            try {\n                if (isRequest) {\n                    request.headers[REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                const { response, output } = await next(args);\n                retryStrategy.recordSuccess(retryToken);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalRetryDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const retryErrorInfo = getRetryErrorInfo(e);\n                lastError = asSdkError(e);\n                if (isRequest && isStreamingPayload(request)) {\n                    (context.logger instanceof NoOpLogger ? console : context.logger)?.warn(\"An error was encountered in a non-retryable streaming request.\");\n                    throw lastError;\n                }\n                try {\n                    retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);\n                }\n                catch (refreshError) {\n                    if (!lastError.$metadata) {\n                        lastError.$metadata = {};\n                    }\n                    lastError.$metadata.attempts = attempts + 1;\n                    lastError.$metadata.totalRetryDelay = totalRetryDelay;\n                    throw lastError;\n                }\n                attempts = retryToken.getRetryCount();\n                const delay = retryToken.getRetryDelay();\n                totalRetryDelay += delay;\n                await new Promise((resolve) => setTimeout(resolve, delay));\n            }\n        }\n    }\n    else {\n        retryStrategy = retryStrategy;\n        if (retryStrategy?.mode)\n            context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n        return retryStrategy.retry(next, args);\n    }\n};\nconst isRetryStrategyV2 = (retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== \"undefined\" &&\n    typeof retryStrategy.refreshRetryTokenForRetry !== \"undefined\" &&\n    typeof retryStrategy.recordSuccess !== \"undefined\";\nconst getRetryErrorInfo = (error) => {\n    const errorInfo = {\n        error,\n        errorType: getRetryErrorType(error),\n    };\n    const retryAfterHint = getRetryAfterHint(error.$response);\n    if (retryAfterHint) {\n        errorInfo.retryAfterHint = retryAfterHint;\n    }\n    return errorInfo;\n};\nconst getRetryErrorType = (error) => {\n    if (isThrottlingError(error))\n        return \"THROTTLING\";\n    if (isTransientError(error))\n        return \"TRANSIENT\";\n    if (isServerError(error))\n        return \"SERVER_ERROR\";\n    return \"CLIENT_ERROR\";\n};\nexport const retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nexport const getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    },\n});\nexport const getRetryAfterHint = (response) => {\n    if (!HttpResponse.isInstance(response))\n        return;\n    const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === \"retry-after\");\n    if (!retryAfterHeaderName)\n        return;\n    const retryAfter = response.headers[retryAfterHeaderName];\n    const retryAfterSeconds = Number(retryAfter);\n    if (!Number.isNaN(retryAfterSeconds))\n        return new Date(retryAfterSeconds * 1000);\n    const retryAfterDate = new Date(retryAfter);\n    return retryAfterDate;\n};\n","import { HttpRequest } from \"@smithy/protocol-http\";\nimport { getSmithyContext } from \"@smithy/util-middleware\";\nconst defaultErrorHandler = (signingProperties) => (error) => {\n    throw error;\n};\nconst defaultSuccessHandler = (httpResponse, signingProperties) => { };\nexport const httpSigningMiddleware = (config) => (next, context) => async (args) => {\n    if (!HttpRequest.isInstance(args.request)) {\n        return next(args);\n    }\n    const smithyContext = getSmithyContext(context);\n    const scheme = smithyContext.selectedHttpAuthScheme;\n    if (!scheme) {\n        throw new Error(`No HttpAuthScheme was selected: unable to sign request`);\n    }\n    const { httpAuthOption: { signingProperties = {} }, identity, signer, } = scheme;\n    const output = await next({\n        ...args,\n        request: await signer.sign(args.request, identity, signingProperties),\n    }).catch((signer.errorHandler || defaultErrorHandler)(signingProperties));\n    (signer.successHandler || defaultSuccessHandler)(output.response, signingProperties);\n    return output;\n};\n","import { httpSigningMiddleware } from \"./httpSigningMiddleware\";\nexport const httpSigningMiddlewareOptions = {\n    step: \"finalizeRequest\",\n    tags: [\"HTTP_SIGNING\"],\n    name: \"httpSigningMiddleware\",\n    aliases: [\"apiKeyMiddleware\", \"tokenMiddleware\", \"awsAuthMiddleware\"],\n    override: true,\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n};\nexport const getHttpSigningPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(httpSigningMiddleware(config), httpSigningMiddlewareOptions);\n    },\n});\n","import { Writable } from \"stream\";\nexport class Collector extends Writable {\n    constructor() {\n        super(...arguments);\n        this.bufferedBytes = [];\n    }\n    _write(chunk, encoding, callback) {\n        this.bufferedBytes.push(chunk);\n        callback();\n    }\n}\n","import { Collector } from \"./collector\";\nexport const streamCollector = (stream) => {\n    if (isReadableStreamInstance(stream)) {\n        return collectReadableStream(stream);\n    }\n    return new Promise((resolve, reject) => {\n        const collector = new Collector();\n        stream.pipe(collector);\n        stream.on(\"error\", (err) => {\n            collector.end();\n            reject(err);\n        });\n        collector.on(\"error\", reject);\n        collector.on(\"finish\", function () {\n            const bytes = new Uint8Array(Buffer.concat(this.bufferedBytes));\n            resolve(bytes);\n        });\n    });\n};\nconst isReadableStreamInstance = (stream) => typeof ReadableStream === \"function\" && stream instanceof ReadableStream;\nasync function collectReadableStream(stream) {\n    const chunks = [];\n    const reader = stream.getReader();\n    let isDone = false;\n    let length = 0;\n    while (!isDone) {\n        const { done, value } = await reader.read();\n        if (value) {\n            chunks.push(value);\n            length += value.length;\n        }\n        isDone = done;\n    }\n    const collected = new Uint8Array(length);\n    let offset = 0;\n    for (const chunk of chunks) {\n        collected.set(chunk, offset);\n        offset += chunk.length;\n    }\n    return collected;\n}\n","module.exports = require(\"child_process\");","import { IniSectionType } from \"@smithy/types\";\nimport { CONFIG_PREFIX_SEPARATOR } from \"./loadSharedConfigFiles\";\nexport const getConfigData = (data) => Object.entries(data)\n    .filter(([key]) => {\n    const indexOfSeparator = key.indexOf(CONFIG_PREFIX_SEPARATOR);\n    if (indexOfSeparator === -1) {\n        return false;\n    }\n    return Object.values(IniSectionType).includes(key.substring(0, indexOfSeparator));\n})\n    .reduce((acc, [key, value]) => {\n    const indexOfSeparator = key.indexOf(CONFIG_PREFIX_SEPARATOR);\n    const updatedKey = key.substring(0, indexOfSeparator) === IniSectionType.PROFILE ? key.substring(indexOfSeparator + 1) : key;\n    acc[updatedKey] = value;\n    return acc;\n}, {\n    ...(data.default && { default: data.default }),\n});\n","import { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const ENV_CREDENTIALS_PATH = \"AWS_SHARED_CREDENTIALS_FILE\";\nexport const getCredentialsFilepath = () => process.env[ENV_CREDENTIALS_PATH] || join(getHomeDir(), \".aws\", \"credentials\");\n","import { join } from \"path\";\nimport { getConfigData } from \"./getConfigData\";\nimport { getConfigFilepath } from \"./getConfigFilepath\";\nimport { getCredentialsFilepath } from \"./getCredentialsFilepath\";\nimport { getHomeDir } from \"./getHomeDir\";\nimport { parseIni } from \"./parseIni\";\nimport { slurpFile } from \"./slurpFile\";\nconst swallowError = () => ({});\nexport const CONFIG_PREFIX_SEPARATOR = \".\";\nexport const loadSharedConfigFiles = async (init = {}) => {\n    const { filepath = getCredentialsFilepath(), configFilepath = getConfigFilepath() } = init;\n    const homeDir = getHomeDir();\n    const relativeHomeDirPrefix = \"~/\";\n    let resolvedFilepath = filepath;\n    if (filepath.startsWith(relativeHomeDirPrefix)) {\n        resolvedFilepath = join(homeDir, filepath.slice(2));\n    }\n    let resolvedConfigFilepath = configFilepath;\n    if (configFilepath.startsWith(relativeHomeDirPrefix)) {\n        resolvedConfigFilepath = join(homeDir, configFilepath.slice(2));\n    }\n    const parsedFiles = await Promise.all([\n        slurpFile(resolvedConfigFilepath, {\n            ignoreCache: init.ignoreCache,\n        })\n            .then(parseIni)\n            .then(getConfigData)\n            .catch(swallowError),\n        slurpFile(resolvedFilepath, {\n            ignoreCache: init.ignoreCache,\n        })\n            .then(parseIni)\n            .catch(swallowError),\n    ]);\n    return {\n        configFile: parsedFiles[0],\n        credentialsFile: parsedFiles[1],\n    };\n};\n","export var IniSectionType;\n(function (IniSectionType) {\n    IniSectionType[\"PROFILE\"] = \"profile\";\n    IniSectionType[\"SSO_SESSION\"] = \"sso-session\";\n    IniSectionType[\"SERVICES\"] = \"services\";\n})(IniSectionType || (IniSectionType = {}));\n","export const booleanSelector = (obj, key, type) => {\n    if (!(key in obj))\n        return undefined;\n    if (obj[key] === \"true\")\n        return true;\n    if (obj[key] === \"false\")\n        return false;\n    throw new Error(`Cannot load ${type} \"${key}\". Expected \"true\" or \"false\", got ${obj[key]}.`);\n};\n","import { isThrottlingError } from \"@smithy/service-error-classification\";\nexport class DefaultRateLimiter {\n    constructor(options) {\n        this.currentCapacity = 0;\n        this.enabled = false;\n        this.lastMaxRate = 0;\n        this.measuredTxRate = 0;\n        this.requestCount = 0;\n        this.lastTimestamp = 0;\n        this.timeWindow = 0;\n        this.beta = options?.beta ?? 0.7;\n        this.minCapacity = options?.minCapacity ?? 1;\n        this.minFillRate = options?.minFillRate ?? 0.5;\n        this.scaleConstant = options?.scaleConstant ?? 0.4;\n        this.smooth = options?.smooth ?? 0.8;\n        const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n        this.lastThrottleTime = currentTimeInSeconds;\n        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n        this.fillRate = this.minFillRate;\n        this.maxCapacity = this.minCapacity;\n    }\n    getCurrentTimeInSeconds() {\n        return Date.now() / 1000;\n    }\n    async getSendToken() {\n        return this.acquireTokenBucket(1);\n    }\n    async acquireTokenBucket(amount) {\n        if (!this.enabled) {\n            return;\n        }\n        this.refillTokenBucket();\n        if (amount > this.currentCapacity) {\n            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;\n            await new Promise((resolve) => DefaultRateLimiter.setTimeoutFn(resolve, delay));\n        }\n        this.currentCapacity = this.currentCapacity - amount;\n    }\n    refillTokenBucket() {\n        const timestamp = this.getCurrentTimeInSeconds();\n        if (!this.lastTimestamp) {\n            this.lastTimestamp = timestamp;\n            return;\n        }\n        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n        this.lastTimestamp = timestamp;\n    }\n    updateClientSendingRate(response) {\n        let calculatedRate;\n        this.updateMeasuredRate();\n        if (isThrottlingError(response)) {\n            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n            this.lastMaxRate = rateToUse;\n            this.calculateTimeWindow();\n            this.lastThrottleTime = this.getCurrentTimeInSeconds();\n            calculatedRate = this.cubicThrottle(rateToUse);\n            this.enableTokenBucket();\n        }\n        else {\n            this.calculateTimeWindow();\n            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n        }\n        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n        this.updateTokenBucketRate(newRate);\n    }\n    calculateTimeWindow() {\n        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));\n    }\n    cubicThrottle(rateToUse) {\n        return this.getPrecise(rateToUse * this.beta);\n    }\n    cubicSuccess(timestamp) {\n        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);\n    }\n    enableTokenBucket() {\n        this.enabled = true;\n    }\n    updateTokenBucketRate(newRate) {\n        this.refillTokenBucket();\n        this.fillRate = Math.max(newRate, this.minFillRate);\n        this.maxCapacity = Math.max(newRate, this.minCapacity);\n        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n    }\n    updateMeasuredRate() {\n        const t = this.getCurrentTimeInSeconds();\n        const timeBucket = Math.floor(t * 2) / 2;\n        this.requestCount++;\n        if (timeBucket > this.lastTxRateBucket) {\n            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n            this.requestCount = 0;\n            this.lastTxRateBucket = timeBucket;\n        }\n    }\n    getPrecise(num) {\n        return parseFloat(num.toFixed(8));\n    }\n}\nDefaultRateLimiter.setTimeoutFn = setTimeout;\n","import { DEFAULT_RETRY_DELAY_BASE, MAXIMUM_RETRY_DELAY } from \"./constants\";\nexport const getDefaultRetryBackoffStrategy = () => {\n    let delayBase = DEFAULT_RETRY_DELAY_BASE;\n    const computeNextBackoffDelay = (attempts) => {\n        return Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n    };\n    const setDelayBase = (delay) => {\n        delayBase = delay;\n    };\n    return {\n        computeNextBackoffDelay,\n        setDelayBase,\n    };\n};\n","import { MAXIMUM_RETRY_DELAY } from \"./constants\";\nexport const createDefaultRetryToken = ({ retryDelay, retryCount, retryCost, }) => {\n    const getRetryCount = () => retryCount;\n    const getRetryDelay = () => Math.min(MAXIMUM_RETRY_DELAY, retryDelay);\n    const getRetryCost = () => retryCost;\n    return {\n        getRetryCount,\n        getRetryDelay,\n        getRetryCost,\n    };\n};\n","import { DEFAULT_MAX_ATTEMPTS, RETRY_MODES } from \"./config\";\nimport { DEFAULT_RETRY_DELAY_BASE, INITIAL_RETRY_TOKENS, NO_RETRY_INCREMENT, RETRY_COST, THROTTLING_RETRY_DELAY_BASE, TIMEOUT_RETRY_COST, } from \"./constants\";\nimport { getDefaultRetryBackoffStrategy } from \"./defaultRetryBackoffStrategy\";\nimport { createDefaultRetryToken } from \"./defaultRetryToken\";\nexport class StandardRetryStrategy {\n    constructor(maxAttempts) {\n        this.maxAttempts = maxAttempts;\n        this.mode = RETRY_MODES.STANDARD;\n        this.capacity = INITIAL_RETRY_TOKENS;\n        this.retryBackoffStrategy = getDefaultRetryBackoffStrategy();\n        this.maxAttemptsProvider = typeof maxAttempts === \"function\" ? maxAttempts : async () => maxAttempts;\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        return createDefaultRetryToken({\n            retryDelay: DEFAULT_RETRY_DELAY_BASE,\n            retryCount: 0,\n        });\n    }\n    async refreshRetryTokenForRetry(token, errorInfo) {\n        const maxAttempts = await this.getMaxAttempts();\n        if (this.shouldRetry(token, errorInfo, maxAttempts)) {\n            const errorType = errorInfo.errorType;\n            this.retryBackoffStrategy.setDelayBase(errorType === \"THROTTLING\" ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE);\n            const delayFromErrorType = this.retryBackoffStrategy.computeNextBackoffDelay(token.getRetryCount());\n            const retryDelay = errorInfo.retryAfterHint\n                ? Math.max(errorInfo.retryAfterHint.getTime() - Date.now() || 0, delayFromErrorType)\n                : delayFromErrorType;\n            const capacityCost = this.getCapacityCost(errorType);\n            this.capacity -= capacityCost;\n            return createDefaultRetryToken({\n                retryDelay,\n                retryCount: token.getRetryCount() + 1,\n                retryCost: capacityCost,\n            });\n        }\n        throw new Error(\"No retry token available\");\n    }\n    recordSuccess(token) {\n        this.capacity = Math.max(INITIAL_RETRY_TOKENS, this.capacity + (token.getRetryCost() ?? NO_RETRY_INCREMENT));\n    }\n    getCapacity() {\n        return this.capacity;\n    }\n    async getMaxAttempts() {\n        try {\n            return await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            console.warn(`Max attempts provider could not resolve. Using default of ${DEFAULT_MAX_ATTEMPTS}`);\n            return DEFAULT_MAX_ATTEMPTS;\n        }\n    }\n    shouldRetry(tokenToRenew, errorInfo, maxAttempts) {\n        const attempts = tokenToRenew.getRetryCount() + 1;\n        return (attempts < maxAttempts &&\n            this.capacity >= this.getCapacityCost(errorInfo.errorType) &&\n            this.isRetryableError(errorInfo.errorType));\n    }\n    getCapacityCost(errorType) {\n        return errorType === \"TRANSIENT\" ? TIMEOUT_RETRY_COST : RETRY_COST;\n    }\n    isRetryableError(errorType) {\n        return errorType === \"THROTTLING\" || errorType === \"TRANSIENT\";\n    }\n}\n","import { RETRY_MODES } from \"./config\";\nimport { DefaultRateLimiter } from \"./DefaultRateLimiter\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport class AdaptiveRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = RETRY_MODES.ADAPTIVE;\n        const { rateLimiter } = options ?? {};\n        this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();\n        this.standardRetryStrategy = new StandardRetryStrategy(maxAttemptsProvider);\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        await this.rateLimiter.getSendToken();\n        return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        this.rateLimiter.updateClientSendingRate(errorInfo);\n        return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n    }\n    recordSuccess(token) {\n        this.rateLimiter.updateClientSendingRate({});\n        this.standardRetryStrategy.recordSuccess(token);\n    }\n}\n","import { normalizeProvider } from \"@smithy/util-middleware\";\nimport { AdaptiveRetryStrategy, DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE, RETRY_MODES, StandardRetryStrategy, } from \"@smithy/util-retry\";\nexport const ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexport const CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexport const NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        const value = env[ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Environment variable ${ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    configFileSelector: (profile) => {\n        const value = profile[CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Shared config file entry ${CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    default: DEFAULT_MAX_ATTEMPTS,\n};\nexport const resolveRetryConfig = (input) => {\n    const { retryStrategy, retryMode: _retryMode, maxAttempts: _maxAttempts } = input;\n    const maxAttempts = normalizeProvider(_maxAttempts ?? DEFAULT_MAX_ATTEMPTS);\n    return Object.assign(input, {\n        maxAttempts,\n        retryStrategy: async () => {\n            if (retryStrategy) {\n                return retryStrategy;\n            }\n            const retryMode = await normalizeProvider(_retryMode)();\n            if (retryMode === RETRY_MODES.ADAPTIVE) {\n                return new AdaptiveRetryStrategy(maxAttempts);\n            }\n            return new StandardRetryStrategy(maxAttempts);\n        },\n    });\n};\nexport const ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexport const CONFIG_RETRY_MODE = \"retry_mode\";\nexport const NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_RETRY_MODE],\n    configFileSelector: (profile) => profile[CONFIG_RETRY_MODE],\n    default: DEFAULT_RETRY_MODE,\n};\n","export class ProviderError extends Error {\n    constructor(message, options = true) {\n        let logger;\n        let tryNextLink = true;\n        if (typeof options === \"boolean\") {\n            logger = undefined;\n            tryNextLink = options;\n        }\n        else if (options != null && typeof options === \"object\") {\n            logger = options.logger;\n            tryNextLink = options.tryNextLink ?? true;\n        }\n        super(message);\n        this.name = \"ProviderError\";\n        this.tryNextLink = tryNextLink;\n        Object.setPrototypeOf(this, ProviderError.prototype);\n        logger?.debug?.(`@smithy/property-provider ${tryNextLink ? \"->\" : \"(!)\"} ${message}`);\n    }\n    static from(error, options = true) {\n        return Object.assign(new this(error.message, options), error);\n    }\n}\n","import { SMITHY_CONTEXT_KEY } from \"@smithy/types\";\nexport const getSmithyContext = (context) => context[SMITHY_CONTEXT_KEY] || (context[SMITHY_CONTEXT_KEY] = {});\n","export const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n","import { HttpResponse } from \"@smithy/protocol-http\";\nexport const getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\n","import { getSkewCorrectedDate } from \"./getSkewCorrectedDate\";\nexport const isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\n","import { isClockSkewed } from \"./isClockSkewed\";\nexport const getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n","import { HttpRequest } from \"@smithy/protocol-http\";\nimport { getDateHeader, getSkewCorrectedDate, getUpdatedSystemClockOffset } from \"../utils\";\nconst throwSigningPropertyError = (name, property) => {\n    if (!property) {\n        throw new Error(`Property \\`${name}\\` is not resolved for AWS SDK SigV4Auth`);\n    }\n    return property;\n};\nexport const validateSigningProperties = async (signingProperties) => {\n    const context = throwSigningPropertyError(\"context\", signingProperties.context);\n    const config = throwSigningPropertyError(\"config\", signingProperties.config);\n    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\n    const signerFunction = throwSigningPropertyError(\"signer\", config.signer);\n    const signer = await signerFunction(authScheme);\n    const signingRegion = signingProperties?.signingRegion;\n    const signingRegionSet = signingProperties?.signingRegionSet;\n    const signingName = signingProperties?.signingName;\n    return {\n        config,\n        signer,\n        signingRegion,\n        signingRegionSet,\n        signingName,\n    };\n};\nexport class AwsSdkSigV4Signer {\n    async sign(httpRequest, identity, signingProperties) {\n        if (!HttpRequest.isInstance(httpRequest)) {\n            throw new Error(\"The request is not an instance of `HttpRequest` and cannot be signed\");\n        }\n        const validatedProps = await validateSigningProperties(signingProperties);\n        const { config, signer } = validatedProps;\n        let { signingRegion, signingName } = validatedProps;\n        const handlerExecutionContext = signingProperties.context;\n        if (handlerExecutionContext?.authSchemes?.length ?? 0 > 1) {\n            const [first, second] = handlerExecutionContext.authSchemes;\n            if (first?.name === \"sigv4a\" && second?.name === \"sigv4\") {\n                signingRegion = second?.signingRegion ?? signingRegion;\n                signingName = second?.signingName ?? signingName;\n            }\n        }\n        const signedRequest = await signer.sign(httpRequest, {\n            signingDate: getSkewCorrectedDate(config.systemClockOffset),\n            signingRegion: signingRegion,\n            signingService: signingName,\n        });\n        return signedRequest;\n    }\n    errorHandler(signingProperties) {\n        return (error) => {\n            const serverTime = error.ServerTime ?? getDateHeader(error.$response);\n            if (serverTime) {\n                const config = throwSigningPropertyError(\"config\", signingProperties.config);\n                const initialSystemClockOffset = config.systemClockOffset;\n                config.systemClockOffset = getUpdatedSystemClockOffset(serverTime, config.systemClockOffset);\n                const clockSkewCorrected = config.systemClockOffset !== initialSystemClockOffset;\n                if (clockSkewCorrected && error.$metadata) {\n                    error.$metadata.clockSkewCorrected = true;\n                }\n            }\n            throw error;\n        };\n    }\n    successHandler(httpResponse, signingProperties) {\n        const dateHeader = getDateHeader(httpResponse);\n        if (dateHeader) {\n            const config = throwSigningPropertyError(\"config\", signingProperties.config);\n            config.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, config.systemClockOffset);\n        }\n    }\n}\nexport const AWSSDKSigV4Signer = AwsSdkSigV4Signer;\n","export const ENV_PROFILE = \"AWS_PROFILE\";\nexport const DEFAULT_PROFILE = \"default\";\nexport const getProfileName = (init) => init.profile || process.env[ENV_PROFILE] || DEFAULT_PROFILE;\n","export const parseBoolean = (value) => {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(`Unable to parse boolean value \"${value}\"`);\n    }\n};\nexport const expectBoolean = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        if (value === 0 || value === 1) {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (value === 0) {\n            return false;\n        }\n        if (value === 1) {\n            return true;\n        }\n    }\n    if (typeof value === \"string\") {\n        const lower = value.toLowerCase();\n        if (lower === \"false\" || lower === \"true\") {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (lower === \"false\") {\n            return false;\n        }\n        if (lower === \"true\") {\n            return true;\n        }\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(`Expected boolean, got ${typeof value}: ${value}`);\n};\nexport const expectNumber = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        const parsed = parseFloat(value);\n        if (!Number.isNaN(parsed)) {\n            if (String(parsed) !== String(value)) {\n                logger.warn(stackTraceWarning(`Expected number but observed string: ${value}`));\n            }\n            return parsed;\n        }\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(`Expected number, got ${typeof value}: ${value}`);\n};\nconst MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\nexport const expectFloat32 = (value) => {\n    const expected = expectNumber(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(`Expected 32-bit float, got ${value}`);\n        }\n    }\n    return expected;\n};\nexport const expectLong = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected integer, got ${typeof value}: ${value}`);\n};\nexport const expectInt = expectLong;\nexport const expectInt32 = (value) => expectSizedInt(value, 32);\nexport const expectShort = (value) => expectSizedInt(value, 16);\nexport const expectByte = (value) => expectSizedInt(value, 8);\nconst expectSizedInt = (value, size) => {\n    const expected = expectLong(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\n    }\n    return expected;\n};\nconst castInt = (value, size) => {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\nexport const expectNonNull = (value, location) => {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(`Expected a non-null value for ${location}`);\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexport const expectObject = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    const receivedType = Array.isArray(value) ? \"array\" : typeof value;\n    throw new TypeError(`Expected object, got ${receivedType}: ${value}`);\n};\nexport const expectString = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if ([\"boolean\", \"number\", \"bigint\"].includes(typeof value)) {\n        logger.warn(stackTraceWarning(`Expected string, got ${typeof value}: ${value}`));\n        return String(value);\n    }\n    throw new TypeError(`Expected string, got ${typeof value}: ${value}`);\n};\nexport const expectUnion = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    const asObject = expectObject(value);\n    const setKeys = Object.entries(asObject)\n        .filter(([, v]) => v != null)\n        .map(([k]) => k);\n    if (setKeys.length === 0) {\n        throw new TypeError(`Unions must have exactly one non-null member. None were found.`);\n    }\n    if (setKeys.length > 1) {\n        throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);\n    }\n    return asObject;\n};\nexport const strictParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return expectNumber(parseNumber(value));\n    }\n    return expectNumber(value);\n};\nexport const strictParseFloat = strictParseDouble;\nexport const strictParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return expectFloat32(parseNumber(value));\n    }\n    return expectFloat32(value);\n};\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nconst parseNumber = (value) => {\n    const matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(`Expected real number, got implicit NaN`);\n    }\n    return parseFloat(value);\n};\nexport const limitedParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectNumber(value);\n};\nexport const handleFloat = limitedParseDouble;\nexport const limitedParseFloat = limitedParseDouble;\nexport const limitedParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectFloat32(value);\n};\nconst parseFloatString = (value) => {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(`Unable to parse float value: ${value}`);\n    }\n};\nexport const strictParseLong = (value) => {\n    if (typeof value === \"string\") {\n        return expectLong(parseNumber(value));\n    }\n    return expectLong(value);\n};\nexport const strictParseInt = strictParseLong;\nexport const strictParseInt32 = (value) => {\n    if (typeof value === \"string\") {\n        return expectInt32(parseNumber(value));\n    }\n    return expectInt32(value);\n};\nexport const strictParseShort = (value) => {\n    if (typeof value === \"string\") {\n        return expectShort(parseNumber(value));\n    }\n    return expectShort(value);\n};\nexport const strictParseByte = (value) => {\n    if (typeof value === \"string\") {\n        return expectByte(parseNumber(value));\n    }\n    return expectByte(value);\n};\nconst stackTraceWarning = (message) => {\n    return String(new TypeError(message).stack || message)\n        .split(\"\\n\")\n        .slice(0, 5)\n        .filter((s) => !s.includes(\"stackTraceWarning\"))\n        .join(\"\\n\");\n};\nexport const logger = {\n    warn: console.warn,\n};\n","export function setFeature(context, feature, value) {\n    if (!context.__smithy_context) {\n        context.__smithy_context = {\n            features: {},\n        };\n    }\n    else if (!context.__smithy_context.features) {\n        context.__smithy_context.features = {};\n    }\n    context.__smithy_context.features[feature] = value;\n}\n","export const resolveParamsForS3 = async (endpointParams) => {\n    const bucket = endpointParams?.Bucket || \"\";\n    if (typeof endpointParams.Bucket === \"string\") {\n        endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent(\"#\")).replace(/\\?/g, encodeURIComponent(\"?\"));\n    }\n    if (isArnBucketName(bucket)) {\n        if (endpointParams.ForcePathStyle === true) {\n            throw new Error(\"Path-style addressing cannot be used with ARN buckets\");\n        }\n    }\n    else if (!isDnsCompatibleBucketName(bucket) ||\n        (bucket.indexOf(\".\") !== -1 && !String(endpointParams.Endpoint).startsWith(\"http:\")) ||\n        bucket.toLowerCase() !== bucket ||\n        bucket.length < 3) {\n        endpointParams.ForcePathStyle = true;\n    }\n    if (endpointParams.DisableMultiRegionAccessPoints) {\n        endpointParams.disableMultiRegionAccessPoints = true;\n        endpointParams.DisableMRAP = true;\n    }\n    return endpointParams;\n};\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\nexport const DOT_PATTERN = /\\./;\nexport const S3_HOSTNAME_PATTERN = /^(.+\\.)?s3(-fips)?(\\.dualstack)?[.-]([a-z0-9-]+)\\./;\nexport const isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\nexport const isArnBucketName = (bucketName) => {\n    const [arn, partition, service, , , bucket] = bucketName.split(\":\");\n    const isArn = arn === \"arn\" && bucketName.split(\":\").length >= 6;\n    const isValidArn = Boolean(isArn && partition && service && bucket);\n    if (isArn && !isValidArn) {\n        throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);\n    }\n    return isValidArn;\n};\n","export const createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {\n    const configProvider = async () => {\n        const configValue = config[configKey] ?? config[canonicalEndpointParamKey];\n        if (typeof configValue === \"function\") {\n            return configValue();\n        }\n        return configValue;\n    };\n    if (configKey === \"credentialScope\" || canonicalEndpointParamKey === \"CredentialScope\") {\n        return async () => {\n            const credentials = typeof config.credentials === \"function\" ? await config.credentials() : config.credentials;\n            const configValue = credentials?.credentialScope ?? credentials?.CredentialScope;\n            return configValue;\n        };\n    }\n    if (configKey === \"accountId\" || canonicalEndpointParamKey === \"AccountId\") {\n        return async () => {\n            const credentials = typeof config.credentials === \"function\" ? await config.credentials() : config.credentials;\n            const configValue = credentials?.accountId ?? credentials?.AccountId;\n            return configValue;\n        };\n    }\n    if (configKey === \"endpoint\" || canonicalEndpointParamKey === \"endpoint\") {\n        return async () => {\n            if (config.isCustomEndpoint === false) {\n                return undefined;\n            }\n            const endpoint = await configProvider();\n            if (endpoint && typeof endpoint === \"object\") {\n                if (\"url\" in endpoint) {\n                    return endpoint.url.href;\n                }\n                if (\"hostname\" in endpoint) {\n                    const { protocol, hostname, port, path } = endpoint;\n                    return `${protocol}//${hostname}${port ? \":\" + port : \"\"}${path}`;\n                }\n            }\n            return endpoint;\n        };\n    }\n    return configProvider;\n};\n","import { resolveParamsForS3 } from \"../service-customizations\";\nimport { createConfigValueProvider } from \"./createConfigValueProvider\";\nimport { getEndpointFromConfig } from \"./getEndpointFromConfig\";\nimport { toEndpointV1 } from \"./toEndpointV1\";\nexport const getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {\n    if (!clientConfig.isCustomEndpoint) {\n        let endpointFromConfig;\n        if (clientConfig.serviceConfiguredEndpoint) {\n            endpointFromConfig = await clientConfig.serviceConfiguredEndpoint();\n        }\n        else {\n            endpointFromConfig = await getEndpointFromConfig(clientConfig.serviceId);\n        }\n        if (endpointFromConfig) {\n            clientConfig.endpoint = () => Promise.resolve(toEndpointV1(endpointFromConfig));\n            clientConfig.isCustomEndpoint = true;\n        }\n    }\n    const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);\n    if (typeof clientConfig.endpointProvider !== \"function\") {\n        throw new Error(\"config.endpointProvider is not set.\");\n    }\n    const endpoint = clientConfig.endpointProvider(endpointParams, context);\n    return endpoint;\n};\nexport const resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {\n    const endpointParams = {};\n    const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};\n    for (const [name, instruction] of Object.entries(instructions)) {\n        switch (instruction.type) {\n            case \"staticContextParams\":\n                endpointParams[name] = instruction.value;\n                break;\n            case \"contextParams\":\n                endpointParams[name] = commandInput[instruction.name];\n                break;\n            case \"clientContextParams\":\n            case \"builtInParams\":\n                endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();\n                break;\n            case \"operationContextParams\":\n                endpointParams[name] = instruction.get(commandInput);\n                break;\n            default:\n                throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n        }\n    }\n    if (Object.keys(instructions).length === 0) {\n        Object.assign(endpointParams, clientConfig);\n    }\n    if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\n        await resolveParamsForS3(endpointParams);\n    }\n    return endpointParams;\n};\n","import { setFeature } from \"@smithy/core\";\nimport { getSmithyContext } from \"@smithy/util-middleware\";\nimport { getEndpointFromInstructions } from \"./adaptors/getEndpointFromInstructions\";\nexport const endpointMiddleware = ({ config, instructions, }) => {\n    return (next, context) => async (args) => {\n        if (config.isCustomEndpoint) {\n            setFeature(context, \"ENDPOINT_OVERRIDE\", \"N\");\n        }\n        const endpoint = await getEndpointFromInstructions(args.input, {\n            getEndpointParameterInstructions() {\n                return instructions;\n            },\n        }, { ...config }, context);\n        context.endpointV2 = endpoint;\n        context.authSchemes = endpoint.properties?.authSchemes;\n        const authScheme = context.authSchemes?.[0];\n        if (authScheme) {\n            context[\"signing_region\"] = authScheme.signingRegion;\n            context[\"signing_service\"] = authScheme.signingName;\n            const smithyContext = getSmithyContext(context);\n            const httpAuthOption = smithyContext?.selectedHttpAuthScheme?.httpAuthOption;\n            if (httpAuthOption) {\n                httpAuthOption.signingProperties = Object.assign(httpAuthOption.signingProperties || {}, {\n                    signing_region: authScheme.signingRegion,\n                    signingRegion: authScheme.signingRegion,\n                    signing_service: authScheme.signingName,\n                    signingName: authScheme.signingName,\n                    signingRegionSet: authScheme.signingRegionSet,\n                }, authScheme.properties);\n            }\n        }\n        return next({\n            ...args,\n        });\n    };\n};\n","import { serializerMiddlewareOption } from \"@smithy/middleware-serde\";\nimport { endpointMiddleware } from \"./endpointMiddleware\";\nexport const endpointMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"ENDPOINT_PARAMETERS\", \"ENDPOINT_V2\", \"ENDPOINT\"],\n    name: \"endpointV2Middleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: serializerMiddlewareOption.name,\n};\nexport const getEndpointPlugin = (config, instructions) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(endpointMiddleware({\n            config,\n            instructions,\n        }), endpointMiddlewareOptions);\n    },\n});\n","import { isArrayBuffer } from \"@smithy/is-array-buffer\";\nimport { Buffer } from \"buffer\";\nexport const fromArrayBuffer = (input, offset = 0, length = input.byteLength - offset) => {\n    if (!isArrayBuffer(input)) {\n        throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n    }\n    return Buffer.from(input, offset, length);\n};\nexport const fromString = (input, encoding) => {\n    if (typeof input !== \"string\") {\n        throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n    }\n    return encoding ? Buffer.from(input, encoding) : Buffer.from(input);\n};\n","module.exports = require(\"crypto\");","module.exports = require(\"url\");","import { homedir } from \"os\";\nimport { sep } from \"path\";\nconst homeDirCache = {};\nconst getHomeDirCacheKey = () => {\n    if (process && process.geteuid) {\n        return `${process.geteuid()}`;\n    }\n    return \"DEFAULT\";\n};\nexport const getHomeDir = () => {\n    const { HOME, USERPROFILE, HOMEPATH, HOMEDRIVE = `C:${sep}` } = process.env;\n    if (HOME)\n        return HOME;\n    if (USERPROFILE)\n        return USERPROFILE;\n    if (HOMEPATH)\n        return `${HOMEDRIVE}${HOMEPATH}`;\n    const homeDirCacheKey = getHomeDirCacheKey();\n    if (!homeDirCache[homeDirCacheKey])\n        homeDirCache[homeDirCacheKey] = homedir();\n    return homeDirCache[homeDirCacheKey];\n};\n","export const DEFAULT_RETRY_DELAY_BASE = 100;\nexport const MAXIMUM_RETRY_DELAY = 20 * 1000;\nexport const THROTTLING_RETRY_DELAY_BASE = 500;\nexport const INITIAL_RETRY_TOKENS = 500;\nexport const RETRY_COST = 5;\nexport const TIMEOUT_RETRY_COST = 10;\nexport const NO_RETRY_INCREMENT = 1;\nexport const INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\nexport const REQUEST_HEADER = \"amz-sdk-request\";\n","export const debugId = \"endpoints\";\n","export function toDebugString(input) {\n    if (typeof input !== \"object\" || input == null) {\n        return input;\n    }\n    if (\"ref\" in input) {\n        return `$${toDebugString(input.ref)}`;\n    }\n    if (\"fn\" in input) {\n        return `${input.fn}(${(input.argv || []).map(toDebugString).join(\", \")})`;\n    }\n    return JSON.stringify(input, null, 2);\n}\n","export class EndpointError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"EndpointError\";\n    }\n}\n","export const booleanEquals = (value1, value2) => value1 === value2;\n","import { EndpointError } from \"../types\";\nexport const getAttrPathList = (path) => {\n    const parts = path.split(\".\");\n    const pathList = [];\n    for (const part of parts) {\n        const squareBracketIndex = part.indexOf(\"[\");\n        if (squareBracketIndex !== -1) {\n            if (part.indexOf(\"]\") !== part.length - 1) {\n                throw new EndpointError(`Path: '${path}' does not end with ']'`);\n            }\n            const arrayIndex = part.slice(squareBracketIndex + 1, -1);\n            if (Number.isNaN(parseInt(arrayIndex))) {\n                throw new EndpointError(`Invalid array index: '${arrayIndex}' in path: '${path}'`);\n            }\n            if (squareBracketIndex !== 0) {\n                pathList.push(part.slice(0, squareBracketIndex));\n            }\n            pathList.push(arrayIndex);\n        }\n        else {\n            pathList.push(part);\n        }\n    }\n    return pathList;\n};\n","import { EndpointError } from \"../types\";\nimport { getAttrPathList } from \"./getAttrPathList\";\nexport const getAttr = (value, path) => getAttrPathList(path).reduce((acc, index) => {\n    if (typeof acc !== \"object\") {\n        throw new EndpointError(`Index '${index}' in '${path}' not found in '${JSON.stringify(value)}'`);\n    }\n    else if (Array.isArray(acc)) {\n        return acc[parseInt(index)];\n    }\n    return acc[index];\n}, value);\n","export const isSet = (value) => value != null;\n","export const not = (value) => !value;\n","export var EndpointURLScheme;\n(function (EndpointURLScheme) {\n    EndpointURLScheme[\"HTTP\"] = \"http\";\n    EndpointURLScheme[\"HTTPS\"] = \"https\";\n})(EndpointURLScheme || (EndpointURLScheme = {}));\n","import { EndpointURLScheme } from \"@smithy/types\";\nimport { isIpAddress } from \"./isIpAddress\";\nconst DEFAULT_PORTS = {\n    [EndpointURLScheme.HTTP]: 80,\n    [EndpointURLScheme.HTTPS]: 443,\n};\nexport const parseURL = (value) => {\n    const whatwgURL = (() => {\n        try {\n            if (value instanceof URL) {\n                return value;\n            }\n            if (typeof value === \"object\" && \"hostname\" in value) {\n                const { hostname, port, protocol = \"\", path = \"\", query = {} } = value;\n                const url = new URL(`${protocol}//${hostname}${port ? `:${port}` : \"\"}${path}`);\n                url.search = Object.entries(query)\n                    .map(([k, v]) => `${k}=${v}`)\n                    .join(\"&\");\n                return url;\n            }\n            return new URL(value);\n        }\n        catch (error) {\n            return null;\n        }\n    })();\n    if (!whatwgURL) {\n        console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`);\n        return null;\n    }\n    const urlString = whatwgURL.href;\n    const { host, hostname, pathname, protocol, search } = whatwgURL;\n    if (search) {\n        return null;\n    }\n    const scheme = protocol.slice(0, -1);\n    if (!Object.values(EndpointURLScheme).includes(scheme)) {\n        return null;\n    }\n    const isIp = isIpAddress(hostname);\n    const inputContainsDefaultPort = urlString.includes(`${host}:${DEFAULT_PORTS[scheme]}`) ||\n        (typeof value === \"string\" && value.includes(`${host}:${DEFAULT_PORTS[scheme]}`));\n    const authority = `${host}${inputContainsDefaultPort ? `:${DEFAULT_PORTS[scheme]}` : ``}`;\n    return {\n        scheme,\n        authority,\n        path: pathname,\n        normalizedPath: pathname.endsWith(\"/\") ? pathname : `${pathname}/`,\n        isIp,\n    };\n};\n","export const stringEquals = (value1, value2) => value1 === value2;\n","export const substring = (input, start, stop, reverse) => {\n    if (start >= stop || input.length < stop) {\n        return null;\n    }\n    if (!reverse) {\n        return input.substring(start, stop);\n    }\n    return input.substring(input.length - stop, input.length - start);\n};\n","export const uriEncode = (value) => encodeURIComponent(value).replace(/[!*'()]/g, (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`);\n","import { booleanEquals, getAttr, isSet, isValidHostLabel, not, parseURL, stringEquals, substring, uriEncode, } from \"../lib\";\nexport const endpointFunctions = {\n    booleanEquals,\n    getAttr,\n    isSet,\n    isValidHostLabel,\n    not,\n    parseURL,\n    stringEquals,\n    substring,\n    uriEncode,\n};\n","import { getAttr } from \"../lib\";\nexport const evaluateTemplate = (template, options) => {\n    const evaluatedTemplateArr = [];\n    const templateContext = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    let currentIndex = 0;\n    while (currentIndex < template.length) {\n        const openingBraceIndex = template.indexOf(\"{\", currentIndex);\n        if (openingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(currentIndex));\n            break;\n        }\n        evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));\n        const closingBraceIndex = template.indexOf(\"}\", openingBraceIndex);\n        if (closingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex));\n            break;\n        }\n        if (template[openingBraceIndex + 1] === \"{\" && template[closingBraceIndex + 1] === \"}\") {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));\n            currentIndex = closingBraceIndex + 2;\n        }\n        const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);\n        if (parameterName.includes(\"#\")) {\n            const [refName, attrName] = parameterName.split(\"#\");\n            evaluatedTemplateArr.push(getAttr(templateContext[refName], attrName));\n        }\n        else {\n            evaluatedTemplateArr.push(templateContext[parameterName]);\n        }\n        currentIndex = closingBraceIndex + 1;\n    }\n    return evaluatedTemplateArr.join(\"\");\n};\n","export const getReferenceValue = ({ ref }, options) => {\n    const referenceRecord = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    return referenceRecord[ref];\n};\n","import { EndpointError } from \"../types\";\nimport { callFunction } from \"./callFunction\";\nimport { evaluateTemplate } from \"./evaluateTemplate\";\nimport { getReferenceValue } from \"./getReferenceValue\";\nexport const evaluateExpression = (obj, keyName, options) => {\n    if (typeof obj === \"string\") {\n        return evaluateTemplate(obj, options);\n    }\n    else if (obj[\"fn\"]) {\n        return callFunction(obj, options);\n    }\n    else if (obj[\"ref\"]) {\n        return getReferenceValue(obj, options);\n    }\n    throw new EndpointError(`'${keyName}': ${String(obj)} is not a string, function or reference.`);\n};\n","import { customEndpointFunctions } from \"./customEndpointFunctions\";\nimport { endpointFunctions } from \"./endpointFunctions\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const callFunction = ({ fn, argv }, options) => {\n    const evaluatedArgs = argv.map((arg) => [\"boolean\", \"number\"].includes(typeof arg) ? arg : evaluateExpression(arg, \"arg\", options));\n    const fnSegments = fn.split(\".\");\n    if (fnSegments[0] in customEndpointFunctions && fnSegments[1] != null) {\n        return customEndpointFunctions[fnSegments[0]][fnSegments[1]](...evaluatedArgs);\n    }\n    return endpointFunctions[fn](...evaluatedArgs);\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { EndpointError } from \"../types\";\nimport { callFunction } from \"./callFunction\";\nexport const evaluateCondition = ({ assign, ...fnArgs }, options) => {\n    if (assign && assign in options.referenceRecord) {\n        throw new EndpointError(`'${assign}' is already defined in Reference Record.`);\n    }\n    const value = callFunction(fnArgs, options);\n    options.logger?.debug?.(`${debugId} evaluateCondition: ${toDebugString(fnArgs)} = ${toDebugString(value)}`);\n    return {\n        result: value === \"\" ? true : !!value,\n        ...(assign != null && { toAssign: { name: assign, value } }),\n    };\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { evaluateCondition } from \"./evaluateCondition\";\nexport const evaluateConditions = (conditions = [], options) => {\n    const conditionsReferenceRecord = {};\n    for (const condition of conditions) {\n        const { result, toAssign } = evaluateCondition(condition, {\n            ...options,\n            referenceRecord: {\n                ...options.referenceRecord,\n                ...conditionsReferenceRecord,\n            },\n        });\n        if (!result) {\n            return { result };\n        }\n        if (toAssign) {\n            conditionsReferenceRecord[toAssign.name] = toAssign.value;\n            options.logger?.debug?.(`${debugId} assign: ${toAssign.name} := ${toDebugString(toAssign.value)}`);\n        }\n    }\n    return { result: true, referenceRecord: conditionsReferenceRecord };\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointHeaders = (headers, options) => Object.entries(headers).reduce((acc, [headerKey, headerVal]) => ({\n    ...acc,\n    [headerKey]: headerVal.map((headerValEntry) => {\n        const processedExpr = evaluateExpression(headerValEntry, \"Header value entry\", options);\n        if (typeof processedExpr !== \"string\") {\n            throw new EndpointError(`Header '${headerKey}' value '${processedExpr}' is not a string`);\n        }\n        return processedExpr;\n    }),\n}), {});\n","import { EndpointError } from \"../types\";\nimport { evaluateTemplate } from \"./evaluateTemplate\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nexport const getEndpointProperty = (property, options) => {\n    if (Array.isArray(property)) {\n        return property.map((propertyEntry) => getEndpointProperty(propertyEntry, options));\n    }\n    switch (typeof property) {\n        case \"string\":\n            return evaluateTemplate(property, options);\n        case \"object\":\n            if (property === null) {\n                throw new EndpointError(`Unexpected endpoint property: ${property}`);\n            }\n            return getEndpointProperties(property, options);\n        case \"boolean\":\n            return property;\n        default:\n            throw new EndpointError(`Unexpected endpoint property type: ${typeof property}`);\n    }\n};\n","import { getEndpointProperty } from \"./getEndpointProperty\";\nexport const getEndpointProperties = (properties, options) => Object.entries(properties).reduce((acc, [propertyKey, propertyVal]) => ({\n    ...acc,\n    [propertyKey]: getEndpointProperty(propertyVal, options),\n}), {});\n","import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointUrl = (endpointUrl, options) => {\n    const expression = evaluateExpression(endpointUrl, \"Endpoint URL\", options);\n    if (typeof expression === \"string\") {\n        try {\n            return new URL(expression);\n        }\n        catch (error) {\n            console.error(`Failed to construct URL with ${expression}`, error);\n            throw error;\n        }\n    }\n    throw new EndpointError(`Endpoint URL must be a string, got ${typeof expression}`);\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { getEndpointHeaders } from \"./getEndpointHeaders\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nimport { getEndpointUrl } from \"./getEndpointUrl\";\nexport const evaluateEndpointRule = (endpointRule, options) => {\n    const { conditions, endpoint } = endpointRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    const endpointRuleOptions = {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    };\n    const { url, properties, headers } = endpoint;\n    options.logger?.debug?.(`${debugId} Resolving endpoint from template: ${toDebugString(endpoint)}`);\n    return {\n        ...(headers != undefined && {\n            headers: getEndpointHeaders(headers, endpointRuleOptions),\n        }),\n        ...(properties != undefined && {\n            properties: getEndpointProperties(properties, endpointRuleOptions),\n        }),\n        url: getEndpointUrl(url, endpointRuleOptions),\n    };\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const evaluateErrorRule = (errorRule, options) => {\n    const { conditions, error } = errorRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    throw new EndpointError(evaluateExpression(error, \"Error\", {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    }));\n};\n","import { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateRules } from \"./evaluateRules\";\nexport const evaluateTreeRule = (treeRule, options) => {\n    const { conditions, rules } = treeRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    return evaluateRules(rules, {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    });\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateEndpointRule } from \"./evaluateEndpointRule\";\nimport { evaluateErrorRule } from \"./evaluateErrorRule\";\nimport { evaluateTreeRule } from \"./evaluateTreeRule\";\nexport const evaluateRules = (rules, options) => {\n    for (const rule of rules) {\n        if (rule.type === \"endpoint\") {\n            const endpointOrUndefined = evaluateEndpointRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else if (rule.type === \"error\") {\n            evaluateErrorRule(rule, options);\n        }\n        else if (rule.type === \"tree\") {\n            const endpointOrUndefined = evaluateTreeRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else {\n            throw new EndpointError(`Unknown endpoint rule: ${rule}`);\n        }\n    }\n    throw new EndpointError(`Rules evaluation failed`);\n};\n","import { debugId, toDebugString } from \"./debug\";\nimport { EndpointError } from \"./types\";\nimport { evaluateRules } from \"./utils\";\nexport const resolveEndpoint = (ruleSetObject, options) => {\n    const { endpointParams, logger } = options;\n    const { parameters, rules } = ruleSetObject;\n    options.logger?.debug?.(`${debugId} Initial EndpointParams: ${toDebugString(endpointParams)}`);\n    const paramsWithDefault = Object.entries(parameters)\n        .filter(([, v]) => v.default != null)\n        .map(([k, v]) => [k, v.default]);\n    if (paramsWithDefault.length > 0) {\n        for (const [paramKey, paramDefaultValue] of paramsWithDefault) {\n            endpointParams[paramKey] = endpointParams[paramKey] ?? paramDefaultValue;\n        }\n    }\n    const requiredParams = Object.entries(parameters)\n        .filter(([, v]) => v.required)\n        .map(([k]) => k);\n    for (const requiredParam of requiredParams) {\n        if (endpointParams[requiredParam] == null) {\n            throw new EndpointError(`Missing required parameter: '${requiredParam}'`);\n        }\n    }\n    const endpoint = evaluateRules(rules, { endpointParams, logger, referenceRecord: {} });\n    options.logger?.debug?.(`${debugId} Resolved endpoint: ${toDebugString(endpoint)}`);\n    return endpoint;\n};\n","export const SMITHY_CONTEXT_KEY = \"__smithy_context\";\n","import { normalizeProvider } from \"@smithy/core\";\nexport const DEFAULT_UA_APP_ID = undefined;\nfunction isValidUserAgentAppId(appId) {\n    if (appId === undefined) {\n        return true;\n    }\n    return typeof appId === \"string\" && appId.length <= 50;\n}\nexport function resolveUserAgentConfig(input) {\n    const normalizedAppIdProvider = normalizeProvider(input.userAgentAppId ?? DEFAULT_UA_APP_ID);\n    const { customUserAgent } = input;\n    return Object.assign(input, {\n        customUserAgent: typeof customUserAgent === \"string\" ? [[customUserAgent]] : customUserAgent,\n        userAgentAppId: async () => {\n            const appId = await normalizedAppIdProvider();\n            if (!isValidUserAgentAppId(appId)) {\n                const logger = input.logger?.constructor?.name === \"NoOpLogger\" || !input.logger ? console : input.logger;\n                if (typeof appId !== \"string\") {\n                    logger?.warn(\"userAgentAppId must be a string or undefined.\");\n                }\n                else if (appId.length > 50) {\n                    logger?.warn(\"The provided userAgentAppId exceeds the maximum length of 50 characters.\");\n                }\n            }\n            return appId;\n        },\n    });\n}\n","export class HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n        this.username = options.username;\n        this.password = options.password;\n        this.fragment = options.fragment;\n    }\n    static clone(request) {\n        const cloned = new HttpRequest({\n            ...request,\n            headers: { ...request.headers },\n        });\n        if (cloned.query) {\n            cloned.query = cloneQuery(cloned.query);\n        }\n        return cloned;\n    }\n    static isInstance(request) {\n        if (!request) {\n            return false;\n        }\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        return HttpRequest.clone(this);\n    }\n}\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n","export var RETRY_MODES;\n(function (RETRY_MODES) {\n    RETRY_MODES[\"STANDARD\"] = \"standard\";\n    RETRY_MODES[\"ADAPTIVE\"] = \"adaptive\";\n})(RETRY_MODES || (RETRY_MODES = {}));\nexport const DEFAULT_MAX_ATTEMPTS = 3;\nexport const DEFAULT_RETRY_MODE = RETRY_MODES.STANDARD;\n","import { fromString } from \"@smithy/util-buffer-from\";\nexport const fromUtf8 = (input) => {\n    const buf = fromString(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n};\n","export class EndpointCache {\n    constructor({ size, params }) {\n        this.data = new Map();\n        this.parameters = [];\n        this.capacity = size ?? 50;\n        if (params) {\n            this.parameters = params;\n        }\n    }\n    get(endpointParams, resolver) {\n        const key = this.hash(endpointParams);\n        if (key === false) {\n            return resolver();\n        }\n        if (!this.data.has(key)) {\n            if (this.data.size > this.capacity + 10) {\n                const keys = this.data.keys();\n                let i = 0;\n                while (true) {\n                    const { value, done } = keys.next();\n                    this.data.delete(value);\n                    if (done || ++i > 10) {\n                        break;\n                    }\n                }\n            }\n            this.data.set(key, resolver());\n        }\n        return this.data.get(key);\n    }\n    size() {\n        return this.data.size;\n    }\n    hash(endpointParams) {\n        let buffer = \"\";\n        const { parameters } = this;\n        if (parameters.length === 0) {\n            return false;\n        }\n        for (const param of parameters) {\n            const val = String(endpointParams[param] ?? \"\");\n            if (val.includes(\"|;\")) {\n                return false;\n            }\n            buffer += val + \"|;\";\n        }\n        return buffer;\n    }\n}\n","import { fromArrayBuffer } from \"@smithy/util-buffer-from\";\nexport const toUtf8 = (input) => {\n    if (typeof input === \"string\") {\n        return input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.\");\n    }\n    return fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\n};\n","export const loggerMiddleware = () => (next, context) => async (args) => {\n    try {\n        const response = await next(args);\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger?.info?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            output: outputFilterSensitiveLog(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n        return response;\n    }\n    catch (error) {\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        logger?.error?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            error,\n            metadata: error.$metadata,\n        });\n        throw error;\n    }\n};\nexport const loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nexport const getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n});\n","import { constructStack } from \"@smithy/middleware-stack\";\nexport class Client {\n    constructor(config) {\n        this.config = config;\n        this.middlewareStack = constructStack();\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const useHandlerCache = options === undefined && this.config.cacheMiddleware === true;\n        let handler;\n        if (useHandlerCache) {\n            if (!this.handlers) {\n                this.handlers = new WeakMap();\n            }\n            const handlers = this.handlers;\n            if (handlers.has(command.constructor)) {\n                handler = handlers.get(command.constructor);\n            }\n            else {\n                handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n                handlers.set(command.constructor, handler);\n            }\n        }\n        else {\n            delete this.handlers;\n            handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        }\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(() => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        this.config?.requestHandler?.destroy?.();\n        delete this.handlers;\n    }\n}\n","export function extendedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\n","export const recursionDetectionMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"RECURSION_DETECTION\"],\n    name: \"recursionDetectionMiddleware\",\n    override: true,\n    priority: \"low\",\n};\n","import { InvokeStore } from \"@aws/lambda-invoke-store\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nconst TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nconst ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nconst ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nexport const recursionDetectionMiddleware = () => (next) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request)) {\n        return next(args);\n    }\n    const traceIdHeader = Object.keys(request.headers ?? {}).find((h) => h.toLowerCase() === TRACE_ID_HEADER_NAME.toLowerCase()) ??\n        TRACE_ID_HEADER_NAME;\n    if (request.headers.hasOwnProperty(traceIdHeader)) {\n        return next(args);\n    }\n    const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n    const traceIdFromEnv = process.env[ENV_TRACE_ID];\n    const traceIdFromInvokeStore = InvokeStore.getXRayTraceId();\n    const traceId = traceIdFromInvokeStore ?? traceIdFromEnv;\n    const nonEmptyString = (str) => typeof str === \"string\" && str.length > 0;\n    if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n        request.headers[TRACE_ID_HEADER_NAME] = traceId;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\n","import { recursionDetectionMiddlewareOptions } from \"./configuration\";\nimport { recursionDetectionMiddleware } from \"./recursionDetectionMiddleware\";\nexport const getRecursionDetectionPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(recursionDetectionMiddleware(), recursionDetectionMiddlewareOptions);\n    },\n});\n","export const createIsIdentityExpiredFunction = (expirationMs) => (identity) => doesIdentityRequireRefresh(identity) && identity.expiration.getTime() - Date.now() < expirationMs;\nexport const EXPIRATION_MS = 300000;\nexport const isIdentityExpired = createIsIdentityExpiredFunction(EXPIRATION_MS);\nexport const doesIdentityRequireRefresh = (identity) => identity.expiration !== undefined;\nexport const memoizeIdentityProvider = (provider, isExpired, requiresRefresh) => {\n    if (provider === undefined) {\n        return undefined;\n    }\n    const normalizedProvider = typeof provider !== \"function\" ? async () => Promise.resolve(provider) : provider;\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async (options) => {\n        if (!pending) {\n            pending = normalizedProvider(options);\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider(options);\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider(options);\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (!requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider(options);\n            return resolved;\n        }\n        return resolved;\n    };\n};\n","export const ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexport const CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexport const AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexport const SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexport const EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexport const SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexport const TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nexport const REGION_SET_PARAM = \"X-Amz-Region-Set\";\nexport const AUTH_HEADER = \"authorization\";\nexport const AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nexport const DATE_HEADER = \"date\";\nexport const GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];\nexport const SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();\nexport const SHA256_HEADER = \"x-amz-content-sha256\";\nexport const TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\nexport const HOST_HEADER = \"host\";\nexport const ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nexport const PROXY_HEADER_PATTERN = /^proxy-/;\nexport const SEC_HEADER_PATTERN = /^sec-/;\nexport const UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nexport const ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nexport const ALGORITHM_IDENTIFIER_V4A = \"AWS4-ECDSA-P256-SHA256\";\nexport const EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nexport const UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexport const MAX_CACHE_SIZE = 50;\nexport const KEY_TYPE_IDENTIFIER = \"aws4_request\";\nexport const MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n","import { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { KEY_TYPE_IDENTIFIER, MAX_CACHE_SIZE } from \"./constants\";\nconst signingKeyCache = {};\nconst cacheQueue = [];\nexport const createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\nexport const getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${toHex(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nexport const clearCredentialCache = () => {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\n        delete signingKeyCache[cacheKey];\n    });\n};\nconst hmac = (ctor, secret, data) => {\n    const hash = new ctor(secret);\n    hash.update(toUint8Array(data));\n    return hash.digest();\n};\n","import { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\nexport const getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        if (headers[headerName] == undefined) {\n            continue;\n        }\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||\n            unsignableHeaders?.has(canonicalHeaderName) ||\n            PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\n","import { isArrayBuffer } from \"@smithy/is-array-buffer\";\nimport { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\nexport const getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(toUint8Array(body));\n        return toHex(await hashCtor.digest());\n    }\n    return UNSIGNED_PAYLOAD;\n};\n","import { fromHex, toHex } from \"@smithy/util-hex-encoding\";\nimport { fromUtf8 } from \"@smithy/util-utf8\";\nexport class HeaderFormatter {\n    format(headers) {\n        const chunks = [];\n        for (const headerName of Object.keys(headers)) {\n            const bytes = fromUtf8(headerName);\n            chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));\n        }\n        const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));\n        let position = 0;\n        for (const chunk of chunks) {\n            out.set(chunk, position);\n            position += chunk.byteLength;\n        }\n        return out;\n    }\n    formatHeaderValue(header) {\n        switch (header.type) {\n            case \"boolean\":\n                return Uint8Array.from([header.value ? 0 : 1]);\n            case \"byte\":\n                return Uint8Array.from([2, header.value]);\n            case \"short\":\n                const shortView = new DataView(new ArrayBuffer(3));\n                shortView.setUint8(0, 3);\n                shortView.setInt16(1, header.value, false);\n                return new Uint8Array(shortView.buffer);\n            case \"integer\":\n                const intView = new DataView(new ArrayBuffer(5));\n                intView.setUint8(0, 4);\n                intView.setInt32(1, header.value, false);\n                return new Uint8Array(intView.buffer);\n            case \"long\":\n                const longBytes = new Uint8Array(9);\n                longBytes[0] = 5;\n                longBytes.set(header.value.bytes, 1);\n                return longBytes;\n            case \"binary\":\n                const binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));\n                binView.setUint8(0, 6);\n                binView.setUint16(1, header.value.byteLength, false);\n                const binBytes = new Uint8Array(binView.buffer);\n                binBytes.set(header.value, 3);\n                return binBytes;\n            case \"string\":\n                const utf8Bytes = fromUtf8(header.value);\n                const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));\n                strView.setUint8(0, 7);\n                strView.setUint16(1, utf8Bytes.byteLength, false);\n                const strBytes = new Uint8Array(strView.buffer);\n                strBytes.set(utf8Bytes, 3);\n                return strBytes;\n            case \"timestamp\":\n                const tsBytes = new Uint8Array(9);\n                tsBytes[0] = 8;\n                tsBytes.set(Int64.fromNumber(header.value.valueOf()).bytes, 1);\n                return tsBytes;\n            case \"uuid\":\n                if (!UUID_PATTERN.test(header.value)) {\n                    throw new Error(`Invalid UUID received: ${header.value}`);\n                }\n                const uuidBytes = new Uint8Array(17);\n                uuidBytes[0] = 9;\n                uuidBytes.set(fromHex(header.value.replace(/\\-/g, \"\")), 1);\n                return uuidBytes;\n        }\n    }\n}\nvar HEADER_VALUE_TYPE;\n(function (HEADER_VALUE_TYPE) {\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolTrue\"] = 0] = \"boolTrue\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolFalse\"] = 1] = \"boolFalse\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byte\"] = 2] = \"byte\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"short\"] = 3] = \"short\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"integer\"] = 4] = \"integer\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"long\"] = 5] = \"long\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byteArray\"] = 6] = \"byteArray\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"string\"] = 7] = \"string\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"timestamp\"] = 8] = \"timestamp\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"uuid\"] = 9] = \"uuid\";\n})(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));\nconst UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;\nexport class Int64 {\n    constructor(bytes) {\n        this.bytes = bytes;\n        if (bytes.byteLength !== 8) {\n            throw new Error(\"Int64 buffers must be exactly 8 bytes\");\n        }\n    }\n    static fromNumber(number) {\n        if (number > 9223372036854776000 || number < -9223372036854776000) {\n            throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);\n        }\n        const bytes = new Uint8Array(8);\n        for (let i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {\n            bytes[i] = remaining;\n        }\n        if (number < 0) {\n            negate(bytes);\n        }\n        return new Int64(bytes);\n    }\n    valueOf() {\n        const bytes = this.bytes.slice(0);\n        const negative = bytes[0] & 0b10000000;\n        if (negative) {\n            negate(bytes);\n        }\n        return parseInt(toHex(bytes), 16) * (negative ? -1 : 1);\n    }\n    toString() {\n        return String(this.valueOf());\n    }\n}\nfunction negate(bytes) {\n    for (let i = 0; i < 8; i++) {\n        bytes[i] ^= 0xff;\n    }\n    for (let i = 7; i > -1; i--) {\n        bytes[i]++;\n        if (bytes[i] !== 0)\n            break;\n    }\n}\n","export const hasHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\nexport const getHeaderValue = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return headers[headerName];\n        }\n    }\n    return undefined;\n};\nexport const deleteHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            delete headers[headerName];\n        }\n    }\n};\n","import { HttpRequest } from \"@smithy/protocol-http\";\nexport const moveHeadersToQuery = (request, options = {}) => {\n    const { headers, query = {} } = HttpRequest.clone(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if ((lname.slice(0, 6) === \"x-amz-\" && !options.unhoistableHeaders?.has(lname)) ||\n            options.hoistableHeaders?.has(lname)) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n};\n","import { HttpRequest } from \"@smithy/protocol-http\";\nimport { GENERATED_HEADERS } from \"./constants\";\nexport const prepareRequest = (request) => {\n    request = HttpRequest.clone(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n};\n","import { escapeUri } from \"@smithy/util-uri-escape\";\nimport { SIGNATURE_HEADER } from \"./constants\";\nexport const getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query)) {\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\n            continue;\n        }\n        const encodedKey = escapeUri(key);\n        keys.push(encodedKey);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[encodedKey] = `${encodedKey}=${escapeUri(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[encodedKey] = value\n                .slice(0)\n                .reduce((encoded, value) => encoded.concat([`${encodedKey}=${escapeUri(value)}`]), [])\n                .sort()\n                .join(\"&\");\n        }\n    }\n    return keys\n        .sort()\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\n","export const iso8601 = (time) => toDate(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\nexport const toDate = (time) => {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n};\n","import { toHex } from \"@smithy/util-hex-encoding\";\nimport { normalizeProvider } from \"@smithy/util-middleware\";\nimport { escapeUri } from \"@smithy/util-uri-escape\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { getCanonicalQuery } from \"./getCanonicalQuery\";\nimport { iso8601 } from \"./utilDate\";\nexport class SignatureV4Base {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = normalizeProvider(region);\n        this.credentialProvider = normalizeProvider(credentials);\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest, algorithmIdentifier) {\n        const hash = new this.sha256();\n        hash.update(toUint8Array(canonicalRequest));\n        const hashedRequest = await hash.digest();\n        return `${algorithmIdentifier}\n${longDate}\n${credentialScope}\n${toHex(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const normalizedPathSegments = [];\n            for (const pathSegment of path.split(\"/\")) {\n                if (pathSegment?.length === 0)\n                    continue;\n                if (pathSegment === \".\")\n                    continue;\n                if (pathSegment === \"..\") {\n                    normalizedPathSegments.pop();\n                }\n                else {\n                    normalizedPathSegments.push(pathSegment);\n                }\n            }\n            const normalizedPath = `${path?.startsWith(\"/\") ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && path?.endsWith(\"/\") ? \"/\" : \"\"}`;\n            const doubleEncoded = escapeUri(normalizedPath);\n            return doubleEncoded.replace(/%2F/g, \"/\");\n        }\n        return path;\n    }\n    validateResolvedCredentials(credentials) {\n        if (typeof credentials !== \"object\" ||\n            typeof credentials.accessKeyId !== \"string\" ||\n            typeof credentials.secretAccessKey !== \"string\") {\n            throw new Error(\"Resolved credential object is not valid\");\n        }\n    }\n    formatDate(now) {\n        const longDate = iso8601(now).replace(/[\\-:]/g, \"\");\n        return {\n            longDate,\n            shortDate: longDate.slice(0, 8),\n        };\n    }\n    getCanonicalHeaderList(headers) {\n        return Object.keys(headers).sort().join(\";\");\n    }\n}\n","import { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUint8Array } from \"@smithy/util-utf8\";\nimport { ALGORITHM_IDENTIFIER, ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EVENT_ALGORITHM_IDENTIFIER, EXPIRES_QUERY_PARAM, MAX_PRESIGNED_TTL, SHA256_HEADER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM, } from \"./constants\";\nimport { createScope, getSigningKey } from \"./credentialDerivation\";\nimport { getCanonicalHeaders } from \"./getCanonicalHeaders\";\nimport { getPayloadHash } from \"./getPayloadHash\";\nimport { HeaderFormatter } from \"./HeaderFormatter\";\nimport { hasHeader } from \"./headerUtil\";\nimport { moveHeadersToQuery } from \"./moveHeadersToQuery\";\nimport { prepareRequest } from \"./prepareRequest\";\nimport { SignatureV4Base } from \"./SignatureV4Base\";\nexport class SignatureV4 extends SignatureV4Base {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        super({\n            applyChecksum,\n            credentials,\n            region,\n            service,\n            sha256,\n            uriEscapePath,\n        });\n        this.headerFormatter = new HeaderFormatter();\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, hoistableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { longDate, shortDate } = this.formatDate(signingDate);\n        if (expiresIn > MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders, hoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;\n        request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        request.query[SIGNED_HEADERS_QUERY_PARAM] = this.getCanonicalHeaderList(canonicalHeaders);\n        request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else if (toSign.message) {\n            return this.signMessage(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate, longDate } = this.formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = toHex(await hash.digest());\n        const stringToSign = [\n            EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signMessage(signableMessage, { signingDate = new Date(), signingRegion, signingService }) {\n        const promise = this.signEvent({\n            headers: this.headerFormatter.format(signableMessage.message.headers),\n            payload: signableMessage.message.body,\n        }, {\n            signingDate,\n            signingRegion,\n            signingService,\n            priorSignature: signableMessage.priorSignature,\n        });\n        return promise.then((signature) => {\n            return { message: signableMessage.message, signature };\n        });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate } = this.formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const request = prepareRequest(requestToSign);\n        const { longDate, shortDate } = this.formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        request.headers[AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await getPayloadHash(request, this.sha256);\n        if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[AUTH_HEADER] =\n            `${ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${this.getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest, ALGORITHM_IDENTIFIER);\n        const hash = new this.sha256(await keyPromise);\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n}\n","import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { doesIdentityRequireRefresh, isIdentityExpired, memoizeIdentityProvider, normalizeProvider, } from \"@smithy/core\";\nimport { SignatureV4 } from \"@smithy/signature-v4\";\nexport const resolveAwsSdkSigV4Config = (config) => {\n    let inputCredentials = config.credentials;\n    let isUserSupplied = !!config.credentials;\n    let resolvedCredentials = undefined;\n    Object.defineProperty(config, \"credentials\", {\n        set(credentials) {\n            if (credentials && credentials !== inputCredentials && credentials !== resolvedCredentials) {\n                isUserSupplied = true;\n            }\n            inputCredentials = credentials;\n            const memoizedProvider = normalizeCredentialProvider(config, {\n                credentials: inputCredentials,\n                credentialDefaultProvider: config.credentialDefaultProvider,\n            });\n            const boundProvider = bindCallerConfig(config, memoizedProvider);\n            if (isUserSupplied && !boundProvider.attributed) {\n                resolvedCredentials = async (options) => boundProvider(options).then((creds) => setCredentialFeature(creds, \"CREDENTIALS_CODE\", \"e\"));\n                resolvedCredentials.memoized = boundProvider.memoized;\n                resolvedCredentials.configBound = boundProvider.configBound;\n                resolvedCredentials.attributed = true;\n            }\n            else {\n                resolvedCredentials = boundProvider;\n            }\n        },\n        get() {\n            return resolvedCredentials;\n        },\n        enumerable: true,\n        configurable: true,\n    });\n    config.credentials = inputCredentials;\n    const { signingEscapePath = true, systemClockOffset = config.systemClockOffset || 0, sha256, } = config;\n    let signer;\n    if (config.signer) {\n        signer = normalizeProvider(config.signer);\n    }\n    else if (config.regionInfoProvider) {\n        signer = () => normalizeProvider(config.region)()\n            .then(async (region) => [\n            (await config.regionInfoProvider(region, {\n                useFipsEndpoint: await config.useFipsEndpoint(),\n                useDualstackEndpoint: await config.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            config.signingRegion = config.signingRegion || signingRegion || region;\n            config.signingName = config.signingName || signingService || config.serviceId;\n            const params = {\n                ...config,\n                credentials: config.credentials,\n                region: config.signingRegion,\n                service: config.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = config.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        });\n    }\n    else {\n        signer = async (authScheme) => {\n            authScheme = Object.assign({}, {\n                name: \"sigv4\",\n                signingName: config.signingName || config.defaultSigningName,\n                signingRegion: await normalizeProvider(config.region)(),\n                properties: {},\n            }, authScheme);\n            const signingRegion = authScheme.signingRegion;\n            const signingService = authScheme.signingName;\n            config.signingRegion = config.signingRegion || signingRegion;\n            config.signingName = config.signingName || signingService || config.serviceId;\n            const params = {\n                ...config,\n                credentials: config.credentials,\n                region: config.signingRegion,\n                service: config.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = config.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        };\n    }\n    const resolvedConfig = Object.assign(config, {\n        systemClockOffset,\n        signingEscapePath,\n        signer,\n    });\n    return resolvedConfig;\n};\nexport const resolveAWSSDKSigV4Config = resolveAwsSdkSigV4Config;\nfunction normalizeCredentialProvider(config, { credentials, credentialDefaultProvider, }) {\n    let credentialsProvider;\n    if (credentials) {\n        if (!credentials?.memoized) {\n            credentialsProvider = memoizeIdentityProvider(credentials, isIdentityExpired, doesIdentityRequireRefresh);\n        }\n        else {\n            credentialsProvider = credentials;\n        }\n    }\n    else {\n        if (credentialDefaultProvider) {\n            credentialsProvider = normalizeProvider(credentialDefaultProvider(Object.assign({}, config, {\n                parentClientConfig: config,\n            })));\n        }\n        else {\n            credentialsProvider = async () => {\n                throw new Error(\"@aws-sdk/core::resolveAwsSdkSigV4Config - `credentials` not provided and no credentialDefaultProvider was configured.\");\n            };\n        }\n    }\n    credentialsProvider.memoized = true;\n    return credentialsProvider;\n}\nfunction bindCallerConfig(config, credentialsProvider) {\n    if (credentialsProvider.configBound) {\n        return credentialsProvider;\n    }\n    const fn = async (options) => credentialsProvider({ ...options, callerClientConfig: config });\n    fn.memoized = credentialsProvider.memoized;\n    fn.configBound = true;\n    return fn;\n}\n","const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n","export function setFeature(context, feature, value) {\n    if (!context.__aws_sdk_context) {\n        context.__aws_sdk_context = {\n            features: {},\n        };\n    }\n    else if (!context.__aws_sdk_context.features) {\n        context.__aws_sdk_context.features = {};\n    }\n    context.__aws_sdk_context.features[feature] = value;\n}\n","import { setFeature } from \"@aws-sdk/core\";\nconst ACCOUNT_ID_ENDPOINT_REGEX = /\\d{12}\\.ddb/;\nexport async function checkFeatures(context, config, args) {\n    const request = args.request;\n    if (request?.headers?.[\"smithy-protocol\"] === \"rpc-v2-cbor\") {\n        setFeature(context, \"PROTOCOL_RPC_V2_CBOR\", \"M\");\n    }\n    if (typeof config.retryStrategy === \"function\") {\n        const retryStrategy = await config.retryStrategy();\n        if (typeof retryStrategy.acquireInitialRetryToken === \"function\") {\n            if (retryStrategy.constructor?.name?.includes(\"Adaptive\")) {\n                setFeature(context, \"RETRY_MODE_ADAPTIVE\", \"F\");\n            }\n            else {\n                setFeature(context, \"RETRY_MODE_STANDARD\", \"E\");\n            }\n        }\n        else {\n            setFeature(context, \"RETRY_MODE_LEGACY\", \"D\");\n        }\n    }\n    if (typeof config.accountIdEndpointMode === \"function\") {\n        const endpointV2 = context.endpointV2;\n        if (String(endpointV2?.url?.hostname).match(ACCOUNT_ID_ENDPOINT_REGEX)) {\n            setFeature(context, \"ACCOUNT_ID_ENDPOINT\", \"O\");\n        }\n        switch (await config.accountIdEndpointMode?.()) {\n            case \"disabled\":\n                setFeature(context, \"ACCOUNT_ID_MODE_DISABLED\", \"Q\");\n                break;\n            case \"preferred\":\n                setFeature(context, \"ACCOUNT_ID_MODE_PREFERRED\", \"P\");\n                break;\n            case \"required\":\n                setFeature(context, \"ACCOUNT_ID_MODE_REQUIRED\", \"R\");\n                break;\n        }\n    }\n    const identity = context.__smithy_context?.selectedHttpAuthScheme?.identity;\n    if (identity?.$source) {\n        const credentials = identity;\n        if (credentials.accountId) {\n            setFeature(context, \"RESOLVED_ACCOUNT_ID\", \"T\");\n        }\n        for (const [key, value] of Object.entries(credentials.$source ?? {})) {\n            setFeature(context, key, value);\n        }\n    }\n}\n","export const USER_AGENT = \"user-agent\";\nexport const X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nexport const SPACE = \" \";\nexport const UA_NAME_SEPARATOR = \"/\";\nexport const UA_NAME_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\nexport const UA_VALUE_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w\\#]/g;\nexport const UA_ESCAPE_CHAR = \"-\";\n","const BYTE_LIMIT = 1024;\nexport function encodeFeatures(features) {\n    let buffer = \"\";\n    for (const key in features) {\n        const val = features[key];\n        if (buffer.length + val.length + 1 <= BYTE_LIMIT) {\n            if (buffer.length) {\n                buffer += \",\" + val;\n            }\n            else {\n                buffer += val;\n            }\n            continue;\n        }\n        break;\n    }\n    return buffer;\n}\n","import { getUserAgentPrefix } from \"@aws-sdk/util-endpoints\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { checkFeatures } from \"./check-features\";\nimport { SPACE, UA_ESCAPE_CHAR, UA_NAME_ESCAPE_REGEX, UA_NAME_SEPARATOR, UA_VALUE_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT, } from \"./constants\";\nimport { encodeFeatures } from \"./encode-features\";\nexport const userAgentMiddleware = (options) => (next, context) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request)) {\n        return next(args);\n    }\n    const { headers } = request;\n    const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    await checkFeatures(context, options, args);\n    const awsContext = context;\n    defaultUserAgent.push(`m/${encodeFeatures(Object.assign({}, context.__smithy_context?.features, awsContext.__aws_sdk_context?.features))}`);\n    const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n    const appId = await options.userAgentAppId();\n    if (appId) {\n        defaultUserAgent.push(escapeUserAgent([`app/${appId}`]));\n    }\n    const prefix = getUserAgentPrefix();\n    const sdkUserAgentValue = (prefix ? [prefix] : [])\n        .concat([...defaultUserAgent, ...userAgent, ...customUserAgent])\n        .join(SPACE);\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT]\n                ? `${headers[USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nconst escapeUserAgent = (userAgentPair) => {\n    const name = userAgentPair[0]\n        .split(UA_NAME_SEPARATOR)\n        .map((part) => part.replace(UA_NAME_ESCAPE_REGEX, UA_ESCAPE_CHAR))\n        .join(UA_NAME_SEPARATOR);\n    const version = userAgentPair[1]?.replace(UA_VALUE_ESCAPE_REGEX, UA_ESCAPE_CHAR);\n    const prefixSeparatorIndex = name.indexOf(UA_NAME_SEPARATOR);\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .reduce((acc, item, index) => {\n        switch (index) {\n            case 0:\n                return item;\n            case 1:\n                return `${acc}/${item}`;\n            default:\n                return `${acc}#${item}`;\n        }\n    }, \"\");\n};\nexport const getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nexport const getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    },\n});\n","import { ProviderError } from \"./ProviderError\";\nexport const chain = (...providers) => async () => {\n    if (providers.length === 0) {\n        throw new ProviderError(\"No providers in chain\");\n    }\n    let lastProviderError;\n    for (const provider of providers) {\n        try {\n            const credentials = await provider();\n            return credentials;\n        }\n        catch (err) {\n            lastProviderError = err;\n            if (err?.tryNextLink) {\n                continue;\n            }\n            throw err;\n        }\n    }\n    throw lastProviderError;\n};\n","import { collectBody } from \"@smithy/smithy-client\";\nimport { toUtf8 } from \"@smithy/util-utf8\";\nexport const collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => (context?.utf8Encoder ?? toUtf8)(body));\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"process\");","export const crtAvailability = {\n    isCrtAvailable: false,\n};\n","import { crtAvailability } from \"./crt-availability\";\nexport const isCrtAvailable = () => {\n    if (crtAvailability.isCrtAvailable) {\n        return [\"md/crt-avail\"];\n    }\n    return null;\n};\n","import { platform, release } from \"os\";\nimport { env, versions } from \"process\";\nimport { isCrtAvailable } from \"./is-crt-available\";\nexport { crtAvailability } from \"./crt-availability\";\nexport const createDefaultUserAgentProvider = ({ serviceId, clientVersion }) => {\n    return async (config) => {\n        const sections = [\n            [\"aws-sdk-js\", clientVersion],\n            [\"ua\", \"2.1\"],\n            [`os/${platform()}`, release()],\n            [\"lang/js\"],\n            [\"md/nodejs\", `${versions.node}`],\n        ];\n        const crtAvailable = isCrtAvailable();\n        if (crtAvailable) {\n            sections.push(crtAvailable);\n        }\n        if (serviceId) {\n            sections.push([`api/${serviceId}`, clientVersion]);\n        }\n        if (env.AWS_EXECUTION_ENV) {\n            sections.push([`exec-env/${env.AWS_EXECUTION_ENV}`]);\n        }\n        const appId = await config?.userAgentAppId?.();\n        const resolvedUserAgent = appId ? [...sections, [`app/${appId}`]] : [...sections];\n        return resolvedUserAgent;\n    };\n};\nexport const defaultUserAgent = createDefaultUserAgentProvider;\n","import { parseUrl } from \"@smithy/url-parser\";\nexport const toEndpointV1 = (endpoint) => {\n    if (typeof endpoint === \"object\") {\n        if (\"url\" in endpoint) {\n            return parseUrl(endpoint.url);\n        }\n        return endpoint;\n    }\n    return parseUrl(endpoint);\n};\n","export const deref = (schemaRef) => {\n    if (typeof schemaRef === \"function\") {\n        return schemaRef();\n    }\n    return schemaRef;\n};\n","export class TypeRegistry {\n    constructor(namespace, schemas = new Map()) {\n        this.namespace = namespace;\n        this.schemas = schemas;\n    }\n    static for(namespace) {\n        if (!TypeRegistry.registries.has(namespace)) {\n            TypeRegistry.registries.set(namespace, new TypeRegistry(namespace));\n        }\n        return TypeRegistry.registries.get(namespace);\n    }\n    register(shapeId, schema) {\n        const qualifiedName = this.normalizeShapeId(shapeId);\n        const registry = TypeRegistry.for(this.getNamespace(shapeId));\n        registry.schemas.set(qualifiedName, schema);\n    }\n    getSchema(shapeId) {\n        const id = this.normalizeShapeId(shapeId);\n        if (!this.schemas.has(id)) {\n            throw new Error(`@smithy/core/schema - schema not found for ${id}`);\n        }\n        return this.schemas.get(id);\n    }\n    getBaseException() {\n        for (const [id, schema] of this.schemas.entries()) {\n            if (id.startsWith(\"smithy.ts.sdk.synthetic.\") && id.endsWith(\"ServiceException\")) {\n                return schema;\n            }\n        }\n        return undefined;\n    }\n    find(predicate) {\n        return [...this.schemas.values()].find(predicate);\n    }\n    destroy() {\n        TypeRegistry.registries.delete(this.namespace);\n        this.schemas.clear();\n    }\n    normalizeShapeId(shapeId) {\n        if (shapeId.includes(\"#\")) {\n            return shapeId;\n        }\n        return this.namespace + \"#\" + shapeId;\n    }\n    getNamespace(shapeId) {\n        return this.normalizeShapeId(shapeId).split(\"#\")[0];\n    }\n}\nTypeRegistry.registries = new Map();\n","import { TypeRegistry } from \"../TypeRegistry\";\nexport class Schema {\n    static assign(instance, values) {\n        const schema = Object.assign(instance, values);\n        TypeRegistry.for(schema.namespace).register(schema.name, schema);\n        return schema;\n    }\n    static [Symbol.hasInstance](lhs) {\n        const isPrototype = this.prototype.isPrototypeOf(lhs);\n        if (!isPrototype && typeof lhs === \"object\" && lhs !== null) {\n            const list = lhs;\n            return list.symbol === this.symbol;\n        }\n        return isPrototype;\n    }\n    getName() {\n        return this.namespace + \"#\" + this.name;\n    }\n}\n","import { Schema } from \"./Schema\";\nexport class ListSchema extends Schema {\n    constructor() {\n        super(...arguments);\n        this.symbol = ListSchema.symbol;\n    }\n}\nListSchema.symbol = Symbol.for(\"@smithy/lis\");\nexport const list = (namespace, name, traits, valueSchema) => Schema.assign(new ListSchema(), {\n    name,\n    namespace,\n    traits,\n    valueSchema,\n});\n","import { Schema } from \"./Schema\";\nexport class MapSchema extends Schema {\n    constructor() {\n        super(...arguments);\n        this.symbol = MapSchema.symbol;\n    }\n}\nMapSchema.symbol = Symbol.for(\"@smithy/map\");\nexport const map = (namespace, name, traits, keySchema, valueSchema) => Schema.assign(new MapSchema(), {\n    name,\n    namespace,\n    traits,\n    keySchema,\n    valueSchema,\n});\n","export const SCHEMA = {\n    BLOB: 21,\n    STREAMING_BLOB: 42,\n    BOOLEAN: 2,\n    STRING: 0,\n    NUMERIC: 1,\n    BIG_INTEGER: 17,\n    BIG_DECIMAL: 19,\n    DOCUMENT: 15,\n    TIMESTAMP_DEFAULT: 4,\n    TIMESTAMP_DATE_TIME: 5,\n    TIMESTAMP_HTTP_DATE: 6,\n    TIMESTAMP_EPOCH_SECONDS: 7,\n    LIST_MODIFIER: 64,\n    MAP_MODIFIER: 128,\n};\n","import { Schema } from \"./Schema\";\nexport class SimpleSchema extends Schema {\n    constructor() {\n        super(...arguments);\n        this.symbol = SimpleSchema.symbol;\n    }\n}\nSimpleSchema.symbol = Symbol.for(\"@smithy/sim\");\nexport const sim = (namespace, name, schemaRef, traits) => Schema.assign(new SimpleSchema(), {\n    name,\n    namespace,\n    traits,\n    schemaRef,\n});\n","import { Schema } from \"./Schema\";\nexport class StructureSchema extends Schema {\n    constructor() {\n        super(...arguments);\n        this.symbol = StructureSchema.symbol;\n    }\n}\nStructureSchema.symbol = Symbol.for(\"@smithy/str\");\nexport const struct = (namespace, name, traits, memberNames, memberList) => Schema.assign(new StructureSchema(), {\n    name,\n    namespace,\n    traits,\n    memberNames,\n    memberList,\n});\n","import { deref } from \"../deref\";\nimport { ListSchema } from \"./ListSchema\";\nimport { MapSchema } from \"./MapSchema\";\nimport { Schema } from \"./Schema\";\nimport { SCHEMA } from \"./sentinels\";\nimport { SimpleSchema } from \"./SimpleSchema\";\nimport { StructureSchema } from \"./StructureSchema\";\nexport class NormalizedSchema {\n    constructor(ref, memberName) {\n        this.ref = ref;\n        this.memberName = memberName;\n        this.symbol = NormalizedSchema.symbol;\n        const traitStack = [];\n        let _ref = ref;\n        let schema = ref;\n        this._isMemberSchema = false;\n        while (Array.isArray(_ref)) {\n            traitStack.push(_ref[1]);\n            _ref = _ref[0];\n            schema = deref(_ref);\n            this._isMemberSchema = true;\n        }\n        if (traitStack.length > 0) {\n            this.memberTraits = {};\n            for (let i = traitStack.length - 1; i >= 0; --i) {\n                const traitSet = traitStack[i];\n                Object.assign(this.memberTraits, NormalizedSchema.translateTraits(traitSet));\n            }\n        }\n        else {\n            this.memberTraits = 0;\n        }\n        if (schema instanceof NormalizedSchema) {\n            const computedMemberTraits = this.memberTraits;\n            Object.assign(this, schema);\n            this.memberTraits = Object.assign({}, computedMemberTraits, schema.getMemberTraits(), this.getMemberTraits());\n            this.normalizedTraits = void 0;\n            this.memberName = memberName ?? schema.memberName;\n            return;\n        }\n        this.schema = deref(schema);\n        if (this.schema && typeof this.schema === \"object\") {\n            this.traits = this.schema?.traits ?? {};\n        }\n        else {\n            this.traits = 0;\n        }\n        this.name =\n            (this.schema instanceof Schema ? this.schema.getName?.() : void 0) ?? this.memberName ?? this.getSchemaName();\n        if (this._isMemberSchema && !memberName) {\n            throw new Error(`@smithy/core/schema - NormalizedSchema member init ${this.getName(true)} missing member name.`);\n        }\n    }\n    static [Symbol.hasInstance](lhs) {\n        return Schema[Symbol.hasInstance].bind(this)(lhs);\n    }\n    static of(ref) {\n        if (ref instanceof NormalizedSchema) {\n            return ref;\n        }\n        if (Array.isArray(ref)) {\n            const [ns, traits] = ref;\n            if (ns instanceof NormalizedSchema) {\n                Object.assign(ns.getMergedTraits(), NormalizedSchema.translateTraits(traits));\n                return ns;\n            }\n            throw new Error(`@smithy/core/schema - may not init unwrapped member schema=${JSON.stringify(ref, null, 2)}.`);\n        }\n        return new NormalizedSchema(ref);\n    }\n    static translateTraits(indicator) {\n        if (typeof indicator === \"object\") {\n            return indicator;\n        }\n        indicator = indicator | 0;\n        const traits = {};\n        let i = 0;\n        for (const trait of [\n            \"httpLabel\",\n            \"idempotent\",\n            \"idempotencyToken\",\n            \"sensitive\",\n            \"httpPayload\",\n            \"httpResponseCode\",\n            \"httpQueryParams\",\n        ]) {\n            if (((indicator >> i++) & 1) === 1) {\n                traits[trait] = 1;\n            }\n        }\n        return traits;\n    }\n    getSchema() {\n        if (this.schema instanceof NormalizedSchema) {\n            Object.assign(this, { schema: this.schema.getSchema() });\n            return this.schema;\n        }\n        if (this.schema instanceof SimpleSchema) {\n            return deref(this.schema.schemaRef);\n        }\n        return deref(this.schema);\n    }\n    getName(withNamespace = false) {\n        if (!withNamespace) {\n            if (this.name && this.name.includes(\"#\")) {\n                return this.name.split(\"#\")[1];\n            }\n        }\n        return this.name || undefined;\n    }\n    getMemberName() {\n        if (!this.isMemberSchema()) {\n            throw new Error(`@smithy/core/schema - non-member schema: ${this.getName(true)}`);\n        }\n        return this.memberName;\n    }\n    isMemberSchema() {\n        return this._isMemberSchema;\n    }\n    isUnitSchema() {\n        return this.getSchema() === \"unit\";\n    }\n    isListSchema() {\n        const inner = this.getSchema();\n        if (typeof inner === \"number\") {\n            return inner >= SCHEMA.LIST_MODIFIER && inner < SCHEMA.MAP_MODIFIER;\n        }\n        return inner instanceof ListSchema;\n    }\n    isMapSchema() {\n        const inner = this.getSchema();\n        if (typeof inner === \"number\") {\n            return inner >= SCHEMA.MAP_MODIFIER && inner <= 255;\n        }\n        return inner instanceof MapSchema;\n    }\n    isStructSchema() {\n        const inner = this.getSchema();\n        return (inner !== null && typeof inner === \"object\" && \"members\" in inner) || inner instanceof StructureSchema;\n    }\n    isBlobSchema() {\n        return this.getSchema() === SCHEMA.BLOB || this.getSchema() === SCHEMA.STREAMING_BLOB;\n    }\n    isTimestampSchema() {\n        const schema = this.getSchema();\n        return typeof schema === \"number\" && schema >= SCHEMA.TIMESTAMP_DEFAULT && schema <= SCHEMA.TIMESTAMP_EPOCH_SECONDS;\n    }\n    isDocumentSchema() {\n        return this.getSchema() === SCHEMA.DOCUMENT;\n    }\n    isStringSchema() {\n        return this.getSchema() === SCHEMA.STRING;\n    }\n    isBooleanSchema() {\n        return this.getSchema() === SCHEMA.BOOLEAN;\n    }\n    isNumericSchema() {\n        return this.getSchema() === SCHEMA.NUMERIC;\n    }\n    isBigIntegerSchema() {\n        return this.getSchema() === SCHEMA.BIG_INTEGER;\n    }\n    isBigDecimalSchema() {\n        return this.getSchema() === SCHEMA.BIG_DECIMAL;\n    }\n    isStreaming() {\n        const streaming = !!this.getMergedTraits().streaming;\n        if (streaming) {\n            return true;\n        }\n        return this.getSchema() === SCHEMA.STREAMING_BLOB;\n    }\n    isIdempotencyToken() {\n        if (this.normalizedTraits) {\n            return !!this.normalizedTraits.idempotencyToken;\n        }\n        for (const traits of [this.traits, this.memberTraits]) {\n            if (typeof traits === \"number\") {\n                if ((traits & 0b0100) === 0b0100) {\n                    return true;\n                }\n            }\n            else if (typeof traits === \"object\") {\n                if (!!traits.idempotencyToken) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    getMergedTraits() {\n        return (this.normalizedTraits ??\n            (this.normalizedTraits = {\n                ...this.getOwnTraits(),\n                ...this.getMemberTraits(),\n            }));\n    }\n    getMemberTraits() {\n        return NormalizedSchema.translateTraits(this.memberTraits);\n    }\n    getOwnTraits() {\n        return NormalizedSchema.translateTraits(this.traits);\n    }\n    getKeySchema() {\n        if (this.isDocumentSchema()) {\n            return this.memberFrom([SCHEMA.DOCUMENT, 0], \"key\");\n        }\n        if (!this.isMapSchema()) {\n            throw new Error(`@smithy/core/schema - cannot get key for non-map: ${this.getName(true)}`);\n        }\n        const schema = this.getSchema();\n        if (typeof schema === \"number\") {\n            return this.memberFrom([63 & schema, 0], \"key\");\n        }\n        return this.memberFrom([schema.keySchema, 0], \"key\");\n    }\n    getValueSchema() {\n        const schema = this.getSchema();\n        if (typeof schema === \"number\") {\n            if (this.isMapSchema()) {\n                return this.memberFrom([63 & schema, 0], \"value\");\n            }\n            else if (this.isListSchema()) {\n                return this.memberFrom([63 & schema, 0], \"member\");\n            }\n        }\n        if (schema && typeof schema === \"object\") {\n            if (this.isStructSchema()) {\n                throw new Error(`may not getValueSchema() on structure ${this.getName(true)}`);\n            }\n            const collection = schema;\n            if (\"valueSchema\" in collection) {\n                if (this.isMapSchema()) {\n                    return this.memberFrom([collection.valueSchema, 0], \"value\");\n                }\n                else if (this.isListSchema()) {\n                    return this.memberFrom([collection.valueSchema, 0], \"member\");\n                }\n            }\n        }\n        if (this.isDocumentSchema()) {\n            return this.memberFrom([SCHEMA.DOCUMENT, 0], \"value\");\n        }\n        throw new Error(`@smithy/core/schema - ${this.getName(true)} has no value member.`);\n    }\n    hasMemberSchema(member) {\n        if (this.isStructSchema()) {\n            const struct = this.getSchema();\n            return struct.memberNames.includes(member);\n        }\n        return false;\n    }\n    getMemberSchema(member) {\n        if (this.isStructSchema()) {\n            const struct = this.getSchema();\n            if (!struct.memberNames.includes(member)) {\n                throw new Error(`@smithy/core/schema - ${this.getName(true)} has no member=${member}.`);\n            }\n            const i = struct.memberNames.indexOf(member);\n            const memberSchema = struct.memberList[i];\n            return this.memberFrom(Array.isArray(memberSchema) ? memberSchema : [memberSchema, 0], member);\n        }\n        if (this.isDocumentSchema()) {\n            return this.memberFrom([SCHEMA.DOCUMENT, 0], member);\n        }\n        throw new Error(`@smithy/core/schema - ${this.getName(true)} has no members.`);\n    }\n    getMemberSchemas() {\n        const buffer = {};\n        try {\n            for (const [k, v] of this.structIterator()) {\n                buffer[k] = v;\n            }\n        }\n        catch (ignored) { }\n        return buffer;\n    }\n    getEventStreamMember() {\n        if (this.isStructSchema()) {\n            for (const [memberName, memberSchema] of this.structIterator()) {\n                if (memberSchema.isStreaming() && memberSchema.isStructSchema()) {\n                    return memberName;\n                }\n            }\n        }\n        return \"\";\n    }\n    *structIterator() {\n        if (this.isUnitSchema()) {\n            return;\n        }\n        if (!this.isStructSchema()) {\n            throw new Error(\"@smithy/core/schema - cannot iterate non-struct schema.\");\n        }\n        const struct = this.getSchema();\n        for (let i = 0; i < struct.memberNames.length; ++i) {\n            yield [struct.memberNames[i], this.memberFrom([struct.memberList[i], 0], struct.memberNames[i])];\n        }\n    }\n    memberFrom(memberSchema, memberName) {\n        if (memberSchema instanceof NormalizedSchema) {\n            return Object.assign(memberSchema, {\n                memberName,\n                _isMemberSchema: true,\n            });\n        }\n        return new NormalizedSchema(memberSchema, memberName);\n    }\n    getSchemaName() {\n        const schema = this.getSchema();\n        if (typeof schema === \"number\") {\n            const _schema = 63 & schema;\n            const container = 192 & schema;\n            const type = Object.entries(SCHEMA).find(([, value]) => {\n                return value === _schema;\n            })?.[0] ?? \"Unknown\";\n            switch (container) {\n                case SCHEMA.MAP_MODIFIER:\n                    return `${type}Map`;\n                case SCHEMA.LIST_MODIFIER:\n                    return `${type}List`;\n                case 0:\n                    return type;\n            }\n        }\n        return \"Unknown\";\n    }\n}\nNormalizedSchema.symbol = Symbol.for(\"@smithy/nor\");\n","import { NormalizedSchema } from \"@smithy/core/schema\";\nconst SENSITIVE_STRING = \"***SensitiveInformation***\";\nexport function schemaLogFilter(schema, data) {\n    if (data == null) {\n        return data;\n    }\n    const ns = NormalizedSchema.of(schema);\n    if (ns.getMergedTraits().sensitive) {\n        return SENSITIVE_STRING;\n    }\n    if (ns.isListSchema()) {\n        const isSensitive = !!ns.getValueSchema().getMergedTraits().sensitive;\n        if (isSensitive) {\n            return SENSITIVE_STRING;\n        }\n    }\n    else if (ns.isMapSchema()) {\n        const isSensitive = !!ns.getKeySchema().getMergedTraits().sensitive || !!ns.getValueSchema().getMergedTraits().sensitive;\n        if (isSensitive) {\n            return SENSITIVE_STRING;\n        }\n    }\n    else if (ns.isStructSchema() && typeof data === \"object\") {\n        const object = data;\n        const newObject = {};\n        for (const [member, memberNs] of ns.structIterator()) {\n            if (object[member] != null) {\n                newObject[member] = schemaLogFilter(memberNs, object[member]);\n            }\n        }\n        return newObject;\n    }\n    return data;\n}\n","import { constructStack } from \"@smithy/middleware-stack\";\nimport { SMITHY_CONTEXT_KEY } from \"@smithy/types\";\nimport { schemaLogFilter } from \"./schemaLogFilter\";\nexport class Command {\n    constructor() {\n        this.middlewareStack = constructStack();\n    }\n    static classBuilder() {\n        return new ClassBuilder();\n    }\n    resolveMiddlewareWithContext(clientStack, configuration, options, { middlewareFn, clientName, commandName, inputFilterSensitiveLog, outputFilterSensitiveLog, smithyContext, additionalContext, CommandCtor, }) {\n        for (const mw of middlewareFn.bind(this)(CommandCtor, clientStack, configuration, options)) {\n            this.middlewareStack.use(mw);\n        }\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog,\n            outputFilterSensitiveLog,\n            [SMITHY_CONTEXT_KEY]: {\n                commandInstance: this,\n                ...smithyContext,\n            },\n            ...additionalContext,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n}\nclass ClassBuilder {\n    constructor() {\n        this._init = () => { };\n        this._ep = {};\n        this._middlewareFn = () => [];\n        this._commandName = \"\";\n        this._clientName = \"\";\n        this._additionalContext = {};\n        this._smithyContext = {};\n        this._inputFilterSensitiveLog = undefined;\n        this._outputFilterSensitiveLog = undefined;\n        this._serializer = null;\n        this._deserializer = null;\n    }\n    init(cb) {\n        this._init = cb;\n    }\n    ep(endpointParameterInstructions) {\n        this._ep = endpointParameterInstructions;\n        return this;\n    }\n    m(middlewareSupplier) {\n        this._middlewareFn = middlewareSupplier;\n        return this;\n    }\n    s(service, operation, smithyContext = {}) {\n        this._smithyContext = {\n            service,\n            operation,\n            ...smithyContext,\n        };\n        return this;\n    }\n    c(additionalContext = {}) {\n        this._additionalContext = additionalContext;\n        return this;\n    }\n    n(clientName, commandName) {\n        this._clientName = clientName;\n        this._commandName = commandName;\n        return this;\n    }\n    f(inputFilter = (_) => _, outputFilter = (_) => _) {\n        this._inputFilterSensitiveLog = inputFilter;\n        this._outputFilterSensitiveLog = outputFilter;\n        return this;\n    }\n    ser(serializer) {\n        this._serializer = serializer;\n        return this;\n    }\n    de(deserializer) {\n        this._deserializer = deserializer;\n        return this;\n    }\n    sc(operation) {\n        this._operationSchema = operation;\n        this._smithyContext.operationSchema = operation;\n        return this;\n    }\n    build() {\n        const closure = this;\n        let CommandRef;\n        return (CommandRef = class extends Command {\n            static getEndpointParameterInstructions() {\n                return closure._ep;\n            }\n            constructor(...[input]) {\n                super();\n                this.serialize = closure._serializer;\n                this.deserialize = closure._deserializer;\n                this.input = input ?? {};\n                closure._init(this);\n                this.schema = closure._operationSchema;\n            }\n            resolveMiddleware(stack, configuration, options) {\n                return this.resolveMiddlewareWithContext(stack, configuration, options, {\n                    CommandCtor: CommandRef,\n                    middlewareFn: closure._middlewareFn,\n                    clientName: closure._clientName,\n                    commandName: closure._commandName,\n                    inputFilterSensitiveLog: closure._inputFilterSensitiveLog ??\n                        (closure._operationSchema ? schemaLogFilter.bind(null, closure._operationSchema.input) : (_) => _),\n                    outputFilterSensitiveLog: closure._outputFilterSensitiveLog ??\n                        (closure._operationSchema ? schemaLogFilter.bind(null, closure._operationSchema.output) : (_) => _),\n                    smithyContext: closure._smithyContext,\n                    additionalContext: closure._additionalContext,\n                });\n            }\n        });\n    }\n}\n","module.exports = require(\"http\");","import { CONFIG_PREFIX_SEPARATOR } from \"@smithy/shared-ini-file-loader\";\nconst ENV_ENDPOINT_URL = \"AWS_ENDPOINT_URL\";\nconst CONFIG_ENDPOINT_URL = \"endpoint_url\";\nexport const getEndpointUrlConfig = (serviceId) => ({\n    environmentVariableSelector: (env) => {\n        const serviceSuffixParts = serviceId.split(\" \").map((w) => w.toUpperCase());\n        const serviceEndpointUrl = env[[ENV_ENDPOINT_URL, ...serviceSuffixParts].join(\"_\")];\n        if (serviceEndpointUrl)\n            return serviceEndpointUrl;\n        const endpointUrl = env[ENV_ENDPOINT_URL];\n        if (endpointUrl)\n            return endpointUrl;\n        return undefined;\n    },\n    configFileSelector: (profile, config) => {\n        if (config && profile.services) {\n            const servicesSection = config[[\"services\", profile.services].join(CONFIG_PREFIX_SEPARATOR)];\n            if (servicesSection) {\n                const servicePrefixParts = serviceId.split(\" \").map((w) => w.toLowerCase());\n                const endpointUrl = servicesSection[[servicePrefixParts.join(\"_\"), CONFIG_ENDPOINT_URL].join(CONFIG_PREFIX_SEPARATOR)];\n                if (endpointUrl)\n                    return endpointUrl;\n            }\n        }\n        const endpointUrl = profile[CONFIG_ENDPOINT_URL];\n        if (endpointUrl)\n            return endpointUrl;\n        return undefined;\n    },\n    default: undefined,\n});\n","import { loadConfig } from \"@smithy/node-config-provider\";\nimport { getEndpointUrlConfig } from \"./getEndpointUrlConfig\";\nexport const getEndpointFromConfig = async (serviceId) => loadConfig(getEndpointUrlConfig(serviceId ?? \"\"))();\n","const VALID_HOST_LABEL_REGEX = new RegExp(`^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$`);\nexport const isValidHostLabel = (value, allowSubDomains = false) => {\n    if (!allowSubDomains) {\n        return VALID_HOST_LABEL_REGEX.test(value);\n    }\n    const labels = value.split(\".\");\n    for (const label of labels) {\n        if (!isValidHostLabel(label)) {\n            return false;\n        }\n    }\n    return true;\n};\n","export const normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n","module.exports = require(\"util\");","import { extendedEncodeURIComponent } from \"./extended-encode-uri-component\";\nexport const resolvedPath = (resolvedPath, input, memberName, labelValueProvider, uriLabel, isGreedyLabel) => {\n    if (input != null && input[memberName] !== undefined) {\n        const labelValue = labelValueProvider();\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: \" + memberName + \".\");\n        }\n        resolvedPath = resolvedPath.replace(uriLabel, isGreedyLabel\n            ? labelValue\n                .split(\"/\")\n                .map((segment) => extendedEncodeURIComponent(segment))\n                .join(\"/\")\n            : extendedEncodeURIComponent(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: \" + memberName + \".\");\n    }\n    return resolvedPath;\n};\n","import { HttpRequest } from \"@smithy/protocol-http\";\nimport { resolvedPath } from \"./resolve-path\";\nexport function requestBuilder(input, context) {\n    return new RequestBuilder(input, context);\n}\nexport class RequestBuilder {\n    constructor(input, context) {\n        this.input = input;\n        this.context = context;\n        this.query = {};\n        this.method = \"\";\n        this.headers = {};\n        this.path = \"\";\n        this.body = null;\n        this.hostname = \"\";\n        this.resolvePathStack = [];\n    }\n    async build() {\n        const { hostname, protocol = \"https\", port, path: basePath } = await this.context.endpoint();\n        this.path = basePath;\n        for (const resolvePath of this.resolvePathStack) {\n            resolvePath(this.path);\n        }\n        return new HttpRequest({\n            protocol,\n            hostname: this.hostname || hostname,\n            port,\n            method: this.method,\n            path: this.path,\n            query: this.query,\n            body: this.body,\n            headers: this.headers,\n        });\n    }\n    hn(hostname) {\n        this.hostname = hostname;\n        return this;\n    }\n    bp(uriLabel) {\n        this.resolvePathStack.push((basePath) => {\n            this.path = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + uriLabel;\n        });\n        return this;\n    }\n    p(memberName, labelValueProvider, uriLabel, isGreedyLabel) {\n        this.resolvePathStack.push((path) => {\n            this.path = resolvedPath(path, this.input, memberName, labelValueProvider, uriLabel, isGreedyLabel);\n        });\n        return this;\n    }\n    h(headers) {\n        this.headers = headers;\n        return this;\n    }\n    q(query) {\n        this.query = query;\n        return this;\n    }\n    b(body) {\n        this.body = body;\n        return this;\n    }\n    m(method) {\n        this.method = method;\n        return this;\n    }\n}\n","import { fromArrayBuffer } from \"@smithy/util-buffer-from\";\nimport { fromUtf8 } from \"@smithy/util-utf8\";\nexport const toBase64 = (_input) => {\n    let input;\n    if (typeof _input === \"string\") {\n        input = fromUtf8(_input);\n    }\n    else {\n        input = _input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.\");\n    }\n    return fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n};\n","module.exports = require(\"fs\");","import { DEFAULT_UA_APP_ID } from \"@aws-sdk/middleware-user-agent\";\nexport const UA_APP_ID_ENV_NAME = \"AWS_SDK_UA_APP_ID\";\nexport const UA_APP_ID_INI_NAME = \"sdk_ua_app_id\";\nconst UA_APP_ID_INI_NAME_DEPRECATED = \"sdk-ua-app-id\";\nexport const NODE_APP_ID_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[UA_APP_ID_ENV_NAME],\n    configFileSelector: (profile) => profile[UA_APP_ID_INI_NAME] ?? profile[UA_APP_ID_INI_NAME_DEPRECATED],\n    default: DEFAULT_UA_APP_ID,\n};\n","export var AlgorithmId;\n(function (AlgorithmId) {\n    AlgorithmId[\"MD5\"] = \"md5\";\n    AlgorithmId[\"CRC32\"] = \"crc32\";\n    AlgorithmId[\"CRC32C\"] = \"crc32c\";\n    AlgorithmId[\"SHA1\"] = \"sha1\";\n    AlgorithmId[\"SHA256\"] = \"sha256\";\n})(AlgorithmId || (AlgorithmId = {}));\nexport const getChecksumConfiguration = (runtimeConfig) => {\n    const checksumAlgorithms = [];\n    if (runtimeConfig.sha256 !== undefined) {\n        checksumAlgorithms.push({\n            algorithmId: () => AlgorithmId.SHA256,\n            checksumConstructor: () => runtimeConfig.sha256,\n        });\n    }\n    if (runtimeConfig.md5 != undefined) {\n        checksumAlgorithms.push({\n            algorithmId: () => AlgorithmId.MD5,\n            checksumConstructor: () => runtimeConfig.md5,\n        });\n    }\n    return {\n        addChecksumAlgorithm(algo) {\n            checksumAlgorithms.push(algo);\n        },\n        checksumAlgorithms() {\n            return checksumAlgorithms;\n        },\n    };\n};\nexport const resolveChecksumRuntimeConfig = (clientConfig) => {\n    const runtimeConfig = {};\n    clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\n        runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\n    });\n    return runtimeConfig;\n};\n","import { AlgorithmId } from \"@smithy/types\";\nexport { AlgorithmId };\nexport const getChecksumConfiguration = (runtimeConfig) => {\n    const checksumAlgorithms = [];\n    for (const id in AlgorithmId) {\n        const algorithmId = AlgorithmId[id];\n        if (runtimeConfig[algorithmId] === undefined) {\n            continue;\n        }\n        checksumAlgorithms.push({\n            algorithmId: () => algorithmId,\n            checksumConstructor: () => runtimeConfig[algorithmId],\n        });\n    }\n    return {\n        addChecksumAlgorithm(algo) {\n            checksumAlgorithms.push(algo);\n        },\n        checksumAlgorithms() {\n            return checksumAlgorithms;\n        },\n    };\n};\nexport const resolveChecksumRuntimeConfig = (clientConfig) => {\n    const runtimeConfig = {};\n    clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\n        runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\n    });\n    return runtimeConfig;\n};\n","export const getRetryConfiguration = (runtimeConfig) => {\n    return {\n        setRetryStrategy(retryStrategy) {\n            runtimeConfig.retryStrategy = retryStrategy;\n        },\n        retryStrategy() {\n            return runtimeConfig.retryStrategy;\n        },\n    };\n};\nexport const resolveRetryRuntimeConfig = (retryStrategyConfiguration) => {\n    const runtimeConfig = {};\n    runtimeConfig.retryStrategy = retryStrategyConfiguration.retryStrategy();\n    return runtimeConfig;\n};\n","import { getChecksumConfiguration, resolveChecksumRuntimeConfig } from \"./checksum\";\nimport { getRetryConfiguration, resolveRetryRuntimeConfig } from \"./retry\";\nexport const getDefaultExtensionConfiguration = (runtimeConfig) => {\n    return Object.assign(getChecksumConfiguration(runtimeConfig), getRetryConfiguration(runtimeConfig));\n};\nexport const getDefaultClientConfiguration = getDefaultExtensionConfiguration;\nexport const resolveDefaultRuntimeConfig = (config) => {\n    return Object.assign(resolveChecksumRuntimeConfig(config), resolveRetryRuntimeConfig(config));\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"loaded\", otherwise not loaded yet\nvar installedChunks = {\n\t650: 1\n};\n\n// no on chunks loaded\n\nvar installChunk = (chunk) => {\n\tvar moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tfor(var i = 0; i < chunkIds.length; i++)\n\t\tinstalledChunks[chunkIds[i]] = 1;\n\n};\n\n// require() chunk loading for javascript\n__webpack_require__.f.require = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\tvar installedChunk = require(\"../\" + __webpack_require__.u(chunkId));\n\t\t\tif (!installedChunks[chunkId]) {\n\t\t\t\tinstallChunk(installedChunk);\n\t\t\t}\n\t\t} else installedChunks[chunkId] = 1;\n\t}\n};\n\n// no external install chunk\n\n// no HMR\n\n// no HMR manifest","export const resolveEventStreamSerdeConfig = (input) => Object.assign(input, {\n    eventStreamMarshaller: input.eventStreamSerdeProvider(input),\n});\n","import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nexport const defaultLambdaHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"lambda\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nexport const defaultLambdaHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveAwsSdkSigV4Config(config);\n    return Object.assign(config_0, {\n        authSchemePreference: normalizeProvider(config.authSchemePreference ?? []),\n    });\n};\n","export const resolveClientEndpointParameters = (options) => {\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"lambda\",\n    });\n};\nexport const commonParams = {\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n","import { chain, CredentialsProviderError } from \"@smithy/property-provider\";\nexport const ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nexport const remoteProvider = async (init) => {\n    const { ENV_CMDS_FULL_URI, ENV_CMDS_RELATIVE_URI, fromContainerMetadata, fromInstanceMetadata } = await import(\"@smithy/credential-provider-imds\");\n    if (process.env[ENV_CMDS_RELATIVE_URI] || process.env[ENV_CMDS_FULL_URI]) {\n        init.logger?.debug(\"@aws-sdk/credential-provider-node - remoteProvider::fromHttp/fromContainerMetadata\");\n        const { fromHttp } = await import(\"@aws-sdk/credential-provider-http\");\n        return chain(fromHttp(init), fromContainerMetadata(init));\n    }\n    if (process.env[ENV_IMDS_DISABLED] && process.env[ENV_IMDS_DISABLED] !== \"false\") {\n        return async () => {\n            throw new CredentialsProviderError(\"EC2 Instance Metadata Service access disabled\", { logger: init.logger });\n        };\n    }\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - remoteProvider::fromInstanceMetadata\");\n    return fromInstanceMetadata(init);\n};\n","import { ENV_KEY, ENV_SECRET, fromEnv } from \"@aws-sdk/credential-provider-env\";\nimport { chain, CredentialsProviderError, memoize } from \"@smithy/property-provider\";\nimport { ENV_PROFILE } from \"@smithy/shared-ini-file-loader\";\nimport { remoteProvider } from \"./remoteProvider\";\nlet multipleCredentialSourceWarningEmitted = false;\nexport const defaultProvider = (init = {}) => memoize(chain(async () => {\n    const profile = init.profile ?? process.env[ENV_PROFILE];\n    if (profile) {\n        const envStaticCredentialsAreSet = process.env[ENV_KEY] && process.env[ENV_SECRET];\n        if (envStaticCredentialsAreSet) {\n            if (!multipleCredentialSourceWarningEmitted) {\n                const warnFn = init.logger?.warn && init.logger?.constructor?.name !== \"NoOpLogger\"\n                    ? init.logger.warn.bind(init.logger)\n                    : console.warn;\n                warnFn(`@aws-sdk/credential-provider-node - defaultProvider::fromEnv WARNING:\n    Multiple credential sources detected: \n    Both AWS_PROFILE and the pair AWS_ACCESS_KEY_ID/AWS_SECRET_ACCESS_KEY static credentials are set.\n    This SDK will proceed with the AWS_PROFILE value.\n    \n    However, a future version may change this behavior to prefer the ENV static credentials.\n    Please ensure that your environment only sets either the AWS_PROFILE or the\n    AWS_ACCESS_KEY_ID/AWS_SECRET_ACCESS_KEY pair.\n`);\n                multipleCredentialSourceWarningEmitted = true;\n            }\n        }\n        throw new CredentialsProviderError(\"AWS_PROFILE is set, skipping fromEnv provider.\", {\n            logger: init.logger,\n            tryNextLink: true,\n        });\n    }\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromEnv\");\n    return fromEnv(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromSSO\");\n    const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoSession } = init;\n    if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName && !ssoSession) {\n        throw new CredentialsProviderError(\"Skipping SSO provider in default chain (inputs do not include SSO fields).\", { logger: init.logger });\n    }\n    const { fromSSO } = await import(\"@aws-sdk/credential-provider-sso\");\n    return fromSSO(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromIni\");\n    const { fromIni } = await import(\"@aws-sdk/credential-provider-ini\");\n    return fromIni(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromProcess\");\n    const { fromProcess } = await import(\"@aws-sdk/credential-provider-process\");\n    return fromProcess(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromTokenFile\");\n    const { fromTokenFile } = await import(\"@aws-sdk/credential-provider-web-identity\");\n    return fromTokenFile(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::remoteProvider\");\n    return (await remoteProvider(init))();\n}, async () => {\n    throw new CredentialsProviderError(\"Could not load credentials from any providers\", {\n        tryNextLink: false,\n        logger: init.logger,\n    });\n}), credentialsTreatedAsExpired, credentialsWillNeedRefresh);\nexport const credentialsWillNeedRefresh = (credentials) => credentials?.expiration !== undefined;\nexport const credentialsTreatedAsExpired = (credentials) => credentials?.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000;\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","import { isArrayBuffer } from \"@smithy/is-array-buffer\";\nimport { Buffer } from \"buffer\";\nexport const fromArrayBuffer = (input, offset = 0, length = input.byteLength - offset) => {\n    if (!isArrayBuffer(input)) {\n        throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n    }\n    return Buffer.from(input, offset, length);\n};\nexport const fromString = (input, encoding) => {\n    if (typeof input !== \"string\") {\n        throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n    }\n    return encoding ? Buffer.from(input, encoding) : Buffer.from(input);\n};\n","import { fromString } from \"@smithy/util-buffer-from\";\nexport const fromUtf8 = (input) => {\n    const buf = fromString(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n};\n","import { fromUtf8 } from \"./fromUtf8\";\nexport const toUint8Array = (data) => {\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n};\n","import { fromArrayBuffer } from \"@smithy/util-buffer-from\";\nexport const toUtf8 = (input) => {\n    if (typeof input === \"string\") {\n        return input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.\");\n    }\n    return fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\n};\n","export * from \"./fromUtf8\";\nexport * from \"./toUint8Array\";\nexport * from \"./toUtf8\";\n","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { fromUtf8 as fromUtf8Browser } from \"@smithy/util-utf8\";\n// Quick polyfill\nvar fromUtf8 = typeof Buffer !== \"undefined\" && Buffer.from\n    ? function (input) { return Buffer.from(input, \"utf8\"); }\n    : fromUtf8Browser;\nexport function convertToBuffer(data) {\n    // Already a Uint8, do nothing\n    if (data instanceof Uint8Array)\n        return data;\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\n//# sourceMappingURL=convertToBuffer.js.map","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isEmptyData(data) {\n    if (typeof data === \"string\") {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\n//# sourceMappingURL=isEmptyData.js.map","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function numToUint8(num) {\n    return new Uint8Array([\n        (num & 0xff000000) >> 24,\n        (num & 0x00ff0000) >> 16,\n        (num & 0x0000ff00) >> 8,\n        num & 0x000000ff,\n    ]);\n}\n//# sourceMappingURL=numToUint8.js.map","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// IE 11 does not support Array.from, so we do it manually\nexport function uint32ArrayFrom(a_lookUpTable) {\n    if (!Uint32Array.from) {\n        var return_array = new Uint32Array(a_lookUpTable.length);\n        var a_index = 0;\n        while (a_index < a_lookUpTable.length) {\n            return_array[a_index] = a_lookUpTable[a_index];\n            a_index += 1;\n        }\n        return return_array;\n    }\n    return Uint32Array.from(a_lookUpTable);\n}\n//# sourceMappingURL=uint32ArrayFrom.js.map","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport { convertToBuffer } from \"./convertToBuffer\";\nexport { isEmptyData } from \"./isEmptyData\";\nexport { numToUint8 } from \"./numToUint8\";\nexport { uint32ArrayFrom } from './uint32ArrayFrom';\n//# sourceMappingURL=index.js.map","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __awaiter, __generator } from \"tslib\";\nimport { convertToBuffer, isEmptyData, numToUint8 } from \"@aws-crypto/util\";\nimport { Crc32 } from \"./index\";\nvar AwsCrc32 = /** @class */ (function () {\n    function AwsCrc32() {\n        this.crc32 = new Crc32();\n    }\n    AwsCrc32.prototype.update = function (toHash) {\n        if (isEmptyData(toHash))\n            return;\n        this.crc32.update(convertToBuffer(toHash));\n    };\n    AwsCrc32.prototype.digest = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, numToUint8(this.crc32.digest())];\n            });\n        });\n    };\n    AwsCrc32.prototype.reset = function () {\n        this.crc32 = new Crc32();\n    };\n    return AwsCrc32;\n}());\nexport { AwsCrc32 };\n//# sourceMappingURL=aws_crc32.js.map","import { __values } from \"tslib\";\nimport { uint32ArrayFrom } from \"@aws-crypto/util\";\nexport function crc32(data) {\n    return new Crc32().update(data).digest();\n}\nvar Crc32 = /** @class */ (function () {\n    function Crc32() {\n        this.checksum = 0xffffffff;\n    }\n    Crc32.prototype.update = function (data) {\n        var e_1, _a;\n        try {\n            for (var data_1 = __values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {\n                var byte = data_1_1.value;\n                this.checksum =\n                    (this.checksum >>> 8) ^ lookupTable[(this.checksum ^ byte) & 0xff];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return this;\n    };\n    Crc32.prototype.digest = function () {\n        return (this.checksum ^ 0xffffffff) >>> 0;\n    };\n    return Crc32;\n}());\nexport { Crc32 };\n// prettier-ignore\nvar a_lookUpTable = [\n    0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA,\n    0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,\n    0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988,\n    0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91,\n    0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE,\n    0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,\n    0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC,\n    0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5,\n    0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172,\n    0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,\n    0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940,\n    0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59,\n    0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116,\n    0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,\n    0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,\n    0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,\n    0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A,\n    0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,\n    0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818,\n    0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,\n    0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E,\n    0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457,\n    0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C,\n    0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65,\n    0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2,\n    0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB,\n    0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0,\n    0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9,\n    0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086,\n    0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,\n    0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4,\n    0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD,\n    0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A,\n    0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683,\n    0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,\n    0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1,\n    0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE,\n    0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7,\n    0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC,\n    0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,\n    0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252,\n    0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B,\n    0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60,\n    0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79,\n    0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,\n    0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F,\n    0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04,\n    0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D,\n    0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A,\n    0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,\n    0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38,\n    0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21,\n    0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E,\n    0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777,\n    0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C,\n    0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45,\n    0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2,\n    0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB,\n    0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0,\n    0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,\n    0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6,\n    0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF,\n    0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94,\n    0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D,\n];\nvar lookupTable = uint32ArrayFrom(a_lookUpTable);\nexport { AwsCrc32 } from \"./aws_crc32\";\n//# sourceMappingURL=index.js.map","import { toHex } from \"@smithy/util-hex-encoding\";\nexport class Int64 {\n    constructor(bytes) {\n        this.bytes = bytes;\n        if (bytes.byteLength !== 8) {\n            throw new Error(\"Int64 buffers must be exactly 8 bytes\");\n        }\n    }\n    static fromNumber(number) {\n        if (number > 9223372036854776000 || number < -9223372036854776000) {\n            throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);\n        }\n        const bytes = new Uint8Array(8);\n        for (let i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {\n            bytes[i] = remaining;\n        }\n        if (number < 0) {\n            negate(bytes);\n        }\n        return new Int64(bytes);\n    }\n    valueOf() {\n        const bytes = this.bytes.slice(0);\n        const negative = bytes[0] & 0b10000000;\n        if (negative) {\n            negate(bytes);\n        }\n        return parseInt(toHex(bytes), 16) * (negative ? -1 : 1);\n    }\n    toString() {\n        return String(this.valueOf());\n    }\n}\nfunction negate(bytes) {\n    for (let i = 0; i < 8; i++) {\n        bytes[i] ^= 0xff;\n    }\n    for (let i = 7; i > -1; i--) {\n        bytes[i]++;\n        if (bytes[i] !== 0)\n            break;\n    }\n}\n","import { fromHex, toHex } from \"@smithy/util-hex-encoding\";\nimport { Int64 } from \"./Int64\";\nexport class HeaderMarshaller {\n    constructor(toUtf8, fromUtf8) {\n        this.toUtf8 = toUtf8;\n        this.fromUtf8 = fromUtf8;\n    }\n    format(headers) {\n        const chunks = [];\n        for (const headerName of Object.keys(headers)) {\n            const bytes = this.fromUtf8(headerName);\n            chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));\n        }\n        const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));\n        let position = 0;\n        for (const chunk of chunks) {\n            out.set(chunk, position);\n            position += chunk.byteLength;\n        }\n        return out;\n    }\n    formatHeaderValue(header) {\n        switch (header.type) {\n            case \"boolean\":\n                return Uint8Array.from([header.value ? 0 : 1]);\n            case \"byte\":\n                return Uint8Array.from([2, header.value]);\n            case \"short\":\n                const shortView = new DataView(new ArrayBuffer(3));\n                shortView.setUint8(0, 3);\n                shortView.setInt16(1, header.value, false);\n                return new Uint8Array(shortView.buffer);\n            case \"integer\":\n                const intView = new DataView(new ArrayBuffer(5));\n                intView.setUint8(0, 4);\n                intView.setInt32(1, header.value, false);\n                return new Uint8Array(intView.buffer);\n            case \"long\":\n                const longBytes = new Uint8Array(9);\n                longBytes[0] = 5;\n                longBytes.set(header.value.bytes, 1);\n                return longBytes;\n            case \"binary\":\n                const binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));\n                binView.setUint8(0, 6);\n                binView.setUint16(1, header.value.byteLength, false);\n                const binBytes = new Uint8Array(binView.buffer);\n                binBytes.set(header.value, 3);\n                return binBytes;\n            case \"string\":\n                const utf8Bytes = this.fromUtf8(header.value);\n                const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));\n                strView.setUint8(0, 7);\n                strView.setUint16(1, utf8Bytes.byteLength, false);\n                const strBytes = new Uint8Array(strView.buffer);\n                strBytes.set(utf8Bytes, 3);\n                return strBytes;\n            case \"timestamp\":\n                const tsBytes = new Uint8Array(9);\n                tsBytes[0] = 8;\n                tsBytes.set(Int64.fromNumber(header.value.valueOf()).bytes, 1);\n                return tsBytes;\n            case \"uuid\":\n                if (!UUID_PATTERN.test(header.value)) {\n                    throw new Error(`Invalid UUID received: ${header.value}`);\n                }\n                const uuidBytes = new Uint8Array(17);\n                uuidBytes[0] = 9;\n                uuidBytes.set(fromHex(header.value.replace(/\\-/g, \"\")), 1);\n                return uuidBytes;\n        }\n    }\n    parse(headers) {\n        const out = {};\n        let position = 0;\n        while (position < headers.byteLength) {\n            const nameLength = headers.getUint8(position++);\n            const name = this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, nameLength));\n            position += nameLength;\n            switch (headers.getUint8(position++)) {\n                case 0:\n                    out[name] = {\n                        type: BOOLEAN_TAG,\n                        value: true,\n                    };\n                    break;\n                case 1:\n                    out[name] = {\n                        type: BOOLEAN_TAG,\n                        value: false,\n                    };\n                    break;\n                case 2:\n                    out[name] = {\n                        type: BYTE_TAG,\n                        value: headers.getInt8(position++),\n                    };\n                    break;\n                case 3:\n                    out[name] = {\n                        type: SHORT_TAG,\n                        value: headers.getInt16(position, false),\n                    };\n                    position += 2;\n                    break;\n                case 4:\n                    out[name] = {\n                        type: INT_TAG,\n                        value: headers.getInt32(position, false),\n                    };\n                    position += 4;\n                    break;\n                case 5:\n                    out[name] = {\n                        type: LONG_TAG,\n                        value: new Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)),\n                    };\n                    position += 8;\n                    break;\n                case 6:\n                    const binaryLength = headers.getUint16(position, false);\n                    position += 2;\n                    out[name] = {\n                        type: BINARY_TAG,\n                        value: new Uint8Array(headers.buffer, headers.byteOffset + position, binaryLength),\n                    };\n                    position += binaryLength;\n                    break;\n                case 7:\n                    const stringLength = headers.getUint16(position, false);\n                    position += 2;\n                    out[name] = {\n                        type: STRING_TAG,\n                        value: this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, stringLength)),\n                    };\n                    position += stringLength;\n                    break;\n                case 8:\n                    out[name] = {\n                        type: TIMESTAMP_TAG,\n                        value: new Date(new Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)).valueOf()),\n                    };\n                    position += 8;\n                    break;\n                case 9:\n                    const uuidBytes = new Uint8Array(headers.buffer, headers.byteOffset + position, 16);\n                    position += 16;\n                    out[name] = {\n                        type: UUID_TAG,\n                        value: `${toHex(uuidBytes.subarray(0, 4))}-${toHex(uuidBytes.subarray(4, 6))}-${toHex(uuidBytes.subarray(6, 8))}-${toHex(uuidBytes.subarray(8, 10))}-${toHex(uuidBytes.subarray(10))}`,\n                    };\n                    break;\n                default:\n                    throw new Error(`Unrecognized header type tag`);\n            }\n        }\n        return out;\n    }\n}\nvar HEADER_VALUE_TYPE;\n(function (HEADER_VALUE_TYPE) {\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolTrue\"] = 0] = \"boolTrue\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolFalse\"] = 1] = \"boolFalse\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byte\"] = 2] = \"byte\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"short\"] = 3] = \"short\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"integer\"] = 4] = \"integer\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"long\"] = 5] = \"long\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byteArray\"] = 6] = \"byteArray\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"string\"] = 7] = \"string\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"timestamp\"] = 8] = \"timestamp\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"uuid\"] = 9] = \"uuid\";\n})(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));\nconst BOOLEAN_TAG = \"boolean\";\nconst BYTE_TAG = \"byte\";\nconst SHORT_TAG = \"short\";\nconst INT_TAG = \"integer\";\nconst LONG_TAG = \"long\";\nconst BINARY_TAG = \"binary\";\nconst STRING_TAG = \"string\";\nconst TIMESTAMP_TAG = \"timestamp\";\nconst UUID_TAG = \"uuid\";\nconst UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;\n","import { Crc32 } from \"@aws-crypto/crc32\";\nconst PRELUDE_MEMBER_LENGTH = 4;\nconst PRELUDE_LENGTH = PRELUDE_MEMBER_LENGTH * 2;\nconst CHECKSUM_LENGTH = 4;\nconst MINIMUM_MESSAGE_LENGTH = PRELUDE_LENGTH + CHECKSUM_LENGTH * 2;\nexport function splitMessage({ byteLength, byteOffset, buffer }) {\n    if (byteLength < MINIMUM_MESSAGE_LENGTH) {\n        throw new Error(\"Provided message too short to accommodate event stream message overhead\");\n    }\n    const view = new DataView(buffer, byteOffset, byteLength);\n    const messageLength = view.getUint32(0, false);\n    if (byteLength !== messageLength) {\n        throw new Error(\"Reported message length does not match received message length\");\n    }\n    const headerLength = view.getUint32(PRELUDE_MEMBER_LENGTH, false);\n    const expectedPreludeChecksum = view.getUint32(PRELUDE_LENGTH, false);\n    const expectedMessageChecksum = view.getUint32(byteLength - CHECKSUM_LENGTH, false);\n    const checksummer = new Crc32().update(new Uint8Array(buffer, byteOffset, PRELUDE_LENGTH));\n    if (expectedPreludeChecksum !== checksummer.digest()) {\n        throw new Error(`The prelude checksum specified in the message (${expectedPreludeChecksum}) does not match the calculated CRC32 checksum (${checksummer.digest()})`);\n    }\n    checksummer.update(new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH, byteLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH)));\n    if (expectedMessageChecksum !== checksummer.digest()) {\n        throw new Error(`The message checksum (${checksummer.digest()}) did not match the expected value of ${expectedMessageChecksum}`);\n    }\n    return {\n        headers: new DataView(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH, headerLength),\n        body: new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH + headerLength, messageLength - headerLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH + CHECKSUM_LENGTH)),\n    };\n}\n","import { Crc32 } from \"@aws-crypto/crc32\";\nimport { HeaderMarshaller } from \"./HeaderMarshaller\";\nimport { splitMessage } from \"./splitMessage\";\nexport class EventStreamCodec {\n    constructor(toUtf8, fromUtf8) {\n        this.headerMarshaller = new HeaderMarshaller(toUtf8, fromUtf8);\n        this.messageBuffer = [];\n        this.isEndOfStream = false;\n    }\n    feed(message) {\n        this.messageBuffer.push(this.decode(message));\n    }\n    endOfStream() {\n        this.isEndOfStream = true;\n    }\n    getMessage() {\n        const message = this.messageBuffer.pop();\n        const isEndOfStream = this.isEndOfStream;\n        return {\n            getMessage() {\n                return message;\n            },\n            isEndOfStream() {\n                return isEndOfStream;\n            },\n        };\n    }\n    getAvailableMessages() {\n        const messages = this.messageBuffer;\n        this.messageBuffer = [];\n        const isEndOfStream = this.isEndOfStream;\n        return {\n            getMessages() {\n                return messages;\n            },\n            isEndOfStream() {\n                return isEndOfStream;\n            },\n        };\n    }\n    encode({ headers: rawHeaders, body }) {\n        const headers = this.headerMarshaller.format(rawHeaders);\n        const length = headers.byteLength + body.byteLength + 16;\n        const out = new Uint8Array(length);\n        const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n        const checksum = new Crc32();\n        view.setUint32(0, length, false);\n        view.setUint32(4, headers.byteLength, false);\n        view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);\n        out.set(headers, 12);\n        out.set(body, headers.byteLength + 12);\n        view.setUint32(length - 4, checksum.update(out.subarray(8, length - 4)).digest(), false);\n        return out;\n    }\n    decode(message) {\n        const { headers, body } = splitMessage(message);\n        return { headers: this.headerMarshaller.parse(headers), body };\n    }\n    formatHeaders(rawHeaders) {\n        return this.headerMarshaller.format(rawHeaders);\n    }\n}\n","export class SmithyMessageDecoderStream {\n    constructor(options) {\n        this.options = options;\n    }\n    [Symbol.asyncIterator]() {\n        return this.asyncIterator();\n    }\n    async *asyncIterator() {\n        for await (const message of this.options.messageStream) {\n            const deserialized = await this.options.deserializer(message);\n            if (deserialized === undefined)\n                continue;\n            yield deserialized;\n        }\n    }\n}\n","export class MessageDecoderStream {\n    constructor(options) {\n        this.options = options;\n    }\n    [Symbol.asyncIterator]() {\n        return this.asyncIterator();\n    }\n    async *asyncIterator() {\n        for await (const bytes of this.options.inputStream) {\n            const decoded = this.options.decoder.decode(bytes);\n            yield decoded;\n        }\n    }\n}\n","export class MessageEncoderStream {\n    constructor(options) {\n        this.options = options;\n    }\n    [Symbol.asyncIterator]() {\n        return this.asyncIterator();\n    }\n    async *asyncIterator() {\n        for await (const msg of this.options.messageStream) {\n            const encoded = this.options.encoder.encode(msg);\n            yield encoded;\n        }\n        if (this.options.includeEndFrame) {\n            yield new Uint8Array(0);\n        }\n    }\n}\n","export class SmithyMessageEncoderStream {\n    constructor(options) {\n        this.options = options;\n    }\n    [Symbol.asyncIterator]() {\n        return this.asyncIterator();\n    }\n    async *asyncIterator() {\n        for await (const chunk of this.options.inputStream) {\n            const payloadBuf = this.options.serializer(chunk);\n            yield payloadBuf;\n        }\n    }\n}\n","export function getChunkedStream(source) {\n    let currentMessageTotalLength = 0;\n    let currentMessagePendingLength = 0;\n    let currentMessage = null;\n    let messageLengthBuffer = null;\n    const allocateMessage = (size) => {\n        if (typeof size !== \"number\") {\n            throw new Error(\"Attempted to allocate an event message where size was not a number: \" + size);\n        }\n        currentMessageTotalLength = size;\n        currentMessagePendingLength = 4;\n        currentMessage = new Uint8Array(size);\n        const currentMessageView = new DataView(currentMessage.buffer);\n        currentMessageView.setUint32(0, size, false);\n    };\n    const iterator = async function* () {\n        const sourceIterator = source[Symbol.asyncIterator]();\n        while (true) {\n            const { value, done } = await sourceIterator.next();\n            if (done) {\n                if (!currentMessageTotalLength) {\n                    return;\n                }\n                else if (currentMessageTotalLength === currentMessagePendingLength) {\n                    yield currentMessage;\n                }\n                else {\n                    throw new Error(\"Truncated event message received.\");\n                }\n                return;\n            }\n            const chunkLength = value.length;\n            let currentOffset = 0;\n            while (currentOffset < chunkLength) {\n                if (!currentMessage) {\n                    const bytesRemaining = chunkLength - currentOffset;\n                    if (!messageLengthBuffer) {\n                        messageLengthBuffer = new Uint8Array(4);\n                    }\n                    const numBytesForTotal = Math.min(4 - currentMessagePendingLength, bytesRemaining);\n                    messageLengthBuffer.set(value.slice(currentOffset, currentOffset + numBytesForTotal), currentMessagePendingLength);\n                    currentMessagePendingLength += numBytesForTotal;\n                    currentOffset += numBytesForTotal;\n                    if (currentMessagePendingLength < 4) {\n                        break;\n                    }\n                    allocateMessage(new DataView(messageLengthBuffer.buffer).getUint32(0, false));\n                    messageLengthBuffer = null;\n                }\n                const numBytesToWrite = Math.min(currentMessageTotalLength - currentMessagePendingLength, chunkLength - currentOffset);\n                currentMessage.set(value.slice(currentOffset, currentOffset + numBytesToWrite), currentMessagePendingLength);\n                currentMessagePendingLength += numBytesToWrite;\n                currentOffset += numBytesToWrite;\n                if (currentMessageTotalLength && currentMessageTotalLength === currentMessagePendingLength) {\n                    yield currentMessage;\n                    currentMessage = null;\n                    currentMessageTotalLength = 0;\n                    currentMessagePendingLength = 0;\n                }\n            }\n        }\n    };\n    return {\n        [Symbol.asyncIterator]: iterator,\n    };\n}\n","export function getUnmarshalledStream(source, options) {\n    const messageUnmarshaller = getMessageUnmarshaller(options.deserializer, options.toUtf8);\n    return {\n        [Symbol.asyncIterator]: async function* () {\n            for await (const chunk of source) {\n                const message = options.eventStreamCodec.decode(chunk);\n                const type = await messageUnmarshaller(message);\n                if (type === undefined)\n                    continue;\n                yield type;\n            }\n        },\n    };\n}\nexport function getMessageUnmarshaller(deserializer, toUtf8) {\n    return async function (message) {\n        const { value: messageType } = message.headers[\":message-type\"];\n        if (messageType === \"error\") {\n            const unmodeledError = new Error(message.headers[\":error-message\"].value || \"UnknownError\");\n            unmodeledError.name = message.headers[\":error-code\"].value;\n            throw unmodeledError;\n        }\n        else if (messageType === \"exception\") {\n            const code = message.headers[\":exception-type\"].value;\n            const exception = { [code]: message };\n            const deserializedException = await deserializer(exception);\n            if (deserializedException.$unknown) {\n                const error = new Error(toUtf8(message.body));\n                error.name = code;\n                throw error;\n            }\n            throw deserializedException[code];\n        }\n        else if (messageType === \"event\") {\n            const event = {\n                [message.headers[\":event-type\"].value]: message,\n            };\n            const deserialized = await deserializer(event);\n            if (deserialized.$unknown)\n                return;\n            return deserialized;\n        }\n        else {\n            throw Error(`Unrecognizable event type: ${message.headers[\":event-type\"].value}`);\n        }\n    };\n}\n","import { EventStreamCodec, MessageDecoderStream, MessageEncoderStream, SmithyMessageDecoderStream, SmithyMessageEncoderStream, } from \"@smithy/eventstream-codec\";\nimport { getChunkedStream } from \"./getChunkedStream\";\nimport { getMessageUnmarshaller } from \"./getUnmarshalledStream\";\nexport class EventStreamMarshaller {\n    constructor({ utf8Encoder, utf8Decoder }) {\n        this.eventStreamCodec = new EventStreamCodec(utf8Encoder, utf8Decoder);\n        this.utfEncoder = utf8Encoder;\n    }\n    deserialize(body, deserializer) {\n        const inputStream = getChunkedStream(body);\n        return new SmithyMessageDecoderStream({\n            messageStream: new MessageDecoderStream({ inputStream, decoder: this.eventStreamCodec }),\n            deserializer: getMessageUnmarshaller(deserializer, this.utfEncoder),\n        });\n    }\n    serialize(inputStream, serializer) {\n        return new MessageEncoderStream({\n            messageStream: new SmithyMessageEncoderStream({ inputStream, serializer }),\n            encoder: this.eventStreamCodec,\n            includeEndFrame: true,\n        });\n    }\n}\n","export async function* readabletoIterable(readStream) {\n    let streamEnded = false;\n    let generationEnded = false;\n    const records = new Array();\n    readStream.on(\"error\", (err) => {\n        if (!streamEnded) {\n            streamEnded = true;\n        }\n        if (err) {\n            throw err;\n        }\n    });\n    readStream.on(\"data\", (data) => {\n        records.push(data);\n    });\n    readStream.on(\"end\", () => {\n        streamEnded = true;\n    });\n    while (!generationEnded) {\n        const value = await new Promise((resolve) => setTimeout(() => resolve(records.shift()), 0));\n        if (value) {\n            yield value;\n        }\n        generationEnded = streamEnded && records.length === 0;\n    }\n}\n","import { EventStreamMarshaller as UniversalEventStreamMarshaller } from \"@smithy/eventstream-serde-universal\";\nimport { Readable } from \"stream\";\nimport { readabletoIterable } from \"./utils\";\nexport class EventStreamMarshaller {\n    constructor({ utf8Encoder, utf8Decoder }) {\n        this.universalMarshaller = new UniversalEventStreamMarshaller({\n            utf8Decoder,\n            utf8Encoder,\n        });\n    }\n    deserialize(body, deserializer) {\n        const bodyIterable = typeof body[Symbol.asyncIterator] === \"function\" ? body : readabletoIterable(body);\n        return this.universalMarshaller.deserialize(bodyIterable, deserializer);\n    }\n    serialize(input, serializer) {\n        return Readable.from(this.universalMarshaller.serialize(input, serializer));\n    }\n}\n","import { EventStreamMarshaller } from \"./EventStreamMarshaller\";\nexport const eventStreamSerdeProvider = (options) => new EventStreamMarshaller(options);\n","const s = \"required\", t = \"fn\", u = \"argv\", v = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = { [s]: false, \"type\": \"String\" }, i = { [s]: true, \"default\": false, \"type\": \"Boolean\" }, j = { [v]: \"Endpoint\" }, k = { [t]: c, [u]: [{ [v]: \"UseFIPS\" }, true] }, l = { [t]: c, [u]: [{ [v]: \"UseDualStack\" }, true] }, m = {}, n = { [t]: \"getAttr\", [u]: [{ [v]: g }, \"supportsFIPS\"] }, o = { [t]: c, [u]: [true, { [t]: \"getAttr\", [u]: [{ [v]: g }, \"supportsDualStack\"] }] }, p = [k], q = [l], r = [{ [v]: \"Region\" }];\nconst _data = { version: \"1.0\", parameters: { Region: h, UseDualStack: i, UseFIPS: i, Endpoint: h }, rules: [{ conditions: [{ [t]: b, [u]: [j] }], rules: [{ conditions: p, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: d }, { conditions: q, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: d }, { endpoint: { url: j, properties: m, headers: m }, type: e }], type: f }, { conditions: [{ [t]: b, [u]: r }], rules: [{ conditions: [{ [t]: \"aws.partition\", [u]: r, assign: g }], rules: [{ conditions: [k, l], rules: [{ conditions: [{ [t]: c, [u]: [a, n] }, o], rules: [{ endpoint: { url: \"https://lambda-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: m, headers: m }, type: e }], type: f }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: d }], type: f }, { conditions: p, rules: [{ conditions: [{ [t]: c, [u]: [n, a] }], rules: [{ endpoint: { url: \"https://lambda-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: m, headers: m }, type: e }], type: f }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: d }], type: f }, { conditions: q, rules: [{ conditions: [o], rules: [{ endpoint: { url: \"https://lambda.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: m, headers: m }, type: e }], type: f }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: d }], type: f }, { endpoint: { url: \"https://lambda.{Region}.{PartitionResult#dnsSuffix}\", properties: m, headers: m }, type: e }], type: f }], type: f }, { error: \"Invalid Configuration: Missing Region\", type: d }] };\nexport const ruleSet = _data;\n","import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, EndpointCache, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nconst cache = new EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\"],\n});\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n","import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultLambdaHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2015-03-31\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultLambdaHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"Lambda\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","import packageInfo from \"../package.json\";\nimport { NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, emitWarningIfUnsupportedVersion as awsCheckVersion } from \"@aws-sdk/core\";\nimport { defaultProvider as credentialDefaultProvider } from \"@aws-sdk/credential-provider-node\";\nimport { NODE_APP_ID_CONFIG_OPTIONS, createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-node\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@smithy/config-resolver\";\nimport { eventStreamSerdeProvider } from \"@smithy/eventstream-serde-node\";\nimport { Hash } from \"@smithy/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@smithy/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@smithy/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@smithy/node-http-handler\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@smithy/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    awsCheckVersion(process.version);\n    const loaderConfig = {\n        profile: config?.profile,\n        logger: clientSharedValues.logger,\n    };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        authSchemePreference: config?.authSchemePreference ?? loadNodeConfig(NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, loaderConfig),\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? credentialDefaultProvider,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        eventStreamSerdeProvider: config?.eventStreamSerdeProvider ?? eventStreamSerdeProvider,\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        region: config?.region ??\n            loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, { ...NODE_REGION_CONFIG_FILE_OPTIONS, ...loaderConfig }),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }, config),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        userAgentAppId: config?.userAgentAppId ?? loadNodeConfig(NODE_APP_ID_CONFIG_OPTIONS, loaderConfig),\n    };\n};\n","export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = Object.assign(getAwsRegionExtensionConfiguration(runtimeConfig), getDefaultExtensionConfiguration(runtimeConfig), getHttpHandlerExtensionConfiguration(runtimeConfig), getHttpAuthExtensionConfiguration(runtimeConfig));\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, resolveAwsRegionExtensionConfiguration(extensionConfiguration), resolveDefaultRuntimeConfig(extensionConfiguration), resolveHttpHandlerRuntimeConfig(extensionConfiguration), resolveHttpAuthRuntimeConfig(extensionConfiguration));\n};\n","import { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { resolveEventStreamSerdeConfig, } from \"@smithy/eventstream-serde-config-resolver\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultLambdaHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class LambdaClient extends __Client {\n    config;\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveUserAgentConfig(_config_1);\n        const _config_3 = resolveRetryConfig(_config_2);\n        const _config_4 = resolveRegionConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveEndpointConfig(_config_5);\n        const _config_7 = resolveEventStreamSerdeConfig(_config_6);\n        const _config_8 = resolveHttpAuthSchemeConfig(_config_7);\n        const _config_9 = resolveRuntimeExtensions(_config_8, configuration?.extensions || []);\n        this.config = _config_9;\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: defaultLambdaHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class LambdaServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, LambdaServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { LambdaServiceException as __BaseException } from \"./LambdaServiceException\";\nexport class InvalidParameterValueException extends __BaseException {\n    name = \"InvalidParameterValueException\";\n    $fault = \"client\";\n    Type;\n    constructor(opts) {\n        super({\n            name: \"InvalidParameterValueException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidParameterValueException.prototype);\n        this.Type = opts.Type;\n    }\n}\nexport class PolicyLengthExceededException extends __BaseException {\n    name = \"PolicyLengthExceededException\";\n    $fault = \"client\";\n    Type;\n    constructor(opts) {\n        super({\n            name: \"PolicyLengthExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, PolicyLengthExceededException.prototype);\n        this.Type = opts.Type;\n    }\n}\nexport class PreconditionFailedException extends __BaseException {\n    name = \"PreconditionFailedException\";\n    $fault = \"client\";\n    Type;\n    constructor(opts) {\n        super({\n            name: \"PreconditionFailedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, PreconditionFailedException.prototype);\n        this.Type = opts.Type;\n    }\n}\nexport class ResourceConflictException extends __BaseException {\n    name = \"ResourceConflictException\";\n    $fault = \"client\";\n    Type;\n    constructor(opts) {\n        super({\n            name: \"ResourceConflictException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ResourceConflictException.prototype);\n        this.Type = opts.Type;\n    }\n}\nexport class ResourceNotFoundException extends __BaseException {\n    name = \"ResourceNotFoundException\";\n    $fault = \"client\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class ServiceException extends __BaseException {\n    name = \"ServiceException\";\n    $fault = \"server\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"ServiceException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ServiceException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport const ThrottleReason = {\n    CallerRateLimitExceeded: \"CallerRateLimitExceeded\",\n    ConcurrentInvocationLimitExceeded: \"ConcurrentInvocationLimitExceeded\",\n    ConcurrentSnapshotCreateLimitExceeded: \"ConcurrentSnapshotCreateLimitExceeded\",\n    FunctionInvocationRateLimitExceeded: \"FunctionInvocationRateLimitExceeded\",\n    ReservedFunctionConcurrentInvocationLimitExceeded: \"ReservedFunctionConcurrentInvocationLimitExceeded\",\n    ReservedFunctionInvocationRateLimitExceeded: \"ReservedFunctionInvocationRateLimitExceeded\",\n};\nexport class TooManyRequestsException extends __BaseException {\n    name = \"TooManyRequestsException\";\n    $fault = \"client\";\n    retryAfterSeconds;\n    Type;\n    Reason;\n    constructor(opts) {\n        super({\n            name: \"TooManyRequestsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, TooManyRequestsException.prototype);\n        this.retryAfterSeconds = opts.retryAfterSeconds;\n        this.Type = opts.Type;\n        this.Reason = opts.Reason;\n    }\n}\nexport const FunctionUrlAuthType = {\n    AWS_IAM: \"AWS_IAM\",\n    NONE: \"NONE\",\n};\nexport const KafkaSchemaRegistryAuthType = {\n    BASIC_AUTH: \"BASIC_AUTH\",\n    CLIENT_CERTIFICATE_TLS_AUTH: \"CLIENT_CERTIFICATE_TLS_AUTH\",\n    SERVER_ROOT_CA_CERTIFICATE: \"SERVER_ROOT_CA_CERTIFICATE\",\n};\nexport const SchemaRegistryEventRecordFormat = {\n    JSON: \"JSON\",\n    SOURCE: \"SOURCE\",\n};\nexport const KafkaSchemaValidationAttribute = {\n    KEY: \"KEY\",\n    VALUE: \"VALUE\",\n};\nexport const ApplicationLogLevel = {\n    Debug: \"DEBUG\",\n    Error: \"ERROR\",\n    Fatal: \"FATAL\",\n    Info: \"INFO\",\n    Trace: \"TRACE\",\n    Warn: \"WARN\",\n};\nexport const Architecture = {\n    arm64: \"arm64\",\n    x86_64: \"x86_64\",\n};\nexport const CodeSigningPolicy = {\n    Enforce: \"Enforce\",\n    Warn: \"Warn\",\n};\nexport const FullDocument = {\n    Default: \"Default\",\n    UpdateLookup: \"UpdateLookup\",\n};\nexport const FunctionResponseType = {\n    ReportBatchItemFailures: \"ReportBatchItemFailures\",\n};\nexport const EventSourceMappingMetric = {\n    EventCount: \"EventCount\",\n};\nexport const EndPointType = {\n    KAFKA_BOOTSTRAP_SERVERS: \"KAFKA_BOOTSTRAP_SERVERS\",\n};\nexport const SourceAccessType = {\n    BASIC_AUTH: \"BASIC_AUTH\",\n    CLIENT_CERTIFICATE_TLS_AUTH: \"CLIENT_CERTIFICATE_TLS_AUTH\",\n    SASL_SCRAM_256_AUTH: \"SASL_SCRAM_256_AUTH\",\n    SASL_SCRAM_512_AUTH: \"SASL_SCRAM_512_AUTH\",\n    SERVER_ROOT_CA_CERTIFICATE: \"SERVER_ROOT_CA_CERTIFICATE\",\n    VIRTUAL_HOST: \"VIRTUAL_HOST\",\n    VPC_SECURITY_GROUP: \"VPC_SECURITY_GROUP\",\n    VPC_SUBNET: \"VPC_SUBNET\",\n};\nexport const EventSourcePosition = {\n    AT_TIMESTAMP: \"AT_TIMESTAMP\",\n    LATEST: \"LATEST\",\n    TRIM_HORIZON: \"TRIM_HORIZON\",\n};\nexport class ResourceInUseException extends __BaseException {\n    name = \"ResourceInUseException\";\n    $fault = \"client\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"ResourceInUseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ResourceInUseException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class CodeSigningConfigNotFoundException extends __BaseException {\n    name = \"CodeSigningConfigNotFoundException\";\n    $fault = \"client\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"CodeSigningConfigNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, CodeSigningConfigNotFoundException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class CodeStorageExceededException extends __BaseException {\n    name = \"CodeStorageExceededException\";\n    $fault = \"client\";\n    Type;\n    constructor(opts) {\n        super({\n            name: \"CodeStorageExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, CodeStorageExceededException.prototype);\n        this.Type = opts.Type;\n    }\n}\nexport class CodeVerificationFailedException extends __BaseException {\n    name = \"CodeVerificationFailedException\";\n    $fault = \"client\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"CodeVerificationFailedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, CodeVerificationFailedException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport const LogFormat = {\n    Json: \"JSON\",\n    Text: \"Text\",\n};\nexport const SystemLogLevel = {\n    Debug: \"DEBUG\",\n    Info: \"INFO\",\n    Warn: \"WARN\",\n};\nexport const PackageType = {\n    Image: \"Image\",\n    Zip: \"Zip\",\n};\nexport const Runtime = {\n    dotnet6: \"dotnet6\",\n    dotnet8: \"dotnet8\",\n    dotnetcore10: \"dotnetcore1.0\",\n    dotnetcore20: \"dotnetcore2.0\",\n    dotnetcore21: \"dotnetcore2.1\",\n    dotnetcore31: \"dotnetcore3.1\",\n    go1x: \"go1.x\",\n    java11: \"java11\",\n    java17: \"java17\",\n    java21: \"java21\",\n    java8: \"java8\",\n    java8al2: \"java8.al2\",\n    nodejs: \"nodejs\",\n    nodejs10x: \"nodejs10.x\",\n    nodejs12x: \"nodejs12.x\",\n    nodejs14x: \"nodejs14.x\",\n    nodejs16x: \"nodejs16.x\",\n    nodejs18x: \"nodejs18.x\",\n    nodejs20x: \"nodejs20.x\",\n    nodejs22x: \"nodejs22.x\",\n    nodejs43: \"nodejs4.3\",\n    nodejs43edge: \"nodejs4.3-edge\",\n    nodejs610: \"nodejs6.10\",\n    nodejs810: \"nodejs8.10\",\n    provided: \"provided\",\n    providedal2: \"provided.al2\",\n    providedal2023: \"provided.al2023\",\n    python27: \"python2.7\",\n    python310: \"python3.10\",\n    python311: \"python3.11\",\n    python312: \"python3.12\",\n    python313: \"python3.13\",\n    python36: \"python3.6\",\n    python37: \"python3.7\",\n    python38: \"python3.8\",\n    python39: \"python3.9\",\n    ruby25: \"ruby2.5\",\n    ruby27: \"ruby2.7\",\n    ruby32: \"ruby3.2\",\n    ruby33: \"ruby3.3\",\n    ruby34: \"ruby3.4\",\n};\nexport const SnapStartApplyOn = {\n    None: \"None\",\n    PublishedVersions: \"PublishedVersions\",\n};\nexport const TracingMode = {\n    Active: \"Active\",\n    PassThrough: \"PassThrough\",\n};\nexport const LastUpdateStatus = {\n    Failed: \"Failed\",\n    InProgress: \"InProgress\",\n    Successful: \"Successful\",\n};\nexport const LastUpdateStatusReasonCode = {\n    DisabledKMSKey: \"DisabledKMSKey\",\n    EFSIOError: \"EFSIOError\",\n    EFSMountConnectivityError: \"EFSMountConnectivityError\",\n    EFSMountFailure: \"EFSMountFailure\",\n    EFSMountTimeout: \"EFSMountTimeout\",\n    EniLimitExceeded: \"EniLimitExceeded\",\n    FunctionError: \"FunctionError\",\n    ImageAccessDenied: \"ImageAccessDenied\",\n    ImageDeleted: \"ImageDeleted\",\n    InsufficientRolePermissions: \"InsufficientRolePermissions\",\n    InternalError: \"InternalError\",\n    InvalidConfiguration: \"InvalidConfiguration\",\n    InvalidImage: \"InvalidImage\",\n    InvalidRuntime: \"InvalidRuntime\",\n    InvalidSecurityGroup: \"InvalidSecurityGroup\",\n    InvalidStateKMSKey: \"InvalidStateKMSKey\",\n    InvalidSubnet: \"InvalidSubnet\",\n    InvalidZipFileException: \"InvalidZipFileException\",\n    KMSKeyAccessDenied: \"KMSKeyAccessDenied\",\n    KMSKeyNotFound: \"KMSKeyNotFound\",\n    SubnetOutOfIPAddresses: \"SubnetOutOfIPAddresses\",\n};\nexport const SnapStartOptimizationStatus = {\n    Off: \"Off\",\n    On: \"On\",\n};\nexport const State = {\n    Active: \"Active\",\n    Failed: \"Failed\",\n    Inactive: \"Inactive\",\n    Pending: \"Pending\",\n};\nexport const StateReasonCode = {\n    Creating: \"Creating\",\n    DisabledKMSKey: \"DisabledKMSKey\",\n    EFSIOError: \"EFSIOError\",\n    EFSMountConnectivityError: \"EFSMountConnectivityError\",\n    EFSMountFailure: \"EFSMountFailure\",\n    EFSMountTimeout: \"EFSMountTimeout\",\n    EniLimitExceeded: \"EniLimitExceeded\",\n    FunctionError: \"FunctionError\",\n    Idle: \"Idle\",\n    ImageAccessDenied: \"ImageAccessDenied\",\n    ImageDeleted: \"ImageDeleted\",\n    InsufficientRolePermissions: \"InsufficientRolePermissions\",\n    InternalError: \"InternalError\",\n    InvalidConfiguration: \"InvalidConfiguration\",\n    InvalidImage: \"InvalidImage\",\n    InvalidRuntime: \"InvalidRuntime\",\n    InvalidSecurityGroup: \"InvalidSecurityGroup\",\n    InvalidStateKMSKey: \"InvalidStateKMSKey\",\n    InvalidSubnet: \"InvalidSubnet\",\n    InvalidZipFileException: \"InvalidZipFileException\",\n    KMSKeyAccessDenied: \"KMSKeyAccessDenied\",\n    KMSKeyNotFound: \"KMSKeyNotFound\",\n    Restoring: \"Restoring\",\n    SubnetOutOfIPAddresses: \"SubnetOutOfIPAddresses\",\n};\nexport class InvalidCodeSignatureException extends __BaseException {\n    name = \"InvalidCodeSignatureException\";\n    $fault = \"client\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"InvalidCodeSignatureException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidCodeSignatureException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport const InvokeMode = {\n    BUFFERED: \"BUFFERED\",\n    RESPONSE_STREAM: \"RESPONSE_STREAM\",\n};\nexport const RecursiveLoop = {\n    Allow: \"Allow\",\n    Terminate: \"Terminate\",\n};\nexport const UpdateRuntimeOn = {\n    Auto: \"Auto\",\n    FunctionUpdate: \"FunctionUpdate\",\n    Manual: \"Manual\",\n};\nexport class EC2AccessDeniedException extends __BaseException {\n    name = \"EC2AccessDeniedException\";\n    $fault = \"server\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"EC2AccessDeniedException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, EC2AccessDeniedException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class EC2ThrottledException extends __BaseException {\n    name = \"EC2ThrottledException\";\n    $fault = \"server\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"EC2ThrottledException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, EC2ThrottledException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class EC2UnexpectedException extends __BaseException {\n    name = \"EC2UnexpectedException\";\n    $fault = \"server\";\n    Type;\n    Message;\n    EC2ErrorCode;\n    constructor(opts) {\n        super({\n            name: \"EC2UnexpectedException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, EC2UnexpectedException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n        this.EC2ErrorCode = opts.EC2ErrorCode;\n    }\n}\nexport class EFSIOException extends __BaseException {\n    name = \"EFSIOException\";\n    $fault = \"client\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"EFSIOException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, EFSIOException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class EFSMountConnectivityException extends __BaseException {\n    name = \"EFSMountConnectivityException\";\n    $fault = \"client\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"EFSMountConnectivityException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, EFSMountConnectivityException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class EFSMountFailureException extends __BaseException {\n    name = \"EFSMountFailureException\";\n    $fault = \"client\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"EFSMountFailureException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, EFSMountFailureException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class EFSMountTimeoutException extends __BaseException {\n    name = \"EFSMountTimeoutException\";\n    $fault = \"client\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"EFSMountTimeoutException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, EFSMountTimeoutException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class ENILimitReachedException extends __BaseException {\n    name = \"ENILimitReachedException\";\n    $fault = \"server\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"ENILimitReachedException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ENILimitReachedException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidRequestContentException extends __BaseException {\n    name = \"InvalidRequestContentException\";\n    $fault = \"client\";\n    Type;\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestContentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidRequestContentException.prototype);\n        this.Type = opts.Type;\n    }\n}\nexport class InvalidRuntimeException extends __BaseException {\n    name = \"InvalidRuntimeException\";\n    $fault = \"server\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"InvalidRuntimeException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidRuntimeException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidSecurityGroupIDException extends __BaseException {\n    name = \"InvalidSecurityGroupIDException\";\n    $fault = \"server\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"InvalidSecurityGroupIDException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidSecurityGroupIDException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidSubnetIDException extends __BaseException {\n    name = \"InvalidSubnetIDException\";\n    $fault = \"server\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"InvalidSubnetIDException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidSubnetIDException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class InvalidZipFileException extends __BaseException {\n    name = \"InvalidZipFileException\";\n    $fault = \"server\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"InvalidZipFileException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidZipFileException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport const InvocationType = {\n    DryRun: \"DryRun\",\n    Event: \"Event\",\n    RequestResponse: \"RequestResponse\",\n};\nexport const LogType = {\n    None: \"None\",\n    Tail: \"Tail\",\n};\nexport class KMSAccessDeniedException extends __BaseException {\n    name = \"KMSAccessDeniedException\";\n    $fault = \"server\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"KMSAccessDeniedException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, KMSAccessDeniedException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class KMSDisabledException extends __BaseException {\n    name = \"KMSDisabledException\";\n    $fault = \"server\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"KMSDisabledException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, KMSDisabledException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class KMSInvalidStateException extends __BaseException {\n    name = \"KMSInvalidStateException\";\n    $fault = \"server\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"KMSInvalidStateException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, KMSInvalidStateException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class KMSNotFoundException extends __BaseException {\n    name = \"KMSNotFoundException\";\n    $fault = \"server\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"KMSNotFoundException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, KMSNotFoundException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class RecursiveInvocationException extends __BaseException {\n    name = \"RecursiveInvocationException\";\n    $fault = \"client\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"RecursiveInvocationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, RecursiveInvocationException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class RequestTooLargeException extends __BaseException {\n    name = \"RequestTooLargeException\";\n    $fault = \"client\";\n    Type;\n    constructor(opts) {\n        super({\n            name: \"RequestTooLargeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, RequestTooLargeException.prototype);\n        this.Type = opts.Type;\n    }\n}\nexport class ResourceNotReadyException extends __BaseException {\n    name = \"ResourceNotReadyException\";\n    $fault = \"server\";\n    Type;\n    constructor(opts) {\n        super({\n            name: \"ResourceNotReadyException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ResourceNotReadyException.prototype);\n        this.Type = opts.Type;\n    }\n}\nexport class SnapStartException extends __BaseException {\n    name = \"SnapStartException\";\n    $fault = \"client\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"SnapStartException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, SnapStartException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class SnapStartNotReadyException extends __BaseException {\n    name = \"SnapStartNotReadyException\";\n    $fault = \"client\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"SnapStartNotReadyException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, SnapStartNotReadyException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class SnapStartTimeoutException extends __BaseException {\n    name = \"SnapStartTimeoutException\";\n    $fault = \"client\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"SnapStartTimeoutException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, SnapStartTimeoutException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class SubnetIPAddressLimitReachedException extends __BaseException {\n    name = \"SubnetIPAddressLimitReachedException\";\n    $fault = \"server\";\n    Type;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"SubnetIPAddressLimitReachedException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, SubnetIPAddressLimitReachedException.prototype);\n        this.Type = opts.Type;\n        this.Message = opts.Message;\n    }\n}\nexport class UnsupportedMediaTypeException extends __BaseException {\n    name = \"UnsupportedMediaTypeException\";\n    $fault = \"client\";\n    Type;\n    constructor(opts) {\n        super({\n            name: \"UnsupportedMediaTypeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, UnsupportedMediaTypeException.prototype);\n        this.Type = opts.Type;\n    }\n}\nexport const ResponseStreamingInvocationType = {\n    DryRun: \"DryRun\",\n    RequestResponse: \"RequestResponse\",\n};\nexport var InvokeWithResponseStreamResponseEvent;\n(function (InvokeWithResponseStreamResponseEvent) {\n    InvokeWithResponseStreamResponseEvent.visit = (value, visitor) => {\n        if (value.PayloadChunk !== undefined)\n            return visitor.PayloadChunk(value.PayloadChunk);\n        if (value.InvokeComplete !== undefined)\n            return visitor.InvokeComplete(value.InvokeComplete);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(InvokeWithResponseStreamResponseEvent || (InvokeWithResponseStreamResponseEvent = {}));\nexport const FunctionVersion = {\n    ALL: \"ALL\",\n};\nexport const ProvisionedConcurrencyStatusEnum = {\n    FAILED: \"FAILED\",\n    IN_PROGRESS: \"IN_PROGRESS\",\n    READY: \"READY\",\n};\nexport class ProvisionedConcurrencyConfigNotFoundException extends __BaseException {\n    name = \"ProvisionedConcurrencyConfigNotFoundException\";\n    $fault = \"client\";\n    Type;\n    constructor(opts) {\n        super({\n            name: \"ProvisionedConcurrencyConfigNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ProvisionedConcurrencyConfigNotFoundException.prototype);\n        this.Type = opts.Type;\n    }\n}\nexport const FunctionCodeFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ZipFile && { ZipFile: SENSITIVE_STRING }),\n});\nexport const EnvironmentFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Variables && { Variables: SENSITIVE_STRING }),\n});\nexport const CreateFunctionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Code && { Code: FunctionCodeFilterSensitiveLog(obj.Code) }),\n    ...(obj.Environment && { Environment: EnvironmentFilterSensitiveLog(obj.Environment) }),\n});\nexport const EnvironmentErrorFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Message && { Message: SENSITIVE_STRING }),\n});\nexport const EnvironmentResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Variables && { Variables: SENSITIVE_STRING }),\n    ...(obj.Error && { Error: EnvironmentErrorFilterSensitiveLog(obj.Error) }),\n});\nexport const ImageConfigErrorFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Message && { Message: SENSITIVE_STRING }),\n});\nexport const ImageConfigResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Error && { Error: ImageConfigErrorFilterSensitiveLog(obj.Error) }),\n});\nexport const RuntimeVersionErrorFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Message && { Message: SENSITIVE_STRING }),\n});\nexport const RuntimeVersionConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Error && { Error: RuntimeVersionErrorFilterSensitiveLog(obj.Error) }),\n});\nexport const FunctionConfigurationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Environment && { Environment: EnvironmentResponseFilterSensitiveLog(obj.Environment) }),\n    ...(obj.ImageConfigResponse && {\n        ImageConfigResponse: ImageConfigResponseFilterSensitiveLog(obj.ImageConfigResponse),\n    }),\n    ...(obj.RuntimeVersionConfig && {\n        RuntimeVersionConfig: RuntimeVersionConfigFilterSensitiveLog(obj.RuntimeVersionConfig),\n    }),\n});\nexport const GetFunctionResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Configuration && { Configuration: FunctionConfigurationFilterSensitiveLog(obj.Configuration) }),\n});\nexport const InvocationRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Payload && { Payload: SENSITIVE_STRING }),\n});\nexport const InvocationResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Payload && { Payload: SENSITIVE_STRING }),\n});\nexport const InvokeAsyncRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const InvokeWithResponseStreamRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Payload && { Payload: SENSITIVE_STRING }),\n});\nexport const InvokeResponseStreamUpdateFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Payload && { Payload: SENSITIVE_STRING }),\n});\nexport const InvokeWithResponseStreamResponseEventFilterSensitiveLog = (obj) => {\n    if (obj.PayloadChunk !== undefined)\n        return { PayloadChunk: InvokeResponseStreamUpdateFilterSensitiveLog(obj.PayloadChunk) };\n    if (obj.InvokeComplete !== undefined)\n        return { InvokeComplete: obj.InvokeComplete };\n    if (obj.$unknown !== undefined)\n        return { [obj.$unknown[0]]: \"UNKNOWN\" };\n};\nexport const InvokeWithResponseStreamResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.EventStream && { EventStream: \"STREAMING_CONTENT\" }),\n});\nexport const ListFunctionsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Functions && { Functions: obj.Functions.map((item) => FunctionConfigurationFilterSensitiveLog(item)) }),\n});\nexport const UpdateFunctionCodeRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ZipFile && { ZipFile: SENSITIVE_STRING }),\n});\nexport const UpdateFunctionConfigurationRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Environment && { Environment: EnvironmentFilterSensitiveLog(obj.Environment) }),\n});\nexport const ListVersionsByFunctionResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Versions && { Versions: obj.Versions.map((item) => FunctionConfigurationFilterSensitiveLog(item)) }),\n});\nexport const LayerVersionContentInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ZipFile && { ZipFile: SENSITIVE_STRING }),\n});\nexport const PublishLayerVersionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Content && { Content: LayerVersionContentInputFilterSensitiveLog(obj.Content) }),\n});\n","import { loadRestJsonErrorCode, parseJsonBody as parseBody, parseJsonErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { requestBuilder as rb } from \"@smithy/core\";\nimport { _json, collectBody, decorateServiceException as __decorateServiceException, expectBoolean as __expectBoolean, expectInt32 as __expectInt32, expectLong as __expectLong, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectObject as __expectObject, expectString as __expectString, isSerializableHeaderValue, limitedParseDouble as __limitedParseDouble, map, parseEpochTimestamp as __parseEpochTimestamp, serializeFloat as __serializeFloat, take, withBaseException, } from \"@smithy/smithy-client\";\nimport { LambdaServiceException as __BaseException } from \"../models/LambdaServiceException\";\nimport { CodeSigningConfigNotFoundException, CodeStorageExceededException, CodeVerificationFailedException, EC2AccessDeniedException, EC2ThrottledException, EC2UnexpectedException, EFSIOException, EFSMountConnectivityException, EFSMountFailureException, EFSMountTimeoutException, ENILimitReachedException, InvalidCodeSignatureException, InvalidParameterValueException, InvalidRequestContentException, InvalidRuntimeException, InvalidSecurityGroupIDException, InvalidSubnetIDException, InvalidZipFileException, KMSAccessDeniedException, KMSDisabledException, KMSInvalidStateException, KMSNotFoundException, PolicyLengthExceededException, PreconditionFailedException, ProvisionedConcurrencyConfigNotFoundException, RecursiveInvocationException, RequestTooLargeException, ResourceConflictException, ResourceInUseException, ResourceNotFoundException, ResourceNotReadyException, ServiceException, SnapStartException, SnapStartNotReadyException, SnapStartTimeoutException, SubnetIPAddressLimitReachedException, TooManyRequestsException, UnsupportedMediaTypeException, } from \"../models/models_0\";\nexport const se_AddLayerVersionPermissionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy\");\n    b.p(\"LayerName\", () => input.LayerName, \"{LayerName}\", false);\n    b.p(\"VersionNumber\", () => input.VersionNumber.toString(), \"{VersionNumber}\", false);\n    const query = map({\n        [_RI]: [, input[_RI]],\n    });\n    let body;\n    body = JSON.stringify(take(input, {\n        Action: [],\n        OrganizationId: [],\n        Principal: [],\n        StatementId: [],\n    }));\n    b.m(\"POST\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_AddPermissionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2015-03-31/functions/{FunctionName}/policy\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, input[_Q]],\n    });\n    let body;\n    body = JSON.stringify(take(input, {\n        Action: [],\n        EventSourceToken: [],\n        FunctionUrlAuthType: [],\n        Principal: [],\n        PrincipalOrgID: [],\n        RevisionId: [],\n        SourceAccount: [],\n        SourceArn: [],\n        StatementId: [],\n    }));\n    b.m(\"POST\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_CreateAliasCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2015-03-31/functions/{FunctionName}/aliases\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    let body;\n    body = JSON.stringify(take(input, {\n        Description: [],\n        FunctionVersion: [],\n        Name: [],\n        RoutingConfig: (_) => se_AliasRoutingConfiguration(_, context),\n    }));\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_CreateCodeSigningConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2020-04-22/code-signing-configs\");\n    let body;\n    body = JSON.stringify(take(input, {\n        AllowedPublishers: (_) => _json(_),\n        CodeSigningPolicies: (_) => _json(_),\n        Description: [],\n        Tags: (_) => _json(_),\n    }));\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_CreateEventSourceMappingCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2015-03-31/event-source-mappings\");\n    let body;\n    body = JSON.stringify(take(input, {\n        AmazonManagedKafkaEventSourceConfig: (_) => _json(_),\n        BatchSize: [],\n        BisectBatchOnFunctionError: [],\n        DestinationConfig: (_) => _json(_),\n        DocumentDBEventSourceConfig: (_) => _json(_),\n        Enabled: [],\n        EventSourceArn: [],\n        FilterCriteria: (_) => _json(_),\n        FunctionName: [],\n        FunctionResponseTypes: (_) => _json(_),\n        KMSKeyArn: [],\n        MaximumBatchingWindowInSeconds: [],\n        MaximumRecordAgeInSeconds: [],\n        MaximumRetryAttempts: [],\n        MetricsConfig: (_) => _json(_),\n        ParallelizationFactor: [],\n        ProvisionedPollerConfig: (_) => _json(_),\n        Queues: (_) => _json(_),\n        ScalingConfig: (_) => _json(_),\n        SelfManagedEventSource: (_) => _json(_),\n        SelfManagedKafkaEventSourceConfig: (_) => _json(_),\n        SourceAccessConfigurations: (_) => _json(_),\n        StartingPosition: [],\n        StartingPositionTimestamp: (_) => _.getTime() / 1_000,\n        Tags: (_) => _json(_),\n        Topics: (_) => _json(_),\n        TumblingWindowInSeconds: [],\n    }));\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_CreateFunctionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2015-03-31/functions\");\n    let body;\n    body = JSON.stringify(take(input, {\n        Architectures: (_) => _json(_),\n        Code: (_) => se_FunctionCode(_, context),\n        CodeSigningConfigArn: [],\n        DeadLetterConfig: (_) => _json(_),\n        Description: [],\n        Environment: (_) => _json(_),\n        EphemeralStorage: (_) => _json(_),\n        FileSystemConfigs: (_) => _json(_),\n        FunctionName: [],\n        Handler: [],\n        ImageConfig: (_) => _json(_),\n        KMSKeyArn: [],\n        Layers: (_) => _json(_),\n        LoggingConfig: (_) => _json(_),\n        MemorySize: [],\n        PackageType: [],\n        Publish: [],\n        Role: [],\n        Runtime: [],\n        SnapStart: (_) => _json(_),\n        Tags: (_) => _json(_),\n        Timeout: [],\n        TracingConfig: (_) => _json(_),\n        VpcConfig: (_) => _json(_),\n    }));\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_CreateFunctionUrlConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2021-10-31/functions/{FunctionName}/url\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, input[_Q]],\n    });\n    let body;\n    body = JSON.stringify(take(input, {\n        AuthType: [],\n        Cors: (_) => _json(_),\n        InvokeMode: [],\n    }));\n    b.m(\"POST\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteAliasCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2015-03-31/functions/{FunctionName}/aliases/{Name}\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    b.p(\"Name\", () => input.Name, \"{Name}\", false);\n    let body;\n    b.m(\"DELETE\").h(headers).b(body);\n    return b.build();\n};\nexport const se_DeleteCodeSigningConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2020-04-22/code-signing-configs/{CodeSigningConfigArn}\");\n    b.p(\"CodeSigningConfigArn\", () => input.CodeSigningConfigArn, \"{CodeSigningConfigArn}\", false);\n    let body;\n    b.m(\"DELETE\").h(headers).b(body);\n    return b.build();\n};\nexport const se_DeleteEventSourceMappingCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2015-03-31/event-source-mappings/{UUID}\");\n    b.p(\"UUID\", () => input.UUID, \"{UUID}\", false);\n    let body;\n    b.m(\"DELETE\").h(headers).b(body);\n    return b.build();\n};\nexport const se_DeleteFunctionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2015-03-31/functions/{FunctionName}\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, input[_Q]],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteFunctionCodeSigningConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2020-06-30/functions/{FunctionName}/code-signing-config\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    let body;\n    b.m(\"DELETE\").h(headers).b(body);\n    return b.build();\n};\nexport const se_DeleteFunctionConcurrencyCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2017-10-31/functions/{FunctionName}/concurrency\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    let body;\n    b.m(\"DELETE\").h(headers).b(body);\n    return b.build();\n};\nexport const se_DeleteFunctionEventInvokeConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2019-09-25/functions/{FunctionName}/event-invoke-config\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, input[_Q]],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteFunctionUrlConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2021-10-31/functions/{FunctionName}/url\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, input[_Q]],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_DeleteLayerVersionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2018-10-31/layers/{LayerName}/versions/{VersionNumber}\");\n    b.p(\"LayerName\", () => input.LayerName, \"{LayerName}\", false);\n    b.p(\"VersionNumber\", () => input.VersionNumber.toString(), \"{VersionNumber}\", false);\n    let body;\n    b.m(\"DELETE\").h(headers).b(body);\n    return b.build();\n};\nexport const se_DeleteProvisionedConcurrencyConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2019-09-30/functions/{FunctionName}/provisioned-concurrency\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, __expectNonNull(input[_Q], `Qualifier`)],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetAccountSettingsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2016-08-19/account-settings\");\n    let body;\n    b.m(\"GET\").h(headers).b(body);\n    return b.build();\n};\nexport const se_GetAliasCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2015-03-31/functions/{FunctionName}/aliases/{Name}\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    b.p(\"Name\", () => input.Name, \"{Name}\", false);\n    let body;\n    b.m(\"GET\").h(headers).b(body);\n    return b.build();\n};\nexport const se_GetCodeSigningConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2020-04-22/code-signing-configs/{CodeSigningConfigArn}\");\n    b.p(\"CodeSigningConfigArn\", () => input.CodeSigningConfigArn, \"{CodeSigningConfigArn}\", false);\n    let body;\n    b.m(\"GET\").h(headers).b(body);\n    return b.build();\n};\nexport const se_GetEventSourceMappingCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2015-03-31/event-source-mappings/{UUID}\");\n    b.p(\"UUID\", () => input.UUID, \"{UUID}\", false);\n    let body;\n    b.m(\"GET\").h(headers).b(body);\n    return b.build();\n};\nexport const se_GetFunctionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2015-03-31/functions/{FunctionName}\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, input[_Q]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetFunctionCodeSigningConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2020-06-30/functions/{FunctionName}/code-signing-config\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    let body;\n    b.m(\"GET\").h(headers).b(body);\n    return b.build();\n};\nexport const se_GetFunctionConcurrencyCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2019-09-30/functions/{FunctionName}/concurrency\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    let body;\n    b.m(\"GET\").h(headers).b(body);\n    return b.build();\n};\nexport const se_GetFunctionConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2015-03-31/functions/{FunctionName}/configuration\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, input[_Q]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetFunctionEventInvokeConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2019-09-25/functions/{FunctionName}/event-invoke-config\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, input[_Q]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetFunctionRecursionConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2024-08-31/functions/{FunctionName}/recursion-config\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    let body;\n    b.m(\"GET\").h(headers).b(body);\n    return b.build();\n};\nexport const se_GetFunctionUrlConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2021-10-31/functions/{FunctionName}/url\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, input[_Q]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetLayerVersionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2018-10-31/layers/{LayerName}/versions/{VersionNumber}\");\n    b.p(\"LayerName\", () => input.LayerName, \"{LayerName}\", false);\n    b.p(\"VersionNumber\", () => input.VersionNumber.toString(), \"{VersionNumber}\", false);\n    let body;\n    b.m(\"GET\").h(headers).b(body);\n    return b.build();\n};\nexport const se_GetLayerVersionByArnCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2018-10-31/layers\");\n    const query = map({\n        [_f]: [, \"LayerVersion\"],\n        [_A]: [, __expectNonNull(input[_A], `Arn`)],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetLayerVersionPolicyCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy\");\n    b.p(\"LayerName\", () => input.LayerName, \"{LayerName}\", false);\n    b.p(\"VersionNumber\", () => input.VersionNumber.toString(), \"{VersionNumber}\", false);\n    let body;\n    b.m(\"GET\").h(headers).b(body);\n    return b.build();\n};\nexport const se_GetPolicyCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2015-03-31/functions/{FunctionName}/policy\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, input[_Q]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetProvisionedConcurrencyConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2019-09-30/functions/{FunctionName}/provisioned-concurrency\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, __expectNonNull(input[_Q], `Qualifier`)],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_GetRuntimeManagementConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2021-07-20/functions/{FunctionName}/runtime-management-config\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, input[_Q]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_InvokeCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/octet-stream\",\n        [_xait]: input[_IT],\n        [_xalt]: input[_LT],\n        [_xacc]: input[_CC],\n    });\n    b.bp(\"/2015-03-31/functions/{FunctionName}/invocations\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, input[_Q]],\n    });\n    let body;\n    if (input.Payload !== undefined) {\n        body = input.Payload;\n    }\n    b.m(\"POST\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_InvokeAsyncCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/octet-stream\",\n    };\n    b.bp(\"/2014-11-13/functions/{FunctionName}/invoke-async\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    let body;\n    if (input.InvokeArgs !== undefined) {\n        body = input.InvokeArgs;\n    }\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_InvokeWithResponseStreamCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/octet-stream\",\n        [_xait]: input[_IT],\n        [_xalt]: input[_LT],\n        [_xacc]: input[_CC],\n    });\n    b.bp(\"/2021-11-15/functions/{FunctionName}/response-streaming-invocations\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, input[_Q]],\n    });\n    let body;\n    if (input.Payload !== undefined) {\n        body = input.Payload;\n    }\n    b.m(\"POST\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListAliasesCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2015-03-31/functions/{FunctionName}/aliases\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_FV]: [, input[_FV]],\n        [_M]: [, input[_M]],\n        [_MI]: [() => input.MaxItems !== void 0, () => input[_MI].toString()],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListCodeSigningConfigsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2020-04-22/code-signing-configs\");\n    const query = map({\n        [_M]: [, input[_M]],\n        [_MI]: [() => input.MaxItems !== void 0, () => input[_MI].toString()],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListEventSourceMappingsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2015-03-31/event-source-mappings\");\n    const query = map({\n        [_ESA]: [, input[_ESA]],\n        [_FN]: [, input[_FN]],\n        [_M]: [, input[_M]],\n        [_MI]: [() => input.MaxItems !== void 0, () => input[_MI].toString()],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListFunctionEventInvokeConfigsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2019-09-25/functions/{FunctionName}/event-invoke-config/list\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_M]: [, input[_M]],\n        [_MI]: [() => input.MaxItems !== void 0, () => input[_MI].toString()],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListFunctionsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2015-03-31/functions\");\n    const query = map({\n        [_MR]: [, input[_MR]],\n        [_FV]: [, input[_FV]],\n        [_M]: [, input[_M]],\n        [_MI]: [() => input.MaxItems !== void 0, () => input[_MI].toString()],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListFunctionsByCodeSigningConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2020-04-22/code-signing-configs/{CodeSigningConfigArn}/functions\");\n    b.p(\"CodeSigningConfigArn\", () => input.CodeSigningConfigArn, \"{CodeSigningConfigArn}\", false);\n    const query = map({\n        [_M]: [, input[_M]],\n        [_MI]: [() => input.MaxItems !== void 0, () => input[_MI].toString()],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListFunctionUrlConfigsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2021-10-31/functions/{FunctionName}/urls\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_M]: [, input[_M]],\n        [_MI]: [() => input.MaxItems !== void 0, () => input[_MI].toString()],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListLayersCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2018-10-31/layers\");\n    const query = map({\n        [_CR]: [, input[_CR]],\n        [_M]: [, input[_M]],\n        [_MI]: [() => input.MaxItems !== void 0, () => input[_MI].toString()],\n        [_CA]: [, input[_CA]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListLayerVersionsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2018-10-31/layers/{LayerName}/versions\");\n    b.p(\"LayerName\", () => input.LayerName, \"{LayerName}\", false);\n    const query = map({\n        [_CR]: [, input[_CR]],\n        [_M]: [, input[_M]],\n        [_MI]: [() => input.MaxItems !== void 0, () => input[_MI].toString()],\n        [_CA]: [, input[_CA]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListProvisionedConcurrencyConfigsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2019-09-30/functions/{FunctionName}/provisioned-concurrency\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_L]: [, \"ALL\"],\n        [_M]: [, input[_M]],\n        [_MI]: [() => input.MaxItems !== void 0, () => input[_MI].toString()],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_ListTagsCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2017-03-31/tags/{Resource}\");\n    b.p(\"Resource\", () => input.Resource, \"{Resource}\", false);\n    let body;\n    b.m(\"GET\").h(headers).b(body);\n    return b.build();\n};\nexport const se_ListVersionsByFunctionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2015-03-31/functions/{FunctionName}/versions\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_M]: [, input[_M]],\n        [_MI]: [() => input.MaxItems !== void 0, () => input[_MI].toString()],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PublishLayerVersionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2018-10-31/layers/{LayerName}/versions\");\n    b.p(\"LayerName\", () => input.LayerName, \"{LayerName}\", false);\n    let body;\n    body = JSON.stringify(take(input, {\n        CompatibleArchitectures: (_) => _json(_),\n        CompatibleRuntimes: (_) => _json(_),\n        Content: (_) => se_LayerVersionContentInput(_, context),\n        Description: [],\n        LicenseInfo: [],\n    }));\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_PublishVersionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2015-03-31/functions/{FunctionName}/versions\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    let body;\n    body = JSON.stringify(take(input, {\n        CodeSha256: [],\n        Description: [],\n        RevisionId: [],\n    }));\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_PutFunctionCodeSigningConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2020-06-30/functions/{FunctionName}/code-signing-config\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    let body;\n    body = JSON.stringify(take(input, {\n        CodeSigningConfigArn: [],\n    }));\n    b.m(\"PUT\").h(headers).b(body);\n    return b.build();\n};\nexport const se_PutFunctionConcurrencyCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2017-10-31/functions/{FunctionName}/concurrency\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    let body;\n    body = JSON.stringify(take(input, {\n        ReservedConcurrentExecutions: [],\n    }));\n    b.m(\"PUT\").h(headers).b(body);\n    return b.build();\n};\nexport const se_PutFunctionEventInvokeConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2019-09-25/functions/{FunctionName}/event-invoke-config\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, input[_Q]],\n    });\n    let body;\n    body = JSON.stringify(take(input, {\n        DestinationConfig: (_) => _json(_),\n        MaximumEventAgeInSeconds: [],\n        MaximumRetryAttempts: [],\n    }));\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutFunctionRecursionConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2024-08-31/functions/{FunctionName}/recursion-config\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    let body;\n    body = JSON.stringify(take(input, {\n        RecursiveLoop: [],\n    }));\n    b.m(\"PUT\").h(headers).b(body);\n    return b.build();\n};\nexport const se_PutProvisionedConcurrencyConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2019-09-30/functions/{FunctionName}/provisioned-concurrency\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, __expectNonNull(input[_Q], `Qualifier`)],\n    });\n    let body;\n    body = JSON.stringify(take(input, {\n        ProvisionedConcurrentExecutions: [],\n    }));\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_PutRuntimeManagementConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2021-07-20/functions/{FunctionName}/runtime-management-config\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, input[_Q]],\n    });\n    let body;\n    body = JSON.stringify(take(input, {\n        RuntimeVersionArn: [],\n        UpdateRuntimeOn: [],\n    }));\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_RemoveLayerVersionPermissionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy/{StatementId}\");\n    b.p(\"LayerName\", () => input.LayerName, \"{LayerName}\", false);\n    b.p(\"VersionNumber\", () => input.VersionNumber.toString(), \"{VersionNumber}\", false);\n    b.p(\"StatementId\", () => input.StatementId, \"{StatementId}\", false);\n    const query = map({\n        [_RI]: [, input[_RI]],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_RemovePermissionCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2015-03-31/functions/{FunctionName}/policy/{StatementId}\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    b.p(\"StatementId\", () => input.StatementId, \"{StatementId}\", false);\n    const query = map({\n        [_Q]: [, input[_Q]],\n        [_RI]: [, input[_RI]],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_TagResourceCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2017-03-31/tags/{Resource}\");\n    b.p(\"Resource\", () => input.Resource, \"{Resource}\", false);\n    let body;\n    body = JSON.stringify(take(input, {\n        Tags: (_) => _json(_),\n    }));\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_UntagResourceCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/2017-03-31/tags/{Resource}\");\n    b.p(\"Resource\", () => input.Resource, \"{Resource}\", false);\n    const query = map({\n        [_tK]: [__expectNonNull(input.TagKeys, `TagKeys`) != null, () => input[_TK] || []],\n    });\n    let body;\n    b.m(\"DELETE\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_UpdateAliasCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2015-03-31/functions/{FunctionName}/aliases/{Name}\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    b.p(\"Name\", () => input.Name, \"{Name}\", false);\n    let body;\n    body = JSON.stringify(take(input, {\n        Description: [],\n        FunctionVersion: [],\n        RevisionId: [],\n        RoutingConfig: (_) => se_AliasRoutingConfiguration(_, context),\n    }));\n    b.m(\"PUT\").h(headers).b(body);\n    return b.build();\n};\nexport const se_UpdateCodeSigningConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2020-04-22/code-signing-configs/{CodeSigningConfigArn}\");\n    b.p(\"CodeSigningConfigArn\", () => input.CodeSigningConfigArn, \"{CodeSigningConfigArn}\", false);\n    let body;\n    body = JSON.stringify(take(input, {\n        AllowedPublishers: (_) => _json(_),\n        CodeSigningPolicies: (_) => _json(_),\n        Description: [],\n    }));\n    b.m(\"PUT\").h(headers).b(body);\n    return b.build();\n};\nexport const se_UpdateEventSourceMappingCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2015-03-31/event-source-mappings/{UUID}\");\n    b.p(\"UUID\", () => input.UUID, \"{UUID}\", false);\n    let body;\n    body = JSON.stringify(take(input, {\n        AmazonManagedKafkaEventSourceConfig: (_) => _json(_),\n        BatchSize: [],\n        BisectBatchOnFunctionError: [],\n        DestinationConfig: (_) => _json(_),\n        DocumentDBEventSourceConfig: (_) => _json(_),\n        Enabled: [],\n        FilterCriteria: (_) => _json(_),\n        FunctionName: [],\n        FunctionResponseTypes: (_) => _json(_),\n        KMSKeyArn: [],\n        MaximumBatchingWindowInSeconds: [],\n        MaximumRecordAgeInSeconds: [],\n        MaximumRetryAttempts: [],\n        MetricsConfig: (_) => _json(_),\n        ParallelizationFactor: [],\n        ProvisionedPollerConfig: (_) => _json(_),\n        ScalingConfig: (_) => _json(_),\n        SelfManagedKafkaEventSourceConfig: (_) => _json(_),\n        SourceAccessConfigurations: (_) => _json(_),\n        TumblingWindowInSeconds: [],\n    }));\n    b.m(\"PUT\").h(headers).b(body);\n    return b.build();\n};\nexport const se_UpdateFunctionCodeCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2015-03-31/functions/{FunctionName}/code\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    let body;\n    body = JSON.stringify(take(input, {\n        Architectures: (_) => _json(_),\n        DryRun: [],\n        ImageUri: [],\n        Publish: [],\n        RevisionId: [],\n        S3Bucket: [],\n        S3Key: [],\n        S3ObjectVersion: [],\n        SourceKMSKeyArn: [],\n        ZipFile: (_) => context.base64Encoder(_),\n    }));\n    b.m(\"PUT\").h(headers).b(body);\n    return b.build();\n};\nexport const se_UpdateFunctionConfigurationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2015-03-31/functions/{FunctionName}/configuration\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    let body;\n    body = JSON.stringify(take(input, {\n        DeadLetterConfig: (_) => _json(_),\n        Description: [],\n        Environment: (_) => _json(_),\n        EphemeralStorage: (_) => _json(_),\n        FileSystemConfigs: (_) => _json(_),\n        Handler: [],\n        ImageConfig: (_) => _json(_),\n        KMSKeyArn: [],\n        Layers: (_) => _json(_),\n        LoggingConfig: (_) => _json(_),\n        MemorySize: [],\n        RevisionId: [],\n        Role: [],\n        Runtime: [],\n        SnapStart: (_) => _json(_),\n        Timeout: [],\n        TracingConfig: (_) => _json(_),\n        VpcConfig: (_) => _json(_),\n    }));\n    b.m(\"PUT\").h(headers).b(body);\n    return b.build();\n};\nexport const se_UpdateFunctionEventInvokeConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2019-09-25/functions/{FunctionName}/event-invoke-config\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, input[_Q]],\n    });\n    let body;\n    body = JSON.stringify(take(input, {\n        DestinationConfig: (_) => _json(_),\n        MaximumEventAgeInSeconds: [],\n        MaximumRetryAttempts: [],\n    }));\n    b.m(\"POST\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_UpdateFunctionUrlConfigCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/2021-10-31/functions/{FunctionName}/url\");\n    b.p(\"FunctionName\", () => input.FunctionName, \"{FunctionName}\", false);\n    const query = map({\n        [_Q]: [, input[_Q]],\n    });\n    let body;\n    body = JSON.stringify(take(input, {\n        AuthType: [],\n        Cors: (_) => _json(_),\n        InvokeMode: [],\n    }));\n    b.m(\"PUT\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const de_AddLayerVersionPermissionCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        RevisionId: __expectString,\n        Statement: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_AddPermissionCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        Statement: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_CreateAliasCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        AliasArn: __expectString,\n        Description: __expectString,\n        FunctionVersion: __expectString,\n        Name: __expectString,\n        RevisionId: __expectString,\n        RoutingConfig: (_) => de_AliasRoutingConfiguration(_, context),\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_CreateCodeSigningConfigCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        CodeSigningConfig: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_CreateEventSourceMappingCommand = async (output, context) => {\n    if (output.statusCode !== 202 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        AmazonManagedKafkaEventSourceConfig: _json,\n        BatchSize: __expectInt32,\n        BisectBatchOnFunctionError: __expectBoolean,\n        DestinationConfig: _json,\n        DocumentDBEventSourceConfig: _json,\n        EventSourceArn: __expectString,\n        EventSourceMappingArn: __expectString,\n        FilterCriteria: _json,\n        FilterCriteriaError: _json,\n        FunctionArn: __expectString,\n        FunctionResponseTypes: _json,\n        KMSKeyArn: __expectString,\n        LastModified: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastProcessingResult: __expectString,\n        MaximumBatchingWindowInSeconds: __expectInt32,\n        MaximumRecordAgeInSeconds: __expectInt32,\n        MaximumRetryAttempts: __expectInt32,\n        MetricsConfig: _json,\n        ParallelizationFactor: __expectInt32,\n        ProvisionedPollerConfig: _json,\n        Queues: _json,\n        ScalingConfig: _json,\n        SelfManagedEventSource: _json,\n        SelfManagedKafkaEventSourceConfig: _json,\n        SourceAccessConfigurations: _json,\n        StartingPosition: __expectString,\n        StartingPositionTimestamp: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        State: __expectString,\n        StateTransitionReason: __expectString,\n        Topics: _json,\n        TumblingWindowInSeconds: __expectInt32,\n        UUID: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_CreateFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        Architectures: _json,\n        CodeSha256: __expectString,\n        CodeSize: __expectLong,\n        DeadLetterConfig: _json,\n        Description: __expectString,\n        Environment: _json,\n        EphemeralStorage: _json,\n        FileSystemConfigs: _json,\n        FunctionArn: __expectString,\n        FunctionName: __expectString,\n        Handler: __expectString,\n        ImageConfigResponse: _json,\n        KMSKeyArn: __expectString,\n        LastModified: __expectString,\n        LastUpdateStatus: __expectString,\n        LastUpdateStatusReason: __expectString,\n        LastUpdateStatusReasonCode: __expectString,\n        Layers: _json,\n        LoggingConfig: _json,\n        MasterArn: __expectString,\n        MemorySize: __expectInt32,\n        PackageType: __expectString,\n        RevisionId: __expectString,\n        Role: __expectString,\n        Runtime: __expectString,\n        RuntimeVersionConfig: _json,\n        SigningJobArn: __expectString,\n        SigningProfileVersionArn: __expectString,\n        SnapStart: _json,\n        State: __expectString,\n        StateReason: __expectString,\n        StateReasonCode: __expectString,\n        Timeout: __expectInt32,\n        TracingConfig: _json,\n        Version: __expectString,\n        VpcConfig: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_CreateFunctionUrlConfigCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        AuthType: __expectString,\n        Cors: _json,\n        CreationTime: __expectString,\n        FunctionArn: __expectString,\n        FunctionUrl: __expectString,\n        InvokeMode: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_DeleteAliasCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteCodeSigningConfigCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteEventSourceMappingCommand = async (output, context) => {\n    if (output.statusCode !== 202 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        AmazonManagedKafkaEventSourceConfig: _json,\n        BatchSize: __expectInt32,\n        BisectBatchOnFunctionError: __expectBoolean,\n        DestinationConfig: _json,\n        DocumentDBEventSourceConfig: _json,\n        EventSourceArn: __expectString,\n        EventSourceMappingArn: __expectString,\n        FilterCriteria: _json,\n        FilterCriteriaError: _json,\n        FunctionArn: __expectString,\n        FunctionResponseTypes: _json,\n        KMSKeyArn: __expectString,\n        LastModified: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastProcessingResult: __expectString,\n        MaximumBatchingWindowInSeconds: __expectInt32,\n        MaximumRecordAgeInSeconds: __expectInt32,\n        MaximumRetryAttempts: __expectInt32,\n        MetricsConfig: _json,\n        ParallelizationFactor: __expectInt32,\n        ProvisionedPollerConfig: _json,\n        Queues: _json,\n        ScalingConfig: _json,\n        SelfManagedEventSource: _json,\n        SelfManagedKafkaEventSourceConfig: _json,\n        SourceAccessConfigurations: _json,\n        StartingPosition: __expectString,\n        StartingPositionTimestamp: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        State: __expectString,\n        StateTransitionReason: __expectString,\n        Topics: _json,\n        TumblingWindowInSeconds: __expectInt32,\n        UUID: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_DeleteFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteFunctionCodeSigningConfigCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteFunctionConcurrencyCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteFunctionEventInvokeConfigCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteFunctionUrlConfigCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteLayerVersionCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_DeleteProvisionedConcurrencyConfigCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_GetAccountSettingsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        AccountLimit: _json,\n        AccountUsage: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_GetAliasCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        AliasArn: __expectString,\n        Description: __expectString,\n        FunctionVersion: __expectString,\n        Name: __expectString,\n        RevisionId: __expectString,\n        RoutingConfig: (_) => de_AliasRoutingConfiguration(_, context),\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_GetCodeSigningConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        CodeSigningConfig: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_GetEventSourceMappingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        AmazonManagedKafkaEventSourceConfig: _json,\n        BatchSize: __expectInt32,\n        BisectBatchOnFunctionError: __expectBoolean,\n        DestinationConfig: _json,\n        DocumentDBEventSourceConfig: _json,\n        EventSourceArn: __expectString,\n        EventSourceMappingArn: __expectString,\n        FilterCriteria: _json,\n        FilterCriteriaError: _json,\n        FunctionArn: __expectString,\n        FunctionResponseTypes: _json,\n        KMSKeyArn: __expectString,\n        LastModified: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastProcessingResult: __expectString,\n        MaximumBatchingWindowInSeconds: __expectInt32,\n        MaximumRecordAgeInSeconds: __expectInt32,\n        MaximumRetryAttempts: __expectInt32,\n        MetricsConfig: _json,\n        ParallelizationFactor: __expectInt32,\n        ProvisionedPollerConfig: _json,\n        Queues: _json,\n        ScalingConfig: _json,\n        SelfManagedEventSource: _json,\n        SelfManagedKafkaEventSourceConfig: _json,\n        SourceAccessConfigurations: _json,\n        StartingPosition: __expectString,\n        StartingPositionTimestamp: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        State: __expectString,\n        StateTransitionReason: __expectString,\n        Topics: _json,\n        TumblingWindowInSeconds: __expectInt32,\n        UUID: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_GetFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        Code: _json,\n        Concurrency: _json,\n        Configuration: _json,\n        Tags: _json,\n        TagsError: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_GetFunctionCodeSigningConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        CodeSigningConfigArn: __expectString,\n        FunctionName: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_GetFunctionConcurrencyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        ReservedConcurrentExecutions: __expectInt32,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_GetFunctionConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        Architectures: _json,\n        CodeSha256: __expectString,\n        CodeSize: __expectLong,\n        DeadLetterConfig: _json,\n        Description: __expectString,\n        Environment: _json,\n        EphemeralStorage: _json,\n        FileSystemConfigs: _json,\n        FunctionArn: __expectString,\n        FunctionName: __expectString,\n        Handler: __expectString,\n        ImageConfigResponse: _json,\n        KMSKeyArn: __expectString,\n        LastModified: __expectString,\n        LastUpdateStatus: __expectString,\n        LastUpdateStatusReason: __expectString,\n        LastUpdateStatusReasonCode: __expectString,\n        Layers: _json,\n        LoggingConfig: _json,\n        MasterArn: __expectString,\n        MemorySize: __expectInt32,\n        PackageType: __expectString,\n        RevisionId: __expectString,\n        Role: __expectString,\n        Runtime: __expectString,\n        RuntimeVersionConfig: _json,\n        SigningJobArn: __expectString,\n        SigningProfileVersionArn: __expectString,\n        SnapStart: _json,\n        State: __expectString,\n        StateReason: __expectString,\n        StateReasonCode: __expectString,\n        Timeout: __expectInt32,\n        TracingConfig: _json,\n        Version: __expectString,\n        VpcConfig: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_GetFunctionEventInvokeConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        DestinationConfig: _json,\n        FunctionArn: __expectString,\n        LastModified: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        MaximumEventAgeInSeconds: __expectInt32,\n        MaximumRetryAttempts: __expectInt32,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_GetFunctionRecursionConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        RecursiveLoop: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_GetFunctionUrlConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        AuthType: __expectString,\n        Cors: _json,\n        CreationTime: __expectString,\n        FunctionArn: __expectString,\n        FunctionUrl: __expectString,\n        InvokeMode: __expectString,\n        LastModifiedTime: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_GetLayerVersionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        CompatibleArchitectures: _json,\n        CompatibleRuntimes: _json,\n        Content: _json,\n        CreatedDate: __expectString,\n        Description: __expectString,\n        LayerArn: __expectString,\n        LayerVersionArn: __expectString,\n        LicenseInfo: __expectString,\n        Version: __expectLong,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_GetLayerVersionByArnCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        CompatibleArchitectures: _json,\n        CompatibleRuntimes: _json,\n        Content: _json,\n        CreatedDate: __expectString,\n        Description: __expectString,\n        LayerArn: __expectString,\n        LayerVersionArn: __expectString,\n        LicenseInfo: __expectString,\n        Version: __expectLong,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_GetLayerVersionPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        Policy: __expectString,\n        RevisionId: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_GetPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        Policy: __expectString,\n        RevisionId: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_GetProvisionedConcurrencyConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        AllocatedProvisionedConcurrentExecutions: __expectInt32,\n        AvailableProvisionedConcurrentExecutions: __expectInt32,\n        LastModified: __expectString,\n        RequestedProvisionedConcurrentExecutions: __expectInt32,\n        Status: __expectString,\n        StatusReason: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_GetRuntimeManagementConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        FunctionArn: __expectString,\n        RuntimeVersionArn: __expectString,\n        UpdateRuntimeOn: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_InvokeCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_FE]: [, output.headers[_xafe]],\n        [_LR]: [, output.headers[_xalr]],\n        [_EV]: [, output.headers[_xaev]],\n    });\n    const data = await collectBody(output.body, context);\n    contents.Payload = data;\n    map(contents, {\n        StatusCode: [, output.statusCode],\n    });\n    return contents;\n};\nexport const de_InvokeAsyncCommand = async (output, context) => {\n    if (output.statusCode !== 202 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    map(contents, {\n        Status: [, output.statusCode],\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_InvokeWithResponseStreamCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_EV]: [, output.headers[_xaev]],\n        [_RSCT]: [, output.headers[_ct]],\n    });\n    const data = output.body;\n    contents.EventStream = de_InvokeWithResponseStreamResponseEvent(data, context);\n    map(contents, {\n        StatusCode: [, output.statusCode],\n    });\n    return contents;\n};\nexport const de_ListAliasesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        Aliases: (_) => de_AliasList(_, context),\n        NextMarker: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_ListCodeSigningConfigsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        CodeSigningConfigs: _json,\n        NextMarker: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_ListEventSourceMappingsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        EventSourceMappings: (_) => de_EventSourceMappingsList(_, context),\n        NextMarker: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_ListFunctionEventInvokeConfigsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        FunctionEventInvokeConfigs: (_) => de_FunctionEventInvokeConfigList(_, context),\n        NextMarker: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_ListFunctionsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        Functions: _json,\n        NextMarker: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_ListFunctionsByCodeSigningConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        FunctionArns: _json,\n        NextMarker: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_ListFunctionUrlConfigsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        FunctionUrlConfigs: _json,\n        NextMarker: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_ListLayersCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        Layers: _json,\n        NextMarker: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_ListLayerVersionsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        LayerVersions: _json,\n        NextMarker: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_ListProvisionedConcurrencyConfigsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        NextMarker: __expectString,\n        ProvisionedConcurrencyConfigs: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_ListTagsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        Tags: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_ListVersionsByFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        NextMarker: __expectString,\n        Versions: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_PublishLayerVersionCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        CompatibleArchitectures: _json,\n        CompatibleRuntimes: _json,\n        Content: _json,\n        CreatedDate: __expectString,\n        Description: __expectString,\n        LayerArn: __expectString,\n        LayerVersionArn: __expectString,\n        LicenseInfo: __expectString,\n        Version: __expectLong,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_PublishVersionCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        Architectures: _json,\n        CodeSha256: __expectString,\n        CodeSize: __expectLong,\n        DeadLetterConfig: _json,\n        Description: __expectString,\n        Environment: _json,\n        EphemeralStorage: _json,\n        FileSystemConfigs: _json,\n        FunctionArn: __expectString,\n        FunctionName: __expectString,\n        Handler: __expectString,\n        ImageConfigResponse: _json,\n        KMSKeyArn: __expectString,\n        LastModified: __expectString,\n        LastUpdateStatus: __expectString,\n        LastUpdateStatusReason: __expectString,\n        LastUpdateStatusReasonCode: __expectString,\n        Layers: _json,\n        LoggingConfig: _json,\n        MasterArn: __expectString,\n        MemorySize: __expectInt32,\n        PackageType: __expectString,\n        RevisionId: __expectString,\n        Role: __expectString,\n        Runtime: __expectString,\n        RuntimeVersionConfig: _json,\n        SigningJobArn: __expectString,\n        SigningProfileVersionArn: __expectString,\n        SnapStart: _json,\n        State: __expectString,\n        StateReason: __expectString,\n        StateReasonCode: __expectString,\n        Timeout: __expectInt32,\n        TracingConfig: _json,\n        Version: __expectString,\n        VpcConfig: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_PutFunctionCodeSigningConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        CodeSigningConfigArn: __expectString,\n        FunctionName: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_PutFunctionConcurrencyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        ReservedConcurrentExecutions: __expectInt32,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_PutFunctionEventInvokeConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        DestinationConfig: _json,\n        FunctionArn: __expectString,\n        LastModified: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        MaximumEventAgeInSeconds: __expectInt32,\n        MaximumRetryAttempts: __expectInt32,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_PutFunctionRecursionConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        RecursiveLoop: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_PutProvisionedConcurrencyConfigCommand = async (output, context) => {\n    if (output.statusCode !== 202 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        AllocatedProvisionedConcurrentExecutions: __expectInt32,\n        AvailableProvisionedConcurrentExecutions: __expectInt32,\n        LastModified: __expectString,\n        RequestedProvisionedConcurrentExecutions: __expectInt32,\n        Status: __expectString,\n        StatusReason: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_PutRuntimeManagementConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        FunctionArn: __expectString,\n        RuntimeVersionArn: __expectString,\n        UpdateRuntimeOn: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_RemoveLayerVersionPermissionCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_RemovePermissionCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_TagResourceCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_UntagResourceCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexport const de_UpdateAliasCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        AliasArn: __expectString,\n        Description: __expectString,\n        FunctionVersion: __expectString,\n        Name: __expectString,\n        RevisionId: __expectString,\n        RoutingConfig: (_) => de_AliasRoutingConfiguration(_, context),\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_UpdateCodeSigningConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        CodeSigningConfig: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_UpdateEventSourceMappingCommand = async (output, context) => {\n    if (output.statusCode !== 202 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        AmazonManagedKafkaEventSourceConfig: _json,\n        BatchSize: __expectInt32,\n        BisectBatchOnFunctionError: __expectBoolean,\n        DestinationConfig: _json,\n        DocumentDBEventSourceConfig: _json,\n        EventSourceArn: __expectString,\n        EventSourceMappingArn: __expectString,\n        FilterCriteria: _json,\n        FilterCriteriaError: _json,\n        FunctionArn: __expectString,\n        FunctionResponseTypes: _json,\n        KMSKeyArn: __expectString,\n        LastModified: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastProcessingResult: __expectString,\n        MaximumBatchingWindowInSeconds: __expectInt32,\n        MaximumRecordAgeInSeconds: __expectInt32,\n        MaximumRetryAttempts: __expectInt32,\n        MetricsConfig: _json,\n        ParallelizationFactor: __expectInt32,\n        ProvisionedPollerConfig: _json,\n        Queues: _json,\n        ScalingConfig: _json,\n        SelfManagedEventSource: _json,\n        SelfManagedKafkaEventSourceConfig: _json,\n        SourceAccessConfigurations: _json,\n        StartingPosition: __expectString,\n        StartingPositionTimestamp: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        State: __expectString,\n        StateTransitionReason: __expectString,\n        Topics: _json,\n        TumblingWindowInSeconds: __expectInt32,\n        UUID: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_UpdateFunctionCodeCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        Architectures: _json,\n        CodeSha256: __expectString,\n        CodeSize: __expectLong,\n        DeadLetterConfig: _json,\n        Description: __expectString,\n        Environment: _json,\n        EphemeralStorage: _json,\n        FileSystemConfigs: _json,\n        FunctionArn: __expectString,\n        FunctionName: __expectString,\n        Handler: __expectString,\n        ImageConfigResponse: _json,\n        KMSKeyArn: __expectString,\n        LastModified: __expectString,\n        LastUpdateStatus: __expectString,\n        LastUpdateStatusReason: __expectString,\n        LastUpdateStatusReasonCode: __expectString,\n        Layers: _json,\n        LoggingConfig: _json,\n        MasterArn: __expectString,\n        MemorySize: __expectInt32,\n        PackageType: __expectString,\n        RevisionId: __expectString,\n        Role: __expectString,\n        Runtime: __expectString,\n        RuntimeVersionConfig: _json,\n        SigningJobArn: __expectString,\n        SigningProfileVersionArn: __expectString,\n        SnapStart: _json,\n        State: __expectString,\n        StateReason: __expectString,\n        StateReasonCode: __expectString,\n        Timeout: __expectInt32,\n        TracingConfig: _json,\n        Version: __expectString,\n        VpcConfig: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_UpdateFunctionConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        Architectures: _json,\n        CodeSha256: __expectString,\n        CodeSize: __expectLong,\n        DeadLetterConfig: _json,\n        Description: __expectString,\n        Environment: _json,\n        EphemeralStorage: _json,\n        FileSystemConfigs: _json,\n        FunctionArn: __expectString,\n        FunctionName: __expectString,\n        Handler: __expectString,\n        ImageConfigResponse: _json,\n        KMSKeyArn: __expectString,\n        LastModified: __expectString,\n        LastUpdateStatus: __expectString,\n        LastUpdateStatusReason: __expectString,\n        LastUpdateStatusReasonCode: __expectString,\n        Layers: _json,\n        LoggingConfig: _json,\n        MasterArn: __expectString,\n        MemorySize: __expectInt32,\n        PackageType: __expectString,\n        RevisionId: __expectString,\n        Role: __expectString,\n        Runtime: __expectString,\n        RuntimeVersionConfig: _json,\n        SigningJobArn: __expectString,\n        SigningProfileVersionArn: __expectString,\n        SnapStart: _json,\n        State: __expectString,\n        StateReason: __expectString,\n        StateReasonCode: __expectString,\n        Timeout: __expectInt32,\n        TracingConfig: _json,\n        Version: __expectString,\n        VpcConfig: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_UpdateFunctionEventInvokeConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        DestinationConfig: _json,\n        FunctionArn: __expectString,\n        LastModified: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        MaximumEventAgeInSeconds: __expectInt32,\n        MaximumRetryAttempts: __expectInt32,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_UpdateFunctionUrlConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        AuthType: __expectString,\n        Cors: _json,\n        CreationTime: __expectString,\n        FunctionArn: __expectString,\n        FunctionUrl: __expectString,\n        InvokeMode: __expectString,\n        LastModifiedTime: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            throw await de_InvalidParameterValueExceptionRes(parsedOutput, context);\n        case \"PolicyLengthExceededException\":\n        case \"com.amazonaws.lambda#PolicyLengthExceededException\":\n            throw await de_PolicyLengthExceededExceptionRes(parsedOutput, context);\n        case \"PreconditionFailedException\":\n        case \"com.amazonaws.lambda#PreconditionFailedException\":\n            throw await de_PreconditionFailedExceptionRes(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            throw await de_ResourceConflictExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            throw await de_ServiceExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"CodeSigningConfigNotFoundException\":\n        case \"com.amazonaws.lambda#CodeSigningConfigNotFoundException\":\n            throw await de_CodeSigningConfigNotFoundExceptionRes(parsedOutput, context);\n        case \"CodeStorageExceededException\":\n        case \"com.amazonaws.lambda#CodeStorageExceededException\":\n            throw await de_CodeStorageExceededExceptionRes(parsedOutput, context);\n        case \"CodeVerificationFailedException\":\n        case \"com.amazonaws.lambda#CodeVerificationFailedException\":\n            throw await de_CodeVerificationFailedExceptionRes(parsedOutput, context);\n        case \"InvalidCodeSignatureException\":\n        case \"com.amazonaws.lambda#InvalidCodeSignatureException\":\n            throw await de_InvalidCodeSignatureExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.lambda#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        case \"ProvisionedConcurrencyConfigNotFoundException\":\n        case \"com.amazonaws.lambda#ProvisionedConcurrencyConfigNotFoundException\":\n            throw await de_ProvisionedConcurrencyConfigNotFoundExceptionRes(parsedOutput, context);\n        case \"EC2AccessDeniedException\":\n        case \"com.amazonaws.lambda#EC2AccessDeniedException\":\n            throw await de_EC2AccessDeniedExceptionRes(parsedOutput, context);\n        case \"EC2ThrottledException\":\n        case \"com.amazonaws.lambda#EC2ThrottledException\":\n            throw await de_EC2ThrottledExceptionRes(parsedOutput, context);\n        case \"EC2UnexpectedException\":\n        case \"com.amazonaws.lambda#EC2UnexpectedException\":\n            throw await de_EC2UnexpectedExceptionRes(parsedOutput, context);\n        case \"EFSIOException\":\n        case \"com.amazonaws.lambda#EFSIOException\":\n            throw await de_EFSIOExceptionRes(parsedOutput, context);\n        case \"EFSMountConnectivityException\":\n        case \"com.amazonaws.lambda#EFSMountConnectivityException\":\n            throw await de_EFSMountConnectivityExceptionRes(parsedOutput, context);\n        case \"EFSMountFailureException\":\n        case \"com.amazonaws.lambda#EFSMountFailureException\":\n            throw await de_EFSMountFailureExceptionRes(parsedOutput, context);\n        case \"EFSMountTimeoutException\":\n        case \"com.amazonaws.lambda#EFSMountTimeoutException\":\n            throw await de_EFSMountTimeoutExceptionRes(parsedOutput, context);\n        case \"ENILimitReachedException\":\n        case \"com.amazonaws.lambda#ENILimitReachedException\":\n            throw await de_ENILimitReachedExceptionRes(parsedOutput, context);\n        case \"InvalidRequestContentException\":\n        case \"com.amazonaws.lambda#InvalidRequestContentException\":\n            throw await de_InvalidRequestContentExceptionRes(parsedOutput, context);\n        case \"InvalidRuntimeException\":\n        case \"com.amazonaws.lambda#InvalidRuntimeException\":\n            throw await de_InvalidRuntimeExceptionRes(parsedOutput, context);\n        case \"InvalidSecurityGroupIDException\":\n        case \"com.amazonaws.lambda#InvalidSecurityGroupIDException\":\n            throw await de_InvalidSecurityGroupIDExceptionRes(parsedOutput, context);\n        case \"InvalidSubnetIDException\":\n        case \"com.amazonaws.lambda#InvalidSubnetIDException\":\n            throw await de_InvalidSubnetIDExceptionRes(parsedOutput, context);\n        case \"InvalidZipFileException\":\n        case \"com.amazonaws.lambda#InvalidZipFileException\":\n            throw await de_InvalidZipFileExceptionRes(parsedOutput, context);\n        case \"KMSAccessDeniedException\":\n        case \"com.amazonaws.lambda#KMSAccessDeniedException\":\n            throw await de_KMSAccessDeniedExceptionRes(parsedOutput, context);\n        case \"KMSDisabledException\":\n        case \"com.amazonaws.lambda#KMSDisabledException\":\n            throw await de_KMSDisabledExceptionRes(parsedOutput, context);\n        case \"KMSInvalidStateException\":\n        case \"com.amazonaws.lambda#KMSInvalidStateException\":\n            throw await de_KMSInvalidStateExceptionRes(parsedOutput, context);\n        case \"KMSNotFoundException\":\n        case \"com.amazonaws.lambda#KMSNotFoundException\":\n            throw await de_KMSNotFoundExceptionRes(parsedOutput, context);\n        case \"RecursiveInvocationException\":\n        case \"com.amazonaws.lambda#RecursiveInvocationException\":\n            throw await de_RecursiveInvocationExceptionRes(parsedOutput, context);\n        case \"RequestTooLargeException\":\n        case \"com.amazonaws.lambda#RequestTooLargeException\":\n            throw await de_RequestTooLargeExceptionRes(parsedOutput, context);\n        case \"ResourceNotReadyException\":\n        case \"com.amazonaws.lambda#ResourceNotReadyException\":\n            throw await de_ResourceNotReadyExceptionRes(parsedOutput, context);\n        case \"SnapStartException\":\n        case \"com.amazonaws.lambda#SnapStartException\":\n            throw await de_SnapStartExceptionRes(parsedOutput, context);\n        case \"SnapStartNotReadyException\":\n        case \"com.amazonaws.lambda#SnapStartNotReadyException\":\n            throw await de_SnapStartNotReadyExceptionRes(parsedOutput, context);\n        case \"SnapStartTimeoutException\":\n        case \"com.amazonaws.lambda#SnapStartTimeoutException\":\n            throw await de_SnapStartTimeoutExceptionRes(parsedOutput, context);\n        case \"SubnetIPAddressLimitReachedException\":\n        case \"com.amazonaws.lambda#SubnetIPAddressLimitReachedException\":\n            throw await de_SubnetIPAddressLimitReachedExceptionRes(parsedOutput, context);\n        case \"UnsupportedMediaTypeException\":\n        case \"com.amazonaws.lambda#UnsupportedMediaTypeException\":\n            throw await de_UnsupportedMediaTypeExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst throwDefaultError = withBaseException(__BaseException);\nconst de_CodeSigningConfigNotFoundExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new CodeSigningConfigNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_CodeStorageExceededExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Type: __expectString,\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new CodeStorageExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_CodeVerificationFailedExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new CodeVerificationFailedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_EC2AccessDeniedExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new EC2AccessDeniedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_EC2ThrottledExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new EC2ThrottledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_EC2UnexpectedExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        EC2ErrorCode: __expectString,\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new EC2UnexpectedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_EFSIOExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new EFSIOException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_EFSMountConnectivityExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new EFSMountConnectivityException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_EFSMountFailureExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new EFSMountFailureException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_EFSMountTimeoutExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new EFSMountTimeoutException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ENILimitReachedExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ENILimitReachedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidCodeSignatureExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidCodeSignatureException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidParameterValueExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Type: __expectString,\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidParameterValueException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidRequestContentExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Type: __expectString,\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidRequestContentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidRuntimeExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidRuntimeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidSecurityGroupIDExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidSecurityGroupIDException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidSubnetIDExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidSubnetIDException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidZipFileExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidZipFileException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_KMSAccessDeniedExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new KMSAccessDeniedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_KMSDisabledExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new KMSDisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_KMSInvalidStateExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new KMSInvalidStateException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_KMSNotFoundExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new KMSNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_PolicyLengthExceededExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Type: __expectString,\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new PolicyLengthExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_PreconditionFailedExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Type: __expectString,\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new PreconditionFailedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ProvisionedConcurrencyConfigNotFoundExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Type: __expectString,\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ProvisionedConcurrencyConfigNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_RecursiveInvocationExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new RecursiveInvocationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_RequestTooLargeExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Type: __expectString,\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new RequestTooLargeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ResourceConflictExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Type: __expectString,\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ResourceConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ResourceInUseExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ResourceInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ResourceNotReadyExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Type: __expectString,\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ResourceNotReadyException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ServiceExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ServiceException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_SnapStartExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new SnapStartException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_SnapStartNotReadyExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new SnapStartNotReadyException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_SnapStartTimeoutExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new SnapStartTimeoutException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_SubnetIPAddressLimitReachedExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Message: __expectString,\n        Type: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new SubnetIPAddressLimitReachedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_TooManyRequestsExceptionRes = async (parsedOutput, context) => {\n    const contents = map({\n        [_rAS]: [, parsedOutput.headers[_ra]],\n    });\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Reason: __expectString,\n        Type: __expectString,\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new TooManyRequestsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_UnsupportedMediaTypeExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        Type: __expectString,\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new UnsupportedMediaTypeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvokeWithResponseStreamResponseEvent = (output, context) => {\n    return context.eventStreamMarshaller.deserialize(output, async (event) => {\n        if (event[\"PayloadChunk\"] != null) {\n            return {\n                PayloadChunk: await de_InvokeResponseStreamUpdate_event(event[\"PayloadChunk\"], context),\n            };\n        }\n        if (event[\"InvokeComplete\"] != null) {\n            return {\n                InvokeComplete: await de_InvokeWithResponseStreamCompleteEvent_event(event[\"InvokeComplete\"], context),\n            };\n        }\n        return { $unknown: event };\n    });\n};\nconst de_InvokeResponseStreamUpdate_event = async (output, context) => {\n    const contents = {};\n    contents.Payload = output.body;\n    return contents;\n};\nconst de_InvokeWithResponseStreamCompleteEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, _json(data));\n    return contents;\n};\nconst se_AdditionalVersionWeights = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = __serializeFloat(value);\n        return acc;\n    }, {});\n};\nconst se_AliasRoutingConfiguration = (input, context) => {\n    return take(input, {\n        AdditionalVersionWeights: (_) => se_AdditionalVersionWeights(_, context),\n    });\n};\nconst se_FunctionCode = (input, context) => {\n    return take(input, {\n        ImageUri: [],\n        S3Bucket: [],\n        S3Key: [],\n        S3ObjectVersion: [],\n        SourceKMSKeyArn: [],\n        ZipFile: context.base64Encoder,\n    });\n};\nconst se_LayerVersionContentInput = (input, context) => {\n    return take(input, {\n        S3Bucket: [],\n        S3Key: [],\n        S3ObjectVersion: [],\n        ZipFile: context.base64Encoder,\n    });\n};\nconst de_AdditionalVersionWeights = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = __limitedParseDouble(value);\n        return acc;\n    }, {});\n};\nconst de_AliasConfiguration = (output, context) => {\n    return take(output, {\n        AliasArn: __expectString,\n        Description: __expectString,\n        FunctionVersion: __expectString,\n        Name: __expectString,\n        RevisionId: __expectString,\n        RoutingConfig: (_) => de_AliasRoutingConfiguration(_, context),\n    });\n};\nconst de_AliasList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AliasConfiguration(entry, context);\n    });\n    return retVal;\n};\nconst de_AliasRoutingConfiguration = (output, context) => {\n    return take(output, {\n        AdditionalVersionWeights: (_) => de_AdditionalVersionWeights(_, context),\n    });\n};\nconst de_EventSourceMappingConfiguration = (output, context) => {\n    return take(output, {\n        AmazonManagedKafkaEventSourceConfig: _json,\n        BatchSize: __expectInt32,\n        BisectBatchOnFunctionError: __expectBoolean,\n        DestinationConfig: _json,\n        DocumentDBEventSourceConfig: _json,\n        EventSourceArn: __expectString,\n        EventSourceMappingArn: __expectString,\n        FilterCriteria: _json,\n        FilterCriteriaError: _json,\n        FunctionArn: __expectString,\n        FunctionResponseTypes: _json,\n        KMSKeyArn: __expectString,\n        LastModified: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastProcessingResult: __expectString,\n        MaximumBatchingWindowInSeconds: __expectInt32,\n        MaximumRecordAgeInSeconds: __expectInt32,\n        MaximumRetryAttempts: __expectInt32,\n        MetricsConfig: _json,\n        ParallelizationFactor: __expectInt32,\n        ProvisionedPollerConfig: _json,\n        Queues: _json,\n        ScalingConfig: _json,\n        SelfManagedEventSource: _json,\n        SelfManagedKafkaEventSourceConfig: _json,\n        SourceAccessConfigurations: _json,\n        StartingPosition: __expectString,\n        StartingPositionTimestamp: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        State: __expectString,\n        StateTransitionReason: __expectString,\n        Topics: _json,\n        TumblingWindowInSeconds: __expectInt32,\n        UUID: __expectString,\n    });\n};\nconst de_EventSourceMappingsList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_EventSourceMappingConfiguration(entry, context);\n    });\n    return retVal;\n};\nconst de_FunctionEventInvokeConfig = (output, context) => {\n    return take(output, {\n        DestinationConfig: _json,\n        FunctionArn: __expectString,\n        LastModified: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        MaximumEventAgeInSeconds: __expectInt32,\n        MaximumRetryAttempts: __expectInt32,\n    });\n};\nconst de_FunctionEventInvokeConfigList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_FunctionEventInvokeConfig(entry, context);\n    });\n    return retVal;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst _A = \"Arn\";\nconst _CA = \"CompatibleArchitecture\";\nconst _CC = \"ClientContext\";\nconst _CR = \"CompatibleRuntime\";\nconst _ESA = \"EventSourceArn\";\nconst _EV = \"ExecutedVersion\";\nconst _FE = \"FunctionError\";\nconst _FN = \"FunctionName\";\nconst _FV = \"FunctionVersion\";\nconst _IT = \"InvocationType\";\nconst _L = \"List\";\nconst _LR = \"LogResult\";\nconst _LT = \"LogType\";\nconst _M = \"Marker\";\nconst _MI = \"MaxItems\";\nconst _MR = \"MasterRegion\";\nconst _Q = \"Qualifier\";\nconst _RI = \"RevisionId\";\nconst _RSCT = \"ResponseStreamContentType\";\nconst _TK = \"TagKeys\";\nconst _ct = \"content-type\";\nconst _f = \"find\";\nconst _rAS = \"retryAfterSeconds\";\nconst _ra = \"retry-after\";\nconst _tK = \"tagKeys\";\nconst _xacc = \"x-amz-client-context\";\nconst _xaev = \"x-amz-executed-version\";\nconst _xafe = \"x-amz-function-error\";\nconst _xait = \"x-amz-invocation-type\";\nconst _xalr = \"x-amz-log-result\";\nconst _xalt = \"x-amz-log-type\";\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { InvocationRequestFilterSensitiveLog, InvocationResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_InvokeCommand, se_InvokeCommand } from \"../protocols/Aws_restJson1\";\nexport { $Command };\nexport class InvokeCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSGirApiService\", \"Invoke\", {})\n    .n(\"LambdaClient\", \"InvokeCommand\")\n    .f(InvocationRequestFilterSensitiveLog, InvocationResponseFilterSensitiveLog)\n    .ser(se_InvokeCommand)\n    .de(de_InvokeCommand)\n    .build() {\n}\n","\n/** Generated by Serverless WarmUp Plugin **/\n\nimport { LambdaClient, InvokeCommand } from '@aws-sdk/client-lambda';\n\nconst uninstrumentedLambdaClient = new LambdaClient({\n  apiVersion: '2015-03-31',\n  region: 'ap-northeast-2'\n});\n\nconst lambdaClient = uninstrumentedLambdaClient;\n\nconst functions = [\n  {\n    \"name\": \"flood-info-backend-dev-getFloodData\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-getHanRiverData\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-getFloodDataByLocation\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-getMultiSourceData\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-getMultiSourceDataList\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-refreshFloodData\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-refreshRegionData\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-getDataStatus\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-cleanupOldData\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-getSafeRoute\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-checkProximity\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-getAlternativeRoute\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-geocodeAddress\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-reverseGeocode\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-websocketConnect\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-websocketDisconnect\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-websocketMessage\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-scheduledRefresh\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-dailyCleanup\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-healthCheck\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  },\n  {\n    \"name\": \"flood-info-backend-dev-getSystemStatus\",\n    \"config\": {\n      \"enabled\": true,\n      \"payload\": \"{\\\"source\\\":\\\"serverless-plugin-warmup\\\"}\",\n      \"concurrency\": 1\n    }\n  }\n];\n\nfunction logVerbose(str) {\n  console.log(str);\n}\n\nfunction getConcurrency(func, envVars) {\n  const functionConcurrency = envVars[`WARMUP_CONCURRENCY_${func.name.toUpperCase().replace(/-/g, '_')}`];\n\n  if (functionConcurrency) {\n    const concurrency = parseInt(functionConcurrency);\n    logVerbose(`Warming up function: ${func.name} with concurrency: ${concurrency} (from function-specific environment variable)`);\n    return concurrency;\n  }\n\n  if (envVars.WARMUP_CONCURRENCY) {\n    const concurrency = parseInt(envVars.WARMUP_CONCURRENCY);\n    logVerbose(`Warming up function: ${func.name} with concurrency: ${concurrency} (from global environment variable)`);\n    return concurrency;\n  }\n\n  const concurrency = parseInt(func.config.concurrency);\n  logVerbose(`Warming up function: ${func.name} with concurrency: ${concurrency}`);\n  return concurrency;\n}\n\nexport const warmUp = async (event, context) => {\n  logVerbose('Warm Up Start');\n\n  const invokes = await Promise.all(functions.map(async (func) => {\n    const concurrency = getConcurrency(func, process.env);\n\n    const clientContext = func.config.clientContext !== undefined\n      ? func.config.clientContext\n      : func.config.payload;\n\n    const invokeCommand = new InvokeCommand({\n      ClientContext: clientContext\n        ? Buffer.from(`{\"custom\":${clientContext}}`).toString('base64')\n        : undefined,\n      FunctionName: func.name,\n      InvocationType: 'RequestResponse',\n      LogType: 'None',\n      Qualifier: func.config.alias || process.env.SERVERLESS_ALIAS,\n      Payload: func.config.payload\n    });\n\n    try {\n      await Promise.all(Array(concurrency).fill(0).map(async () => await lambdaClient.send(invokeCommand)));\n      logVerbose(`Warm Up Invoke Success: ${func.name}`);\n      return true;\n    } catch (e) {\n      console.error(`Warm Up Invoke Error: ${func.name}`, e);\n      return false;\n    }\n  }));\n\n  logVerbose(`Warm Up Finished with ${invokes.filter(r => !r).length} invoke errors`);\n}"],"names":[],"sourceRoot":""}